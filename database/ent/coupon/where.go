// Code generated by ent, DO NOT EDIT.

package coupon

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldID, id))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldDeleteTime, v))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldScenicAreaID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldName, v))
}

// CouponNo applies equality check predicate on the "coupon_no" field. It's identical to CouponNoEQ.
func CouponNo(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCouponNo, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUserID, v))
}

// LimitAmount applies equality check predicate on the "limit_amount" field. It's identical to LimitAmountEQ.
func LimitAmount(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldLimitAmount, v))
}

// CouponAmount applies equality check predicate on the "coupon_amount" field. It's identical to CouponAmountEQ.
func CouponAmount(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCouponAmount, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldState, v))
}

// ValidStartTime applies equality check predicate on the "valid_start_time" field. It's identical to ValidStartTimeEQ.
func ValidStartTime(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldValidStartTime, v))
}

// ValidEndTime applies equality check predicate on the "valid_end_time" field. It's identical to ValidEndTimeEQ.
func ValidEndTime(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldValidEndTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUpdateTime, v))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldDeleteTime))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDGT applies the GT predicate on the "scenic_area_id" field.
func ScenicAreaIDGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldScenicAreaID, v))
}

// ScenicAreaIDGTE applies the GTE predicate on the "scenic_area_id" field.
func ScenicAreaIDGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldScenicAreaID, v))
}

// ScenicAreaIDLT applies the LT predicate on the "scenic_area_id" field.
func ScenicAreaIDLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldScenicAreaID, v))
}

// ScenicAreaIDLTE applies the LTE predicate on the "scenic_area_id" field.
func ScenicAreaIDLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldScenicAreaID, v))
}

// ScenicAreaIDIsNil applies the IsNil predicate on the "scenic_area_id" field.
func ScenicAreaIDIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldScenicAreaID))
}

// ScenicAreaIDNotNil applies the NotNil predicate on the "scenic_area_id" field.
func ScenicAreaIDNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldScenicAreaID))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldName, v))
}

// CouponNoEQ applies the EQ predicate on the "coupon_no" field.
func CouponNoEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCouponNo, v))
}

// CouponNoNEQ applies the NEQ predicate on the "coupon_no" field.
func CouponNoNEQ(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCouponNo, v))
}

// CouponNoIn applies the In predicate on the "coupon_no" field.
func CouponNoIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCouponNo, vs...))
}

// CouponNoNotIn applies the NotIn predicate on the "coupon_no" field.
func CouponNoNotIn(vs ...string) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCouponNo, vs...))
}

// CouponNoGT applies the GT predicate on the "coupon_no" field.
func CouponNoGT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCouponNo, v))
}

// CouponNoGTE applies the GTE predicate on the "coupon_no" field.
func CouponNoGTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCouponNo, v))
}

// CouponNoLT applies the LT predicate on the "coupon_no" field.
func CouponNoLT(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCouponNo, v))
}

// CouponNoLTE applies the LTE predicate on the "coupon_no" field.
func CouponNoLTE(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCouponNo, v))
}

// CouponNoContains applies the Contains predicate on the "coupon_no" field.
func CouponNoContains(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContains(FieldCouponNo, v))
}

// CouponNoHasPrefix applies the HasPrefix predicate on the "coupon_no" field.
func CouponNoHasPrefix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasPrefix(FieldCouponNo, v))
}

// CouponNoHasSuffix applies the HasSuffix predicate on the "coupon_no" field.
func CouponNoHasSuffix(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldHasSuffix(FieldCouponNo, v))
}

// CouponNoEqualFold applies the EqualFold predicate on the "coupon_no" field.
func CouponNoEqualFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldEqualFold(FieldCouponNo, v))
}

// CouponNoContainsFold applies the ContainsFold predicate on the "coupon_no" field.
func CouponNoContainsFold(v string) predicate.Coupon {
	return predicate.Coupon(sql.FieldContainsFold(FieldCouponNo, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldUserID, v))
}

// LimitAmountEQ applies the EQ predicate on the "limit_amount" field.
func LimitAmountEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldLimitAmount, v))
}

// LimitAmountNEQ applies the NEQ predicate on the "limit_amount" field.
func LimitAmountNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldLimitAmount, v))
}

// LimitAmountIn applies the In predicate on the "limit_amount" field.
func LimitAmountIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldLimitAmount, vs...))
}

// LimitAmountNotIn applies the NotIn predicate on the "limit_amount" field.
func LimitAmountNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldLimitAmount, vs...))
}

// LimitAmountGT applies the GT predicate on the "limit_amount" field.
func LimitAmountGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldLimitAmount, v))
}

// LimitAmountGTE applies the GTE predicate on the "limit_amount" field.
func LimitAmountGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldLimitAmount, v))
}

// LimitAmountLT applies the LT predicate on the "limit_amount" field.
func LimitAmountLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldLimitAmount, v))
}

// LimitAmountLTE applies the LTE predicate on the "limit_amount" field.
func LimitAmountLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldLimitAmount, v))
}

// CouponAmountEQ applies the EQ predicate on the "coupon_amount" field.
func CouponAmountEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCouponAmount, v))
}

// CouponAmountNEQ applies the NEQ predicate on the "coupon_amount" field.
func CouponAmountNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCouponAmount, v))
}

// CouponAmountIn applies the In predicate on the "coupon_amount" field.
func CouponAmountIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCouponAmount, vs...))
}

// CouponAmountNotIn applies the NotIn predicate on the "coupon_amount" field.
func CouponAmountNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCouponAmount, vs...))
}

// CouponAmountGT applies the GT predicate on the "coupon_amount" field.
func CouponAmountGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCouponAmount, v))
}

// CouponAmountGTE applies the GTE predicate on the "coupon_amount" field.
func CouponAmountGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCouponAmount, v))
}

// CouponAmountLT applies the LT predicate on the "coupon_amount" field.
func CouponAmountLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCouponAmount, v))
}

// CouponAmountLTE applies the LTE predicate on the "coupon_amount" field.
func CouponAmountLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCouponAmount, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...int) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v int) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldState, v))
}

// ValidStartTimeEQ applies the EQ predicate on the "valid_start_time" field.
func ValidStartTimeEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldValidStartTime, v))
}

// ValidStartTimeNEQ applies the NEQ predicate on the "valid_start_time" field.
func ValidStartTimeNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldValidStartTime, v))
}

// ValidStartTimeIn applies the In predicate on the "valid_start_time" field.
func ValidStartTimeIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldValidStartTime, vs...))
}

// ValidStartTimeNotIn applies the NotIn predicate on the "valid_start_time" field.
func ValidStartTimeNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldValidStartTime, vs...))
}

// ValidStartTimeGT applies the GT predicate on the "valid_start_time" field.
func ValidStartTimeGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldValidStartTime, v))
}

// ValidStartTimeGTE applies the GTE predicate on the "valid_start_time" field.
func ValidStartTimeGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldValidStartTime, v))
}

// ValidStartTimeLT applies the LT predicate on the "valid_start_time" field.
func ValidStartTimeLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldValidStartTime, v))
}

// ValidStartTimeLTE applies the LTE predicate on the "valid_start_time" field.
func ValidStartTimeLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldValidStartTime, v))
}

// ValidStartTimeIsNil applies the IsNil predicate on the "valid_start_time" field.
func ValidStartTimeIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldValidStartTime))
}

// ValidStartTimeNotNil applies the NotNil predicate on the "valid_start_time" field.
func ValidStartTimeNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldValidStartTime))
}

// ValidEndTimeEQ applies the EQ predicate on the "valid_end_time" field.
func ValidEndTimeEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldValidEndTime, v))
}

// ValidEndTimeNEQ applies the NEQ predicate on the "valid_end_time" field.
func ValidEndTimeNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldValidEndTime, v))
}

// ValidEndTimeIn applies the In predicate on the "valid_end_time" field.
func ValidEndTimeIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldValidEndTime, vs...))
}

// ValidEndTimeNotIn applies the NotIn predicate on the "valid_end_time" field.
func ValidEndTimeNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldValidEndTime, vs...))
}

// ValidEndTimeGT applies the GT predicate on the "valid_end_time" field.
func ValidEndTimeGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldValidEndTime, v))
}

// ValidEndTimeGTE applies the GTE predicate on the "valid_end_time" field.
func ValidEndTimeGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldValidEndTime, v))
}

// ValidEndTimeLT applies the LT predicate on the "valid_end_time" field.
func ValidEndTimeLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldValidEndTime, v))
}

// ValidEndTimeLTE applies the LTE predicate on the "valid_end_time" field.
func ValidEndTimeLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldValidEndTime, v))
}

// ValidEndTimeIsNil applies the IsNil predicate on the "valid_end_time" field.
func ValidEndTimeIsNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldIsNull(FieldValidEndTime))
}

// ValidEndTimeNotNil applies the NotNil predicate on the "valid_end_time" field.
func ValidEndTimeNotNil() predicate.Coupon {
	return predicate.Coupon(sql.FieldNotNull(FieldValidEndTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Coupon {
	return predicate.Coupon(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Coupon) predicate.Coupon {
	return predicate.Coupon(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Coupon) predicate.Coupon {
	return predicate.Coupon(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Coupon) predicate.Coupon {
	return predicate.Coupon(sql.NotPredicates(p))
}
