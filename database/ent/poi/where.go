// Code generated by ent, DO NOT EDIT.

package poi

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldName, v))
}

// Alias applies equality check predicate on the "alias" field. It's identical to AliasEQ.
func Alias(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldAlias, v))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldScenicAreaID, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldType, v))
}

// WgsLon applies equality check predicate on the "wgs_lon" field. It's identical to WgsLonEQ.
func WgsLon(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldWgsLon, v))
}

// WgsLat applies equality check predicate on the "wgs_lat" field. It's identical to WgsLatEQ.
func WgsLat(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldWgsLat, v))
}

// GcjLon applies equality check predicate on the "gcj_lon" field. It's identical to GcjLonEQ.
func GcjLon(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldGcjLon, v))
}

// GcjLat applies equality check predicate on the "gcj_lat" field. It's identical to GcjLatEQ.
func GcjLat(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldGcjLat, v))
}

// BdLon applies equality check predicate on the "bd_lon" field. It's identical to BdLonEQ.
func BdLon(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldBdLon, v))
}

// BdLat applies equality check predicate on the "bd_lat" field. It's identical to BdLatEQ.
func BdLat(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldBdLat, v))
}

// StopHeading applies equality check predicate on the "stop_heading" field. It's identical to StopHeadingEQ.
func StopHeading(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldStopHeading, v))
}

// IntroText applies equality check predicate on the "intro_text" field. It's identical to IntroTextEQ.
func IntroText(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldIntroText, v))
}

// AudioID applies equality check predicate on the "audio_id" field. It's identical to AudioIDEQ.
func AudioID(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldAudioID, v))
}

// VideoID applies equality check predicate on the "video_id" field. It's identical to VideoIDEQ.
func VideoID(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldVideoID, v))
}

// BroadcastRadius applies equality check predicate on the "broadcast_radius" field. It's identical to BroadcastRadiusEQ.
func BroadcastRadius(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldBroadcastRadius, v))
}

// ParkingRadius applies equality check predicate on the "parking_radius" field. It's identical to ParkingRadiusEQ.
func ParkingRadius(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldParkingRadius, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldLevel, v))
}

// ExtendYokeeID applies equality check predicate on the "extend_yokee_id" field. It's identical to ExtendYokeeIDEQ.
func ExtendYokeeID(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldExtendYokeeID, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldUpdateTime, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Poi {
	return predicate.Poi(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Poi {
	return predicate.Poi(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Poi {
	return predicate.Poi(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Poi {
	return predicate.Poi(sql.FieldContainsFold(FieldName, v))
}

// AliasEQ applies the EQ predicate on the "alias" field.
func AliasEQ(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldAlias, v))
}

// AliasNEQ applies the NEQ predicate on the "alias" field.
func AliasNEQ(v string) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldAlias, v))
}

// AliasIn applies the In predicate on the "alias" field.
func AliasIn(vs ...string) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldAlias, vs...))
}

// AliasNotIn applies the NotIn predicate on the "alias" field.
func AliasNotIn(vs ...string) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldAlias, vs...))
}

// AliasGT applies the GT predicate on the "alias" field.
func AliasGT(v string) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldAlias, v))
}

// AliasGTE applies the GTE predicate on the "alias" field.
func AliasGTE(v string) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldAlias, v))
}

// AliasLT applies the LT predicate on the "alias" field.
func AliasLT(v string) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldAlias, v))
}

// AliasLTE applies the LTE predicate on the "alias" field.
func AliasLTE(v string) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldAlias, v))
}

// AliasContains applies the Contains predicate on the "alias" field.
func AliasContains(v string) predicate.Poi {
	return predicate.Poi(sql.FieldContains(FieldAlias, v))
}

// AliasHasPrefix applies the HasPrefix predicate on the "alias" field.
func AliasHasPrefix(v string) predicate.Poi {
	return predicate.Poi(sql.FieldHasPrefix(FieldAlias, v))
}

// AliasHasSuffix applies the HasSuffix predicate on the "alias" field.
func AliasHasSuffix(v string) predicate.Poi {
	return predicate.Poi(sql.FieldHasSuffix(FieldAlias, v))
}

// AliasEqualFold applies the EqualFold predicate on the "alias" field.
func AliasEqualFold(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEqualFold(FieldAlias, v))
}

// AliasContainsFold applies the ContainsFold predicate on the "alias" field.
func AliasContainsFold(v string) predicate.Poi {
	return predicate.Poi(sql.FieldContainsFold(FieldAlias, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldType, v))
}

// WgsLonEQ applies the EQ predicate on the "wgs_lon" field.
func WgsLonEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldWgsLon, v))
}

// WgsLonNEQ applies the NEQ predicate on the "wgs_lon" field.
func WgsLonNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldWgsLon, v))
}

// WgsLonIn applies the In predicate on the "wgs_lon" field.
func WgsLonIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldWgsLon, vs...))
}

// WgsLonNotIn applies the NotIn predicate on the "wgs_lon" field.
func WgsLonNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldWgsLon, vs...))
}

// WgsLonGT applies the GT predicate on the "wgs_lon" field.
func WgsLonGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldWgsLon, v))
}

// WgsLonGTE applies the GTE predicate on the "wgs_lon" field.
func WgsLonGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldWgsLon, v))
}

// WgsLonLT applies the LT predicate on the "wgs_lon" field.
func WgsLonLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldWgsLon, v))
}

// WgsLonLTE applies the LTE predicate on the "wgs_lon" field.
func WgsLonLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldWgsLon, v))
}

// WgsLatEQ applies the EQ predicate on the "wgs_lat" field.
func WgsLatEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldWgsLat, v))
}

// WgsLatNEQ applies the NEQ predicate on the "wgs_lat" field.
func WgsLatNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldWgsLat, v))
}

// WgsLatIn applies the In predicate on the "wgs_lat" field.
func WgsLatIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldWgsLat, vs...))
}

// WgsLatNotIn applies the NotIn predicate on the "wgs_lat" field.
func WgsLatNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldWgsLat, vs...))
}

// WgsLatGT applies the GT predicate on the "wgs_lat" field.
func WgsLatGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldWgsLat, v))
}

// WgsLatGTE applies the GTE predicate on the "wgs_lat" field.
func WgsLatGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldWgsLat, v))
}

// WgsLatLT applies the LT predicate on the "wgs_lat" field.
func WgsLatLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldWgsLat, v))
}

// WgsLatLTE applies the LTE predicate on the "wgs_lat" field.
func WgsLatLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldWgsLat, v))
}

// GcjLonEQ applies the EQ predicate on the "gcj_lon" field.
func GcjLonEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldGcjLon, v))
}

// GcjLonNEQ applies the NEQ predicate on the "gcj_lon" field.
func GcjLonNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldGcjLon, v))
}

// GcjLonIn applies the In predicate on the "gcj_lon" field.
func GcjLonIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldGcjLon, vs...))
}

// GcjLonNotIn applies the NotIn predicate on the "gcj_lon" field.
func GcjLonNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldGcjLon, vs...))
}

// GcjLonGT applies the GT predicate on the "gcj_lon" field.
func GcjLonGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldGcjLon, v))
}

// GcjLonGTE applies the GTE predicate on the "gcj_lon" field.
func GcjLonGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldGcjLon, v))
}

// GcjLonLT applies the LT predicate on the "gcj_lon" field.
func GcjLonLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldGcjLon, v))
}

// GcjLonLTE applies the LTE predicate on the "gcj_lon" field.
func GcjLonLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldGcjLon, v))
}

// GcjLatEQ applies the EQ predicate on the "gcj_lat" field.
func GcjLatEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldGcjLat, v))
}

// GcjLatNEQ applies the NEQ predicate on the "gcj_lat" field.
func GcjLatNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldGcjLat, v))
}

// GcjLatIn applies the In predicate on the "gcj_lat" field.
func GcjLatIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldGcjLat, vs...))
}

// GcjLatNotIn applies the NotIn predicate on the "gcj_lat" field.
func GcjLatNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldGcjLat, vs...))
}

// GcjLatGT applies the GT predicate on the "gcj_lat" field.
func GcjLatGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldGcjLat, v))
}

// GcjLatGTE applies the GTE predicate on the "gcj_lat" field.
func GcjLatGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldGcjLat, v))
}

// GcjLatLT applies the LT predicate on the "gcj_lat" field.
func GcjLatLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldGcjLat, v))
}

// GcjLatLTE applies the LTE predicate on the "gcj_lat" field.
func GcjLatLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldGcjLat, v))
}

// BdLonEQ applies the EQ predicate on the "bd_lon" field.
func BdLonEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldBdLon, v))
}

// BdLonNEQ applies the NEQ predicate on the "bd_lon" field.
func BdLonNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldBdLon, v))
}

// BdLonIn applies the In predicate on the "bd_lon" field.
func BdLonIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldBdLon, vs...))
}

// BdLonNotIn applies the NotIn predicate on the "bd_lon" field.
func BdLonNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldBdLon, vs...))
}

// BdLonGT applies the GT predicate on the "bd_lon" field.
func BdLonGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldBdLon, v))
}

// BdLonGTE applies the GTE predicate on the "bd_lon" field.
func BdLonGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldBdLon, v))
}

// BdLonLT applies the LT predicate on the "bd_lon" field.
func BdLonLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldBdLon, v))
}

// BdLonLTE applies the LTE predicate on the "bd_lon" field.
func BdLonLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldBdLon, v))
}

// BdLatEQ applies the EQ predicate on the "bd_lat" field.
func BdLatEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldBdLat, v))
}

// BdLatNEQ applies the NEQ predicate on the "bd_lat" field.
func BdLatNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldBdLat, v))
}

// BdLatIn applies the In predicate on the "bd_lat" field.
func BdLatIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldBdLat, vs...))
}

// BdLatNotIn applies the NotIn predicate on the "bd_lat" field.
func BdLatNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldBdLat, vs...))
}

// BdLatGT applies the GT predicate on the "bd_lat" field.
func BdLatGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldBdLat, v))
}

// BdLatGTE applies the GTE predicate on the "bd_lat" field.
func BdLatGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldBdLat, v))
}

// BdLatLT applies the LT predicate on the "bd_lat" field.
func BdLatLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldBdLat, v))
}

// BdLatLTE applies the LTE predicate on the "bd_lat" field.
func BdLatLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldBdLat, v))
}

// StopHeadingEQ applies the EQ predicate on the "stop_heading" field.
func StopHeadingEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldStopHeading, v))
}

// StopHeadingNEQ applies the NEQ predicate on the "stop_heading" field.
func StopHeadingNEQ(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldStopHeading, v))
}

// StopHeadingIn applies the In predicate on the "stop_heading" field.
func StopHeadingIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldStopHeading, vs...))
}

// StopHeadingNotIn applies the NotIn predicate on the "stop_heading" field.
func StopHeadingNotIn(vs ...float64) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldStopHeading, vs...))
}

// StopHeadingGT applies the GT predicate on the "stop_heading" field.
func StopHeadingGT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldStopHeading, v))
}

// StopHeadingGTE applies the GTE predicate on the "stop_heading" field.
func StopHeadingGTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldStopHeading, v))
}

// StopHeadingLT applies the LT predicate on the "stop_heading" field.
func StopHeadingLT(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldStopHeading, v))
}

// StopHeadingLTE applies the LTE predicate on the "stop_heading" field.
func StopHeadingLTE(v float64) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldStopHeading, v))
}

// IntroTextEQ applies the EQ predicate on the "intro_text" field.
func IntroTextEQ(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldIntroText, v))
}

// IntroTextNEQ applies the NEQ predicate on the "intro_text" field.
func IntroTextNEQ(v string) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldIntroText, v))
}

// IntroTextIn applies the In predicate on the "intro_text" field.
func IntroTextIn(vs ...string) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldIntroText, vs...))
}

// IntroTextNotIn applies the NotIn predicate on the "intro_text" field.
func IntroTextNotIn(vs ...string) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldIntroText, vs...))
}

// IntroTextGT applies the GT predicate on the "intro_text" field.
func IntroTextGT(v string) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldIntroText, v))
}

// IntroTextGTE applies the GTE predicate on the "intro_text" field.
func IntroTextGTE(v string) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldIntroText, v))
}

// IntroTextLT applies the LT predicate on the "intro_text" field.
func IntroTextLT(v string) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldIntroText, v))
}

// IntroTextLTE applies the LTE predicate on the "intro_text" field.
func IntroTextLTE(v string) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldIntroText, v))
}

// IntroTextContains applies the Contains predicate on the "intro_text" field.
func IntroTextContains(v string) predicate.Poi {
	return predicate.Poi(sql.FieldContains(FieldIntroText, v))
}

// IntroTextHasPrefix applies the HasPrefix predicate on the "intro_text" field.
func IntroTextHasPrefix(v string) predicate.Poi {
	return predicate.Poi(sql.FieldHasPrefix(FieldIntroText, v))
}

// IntroTextHasSuffix applies the HasSuffix predicate on the "intro_text" field.
func IntroTextHasSuffix(v string) predicate.Poi {
	return predicate.Poi(sql.FieldHasSuffix(FieldIntroText, v))
}

// IntroTextEqualFold applies the EqualFold predicate on the "intro_text" field.
func IntroTextEqualFold(v string) predicate.Poi {
	return predicate.Poi(sql.FieldEqualFold(FieldIntroText, v))
}

// IntroTextContainsFold applies the ContainsFold predicate on the "intro_text" field.
func IntroTextContainsFold(v string) predicate.Poi {
	return predicate.Poi(sql.FieldContainsFold(FieldIntroText, v))
}

// AudioIDEQ applies the EQ predicate on the "audio_id" field.
func AudioIDEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldAudioID, v))
}

// AudioIDNEQ applies the NEQ predicate on the "audio_id" field.
func AudioIDNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldAudioID, v))
}

// AudioIDIn applies the In predicate on the "audio_id" field.
func AudioIDIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldAudioID, vs...))
}

// AudioIDNotIn applies the NotIn predicate on the "audio_id" field.
func AudioIDNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldAudioID, vs...))
}

// AudioIDGT applies the GT predicate on the "audio_id" field.
func AudioIDGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldAudioID, v))
}

// AudioIDGTE applies the GTE predicate on the "audio_id" field.
func AudioIDGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldAudioID, v))
}

// AudioIDLT applies the LT predicate on the "audio_id" field.
func AudioIDLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldAudioID, v))
}

// AudioIDLTE applies the LTE predicate on the "audio_id" field.
func AudioIDLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldAudioID, v))
}

// VideoIDEQ applies the EQ predicate on the "video_id" field.
func VideoIDEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldVideoID, v))
}

// VideoIDNEQ applies the NEQ predicate on the "video_id" field.
func VideoIDNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldVideoID, v))
}

// VideoIDIn applies the In predicate on the "video_id" field.
func VideoIDIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldVideoID, vs...))
}

// VideoIDNotIn applies the NotIn predicate on the "video_id" field.
func VideoIDNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldVideoID, vs...))
}

// VideoIDGT applies the GT predicate on the "video_id" field.
func VideoIDGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldVideoID, v))
}

// VideoIDGTE applies the GTE predicate on the "video_id" field.
func VideoIDGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldVideoID, v))
}

// VideoIDLT applies the LT predicate on the "video_id" field.
func VideoIDLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldVideoID, v))
}

// VideoIDLTE applies the LTE predicate on the "video_id" field.
func VideoIDLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldVideoID, v))
}

// BroadcastRadiusEQ applies the EQ predicate on the "broadcast_radius" field.
func BroadcastRadiusEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldBroadcastRadius, v))
}

// BroadcastRadiusNEQ applies the NEQ predicate on the "broadcast_radius" field.
func BroadcastRadiusNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldBroadcastRadius, v))
}

// BroadcastRadiusIn applies the In predicate on the "broadcast_radius" field.
func BroadcastRadiusIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldBroadcastRadius, vs...))
}

// BroadcastRadiusNotIn applies the NotIn predicate on the "broadcast_radius" field.
func BroadcastRadiusNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldBroadcastRadius, vs...))
}

// BroadcastRadiusGT applies the GT predicate on the "broadcast_radius" field.
func BroadcastRadiusGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldBroadcastRadius, v))
}

// BroadcastRadiusGTE applies the GTE predicate on the "broadcast_radius" field.
func BroadcastRadiusGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldBroadcastRadius, v))
}

// BroadcastRadiusLT applies the LT predicate on the "broadcast_radius" field.
func BroadcastRadiusLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldBroadcastRadius, v))
}

// BroadcastRadiusLTE applies the LTE predicate on the "broadcast_radius" field.
func BroadcastRadiusLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldBroadcastRadius, v))
}

// ParkingRadiusEQ applies the EQ predicate on the "parking_radius" field.
func ParkingRadiusEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldParkingRadius, v))
}

// ParkingRadiusNEQ applies the NEQ predicate on the "parking_radius" field.
func ParkingRadiusNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldParkingRadius, v))
}

// ParkingRadiusIn applies the In predicate on the "parking_radius" field.
func ParkingRadiusIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldParkingRadius, vs...))
}

// ParkingRadiusNotIn applies the NotIn predicate on the "parking_radius" field.
func ParkingRadiusNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldParkingRadius, vs...))
}

// ParkingRadiusGT applies the GT predicate on the "parking_radius" field.
func ParkingRadiusGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldParkingRadius, v))
}

// ParkingRadiusGTE applies the GTE predicate on the "parking_radius" field.
func ParkingRadiusGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldParkingRadius, v))
}

// ParkingRadiusLT applies the LT predicate on the "parking_radius" field.
func ParkingRadiusLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldParkingRadius, v))
}

// ParkingRadiusLTE applies the LTE predicate on the "parking_radius" field.
func ParkingRadiusLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldParkingRadius, v))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldLevel, v))
}

// ExtendYokeeIDEQ applies the EQ predicate on the "extend_yokee_id" field.
func ExtendYokeeIDEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldExtendYokeeID, v))
}

// ExtendYokeeIDNEQ applies the NEQ predicate on the "extend_yokee_id" field.
func ExtendYokeeIDNEQ(v int) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldExtendYokeeID, v))
}

// ExtendYokeeIDIn applies the In predicate on the "extend_yokee_id" field.
func ExtendYokeeIDIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldExtendYokeeID, vs...))
}

// ExtendYokeeIDNotIn applies the NotIn predicate on the "extend_yokee_id" field.
func ExtendYokeeIDNotIn(vs ...int) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldExtendYokeeID, vs...))
}

// ExtendYokeeIDGT applies the GT predicate on the "extend_yokee_id" field.
func ExtendYokeeIDGT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldExtendYokeeID, v))
}

// ExtendYokeeIDGTE applies the GTE predicate on the "extend_yokee_id" field.
func ExtendYokeeIDGTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldExtendYokeeID, v))
}

// ExtendYokeeIDLT applies the LT predicate on the "extend_yokee_id" field.
func ExtendYokeeIDLT(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldExtendYokeeID, v))
}

// ExtendYokeeIDLTE applies the LTE predicate on the "extend_yokee_id" field.
func ExtendYokeeIDLTE(v int) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldExtendYokeeID, v))
}

// ExtendYokeeIDIsNil applies the IsNil predicate on the "extend_yokee_id" field.
func ExtendYokeeIDIsNil() predicate.Poi {
	return predicate.Poi(sql.FieldIsNull(FieldExtendYokeeID))
}

// ExtendYokeeIDNotNil applies the NotNil predicate on the "extend_yokee_id" field.
func ExtendYokeeIDNotNil() predicate.Poi {
	return predicate.Poi(sql.FieldNotNull(FieldExtendYokeeID))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Poi {
	return predicate.Poi(sql.FieldLTE(FieldUpdateTime, v))
}

// HasBackgroundScenicArea applies the HasEdge predicate on the "background_scenic_area" edge.
func HasBackgroundScenicArea() predicate.Poi {
	return predicate.Poi(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, BackgroundScenicAreaTable, BackgroundScenicAreaColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBackgroundScenicAreaWith applies the HasEdge predicate on the "background_scenic_area" edge with a given conditions (other predicates).
func HasBackgroundScenicAreaWith(preds ...predicate.ScenicArea) predicate.Poi {
	return predicate.Poi(func(s *sql.Selector) {
		step := newBackgroundScenicAreaStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Poi) predicate.Poi {
	return predicate.Poi(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Poi) predicate.Poi {
	return predicate.Poi(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Poi) predicate.Poi {
	return predicate.Poi(sql.NotPredicates(p))
}
