// Code generated by ent, DO NOT EDIT.

package carsflight

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldID, id))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldScenicAreaID, v))
}

// FlightNo applies equality check predicate on the "flight_no" field. It's identical to FlightNoEQ.
func FlightNo(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldFlightNo, v))
}

// CarID applies equality check predicate on the "car_id" field. It's identical to CarIDEQ.
func CarID(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldCarID, v))
}

// CarName applies equality check predicate on the "car_name" field. It's identical to CarNameEQ.
func CarName(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldCarName, v))
}

// RouteID applies equality check predicate on the "route_id" field. It's identical to RouteIDEQ.
func RouteID(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldRouteID, v))
}

// RouteName applies equality check predicate on the "route_name" field. It's identical to RouteNameEQ.
func RouteName(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldRouteName, v))
}

// SeatsNum applies equality check predicate on the "seats_num" field. It's identical to SeatsNumEQ.
func SeatsNum(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldSeatsNum, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldState, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldRemark, v))
}

// ExtendYokeeID applies equality check predicate on the "extend_yokee_id" field. It's identical to ExtendYokeeIDEQ.
func ExtendYokeeID(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldExtendYokeeID, v))
}

// DepartureTime applies equality check predicate on the "departure_time" field. It's identical to DepartureTimeEQ.
func DepartureTime(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldDepartureTime, v))
}

// FinishTime applies equality check predicate on the "finish_time" field. It's identical to FinishTimeEQ.
func FinishTime(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldFinishTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldUpdateTime, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDGT applies the GT predicate on the "scenic_area_id" field.
func ScenicAreaIDGT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldScenicAreaID, v))
}

// ScenicAreaIDGTE applies the GTE predicate on the "scenic_area_id" field.
func ScenicAreaIDGTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldScenicAreaID, v))
}

// ScenicAreaIDLT applies the LT predicate on the "scenic_area_id" field.
func ScenicAreaIDLT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldScenicAreaID, v))
}

// ScenicAreaIDLTE applies the LTE predicate on the "scenic_area_id" field.
func ScenicAreaIDLTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldScenicAreaID, v))
}

// FlightNoEQ applies the EQ predicate on the "flight_no" field.
func FlightNoEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldFlightNo, v))
}

// FlightNoNEQ applies the NEQ predicate on the "flight_no" field.
func FlightNoNEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldFlightNo, v))
}

// FlightNoIn applies the In predicate on the "flight_no" field.
func FlightNoIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldFlightNo, vs...))
}

// FlightNoNotIn applies the NotIn predicate on the "flight_no" field.
func FlightNoNotIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldFlightNo, vs...))
}

// FlightNoGT applies the GT predicate on the "flight_no" field.
func FlightNoGT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldFlightNo, v))
}

// FlightNoGTE applies the GTE predicate on the "flight_no" field.
func FlightNoGTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldFlightNo, v))
}

// FlightNoLT applies the LT predicate on the "flight_no" field.
func FlightNoLT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldFlightNo, v))
}

// FlightNoLTE applies the LTE predicate on the "flight_no" field.
func FlightNoLTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldFlightNo, v))
}

// FlightNoContains applies the Contains predicate on the "flight_no" field.
func FlightNoContains(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContains(FieldFlightNo, v))
}

// FlightNoHasPrefix applies the HasPrefix predicate on the "flight_no" field.
func FlightNoHasPrefix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasPrefix(FieldFlightNo, v))
}

// FlightNoHasSuffix applies the HasSuffix predicate on the "flight_no" field.
func FlightNoHasSuffix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasSuffix(FieldFlightNo, v))
}

// FlightNoEqualFold applies the EqualFold predicate on the "flight_no" field.
func FlightNoEqualFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEqualFold(FieldFlightNo, v))
}

// FlightNoContainsFold applies the ContainsFold predicate on the "flight_no" field.
func FlightNoContainsFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContainsFold(FieldFlightNo, v))
}

// CarIDEQ applies the EQ predicate on the "car_id" field.
func CarIDEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldCarID, v))
}

// CarIDNEQ applies the NEQ predicate on the "car_id" field.
func CarIDNEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldCarID, v))
}

// CarIDIn applies the In predicate on the "car_id" field.
func CarIDIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldCarID, vs...))
}

// CarIDNotIn applies the NotIn predicate on the "car_id" field.
func CarIDNotIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldCarID, vs...))
}

// CarIDGT applies the GT predicate on the "car_id" field.
func CarIDGT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldCarID, v))
}

// CarIDGTE applies the GTE predicate on the "car_id" field.
func CarIDGTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldCarID, v))
}

// CarIDLT applies the LT predicate on the "car_id" field.
func CarIDLT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldCarID, v))
}

// CarIDLTE applies the LTE predicate on the "car_id" field.
func CarIDLTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldCarID, v))
}

// CarNameEQ applies the EQ predicate on the "car_name" field.
func CarNameEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldCarName, v))
}

// CarNameNEQ applies the NEQ predicate on the "car_name" field.
func CarNameNEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldCarName, v))
}

// CarNameIn applies the In predicate on the "car_name" field.
func CarNameIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldCarName, vs...))
}

// CarNameNotIn applies the NotIn predicate on the "car_name" field.
func CarNameNotIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldCarName, vs...))
}

// CarNameGT applies the GT predicate on the "car_name" field.
func CarNameGT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldCarName, v))
}

// CarNameGTE applies the GTE predicate on the "car_name" field.
func CarNameGTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldCarName, v))
}

// CarNameLT applies the LT predicate on the "car_name" field.
func CarNameLT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldCarName, v))
}

// CarNameLTE applies the LTE predicate on the "car_name" field.
func CarNameLTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldCarName, v))
}

// CarNameContains applies the Contains predicate on the "car_name" field.
func CarNameContains(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContains(FieldCarName, v))
}

// CarNameHasPrefix applies the HasPrefix predicate on the "car_name" field.
func CarNameHasPrefix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasPrefix(FieldCarName, v))
}

// CarNameHasSuffix applies the HasSuffix predicate on the "car_name" field.
func CarNameHasSuffix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasSuffix(FieldCarName, v))
}

// CarNameEqualFold applies the EqualFold predicate on the "car_name" field.
func CarNameEqualFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEqualFold(FieldCarName, v))
}

// CarNameContainsFold applies the ContainsFold predicate on the "car_name" field.
func CarNameContainsFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContainsFold(FieldCarName, v))
}

// RouteIDEQ applies the EQ predicate on the "route_id" field.
func RouteIDEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldRouteID, v))
}

// RouteIDNEQ applies the NEQ predicate on the "route_id" field.
func RouteIDNEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldRouteID, v))
}

// RouteIDIn applies the In predicate on the "route_id" field.
func RouteIDIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldRouteID, vs...))
}

// RouteIDNotIn applies the NotIn predicate on the "route_id" field.
func RouteIDNotIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldRouteID, vs...))
}

// RouteIDGT applies the GT predicate on the "route_id" field.
func RouteIDGT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldRouteID, v))
}

// RouteIDGTE applies the GTE predicate on the "route_id" field.
func RouteIDGTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldRouteID, v))
}

// RouteIDLT applies the LT predicate on the "route_id" field.
func RouteIDLT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldRouteID, v))
}

// RouteIDLTE applies the LTE predicate on the "route_id" field.
func RouteIDLTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldRouteID, v))
}

// RouteNameEQ applies the EQ predicate on the "route_name" field.
func RouteNameEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldRouteName, v))
}

// RouteNameNEQ applies the NEQ predicate on the "route_name" field.
func RouteNameNEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldRouteName, v))
}

// RouteNameIn applies the In predicate on the "route_name" field.
func RouteNameIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldRouteName, vs...))
}

// RouteNameNotIn applies the NotIn predicate on the "route_name" field.
func RouteNameNotIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldRouteName, vs...))
}

// RouteNameGT applies the GT predicate on the "route_name" field.
func RouteNameGT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldRouteName, v))
}

// RouteNameGTE applies the GTE predicate on the "route_name" field.
func RouteNameGTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldRouteName, v))
}

// RouteNameLT applies the LT predicate on the "route_name" field.
func RouteNameLT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldRouteName, v))
}

// RouteNameLTE applies the LTE predicate on the "route_name" field.
func RouteNameLTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldRouteName, v))
}

// RouteNameContains applies the Contains predicate on the "route_name" field.
func RouteNameContains(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContains(FieldRouteName, v))
}

// RouteNameHasPrefix applies the HasPrefix predicate on the "route_name" field.
func RouteNameHasPrefix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasPrefix(FieldRouteName, v))
}

// RouteNameHasSuffix applies the HasSuffix predicate on the "route_name" field.
func RouteNameHasSuffix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasSuffix(FieldRouteName, v))
}

// RouteNameEqualFold applies the EqualFold predicate on the "route_name" field.
func RouteNameEqualFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEqualFold(FieldRouteName, v))
}

// RouteNameContainsFold applies the ContainsFold predicate on the "route_name" field.
func RouteNameContainsFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContainsFold(FieldRouteName, v))
}

// SeatsNumEQ applies the EQ predicate on the "seats_num" field.
func SeatsNumEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldSeatsNum, v))
}

// SeatsNumNEQ applies the NEQ predicate on the "seats_num" field.
func SeatsNumNEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldSeatsNum, v))
}

// SeatsNumIn applies the In predicate on the "seats_num" field.
func SeatsNumIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldSeatsNum, vs...))
}

// SeatsNumNotIn applies the NotIn predicate on the "seats_num" field.
func SeatsNumNotIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldSeatsNum, vs...))
}

// SeatsNumGT applies the GT predicate on the "seats_num" field.
func SeatsNumGT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldSeatsNum, v))
}

// SeatsNumGTE applies the GTE predicate on the "seats_num" field.
func SeatsNumGTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldSeatsNum, v))
}

// SeatsNumLT applies the LT predicate on the "seats_num" field.
func SeatsNumLT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldSeatsNum, v))
}

// SeatsNumLTE applies the LTE predicate on the "seats_num" field.
func SeatsNumLTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldSeatsNum, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldState, v))
}

// StopIdsIsNil applies the IsNil predicate on the "stop_ids" field.
func StopIdsIsNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIsNull(FieldStopIds))
}

// StopIdsNotNil applies the NotNil predicate on the "stop_ids" field.
func StopIdsNotNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotNull(FieldStopIds))
}

// PassIdsIsNil applies the IsNil predicate on the "pass_ids" field.
func PassIdsIsNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIsNull(FieldPassIds))
}

// PassIdsNotNil applies the NotNil predicate on the "pass_ids" field.
func PassIdsNotNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotNull(FieldPassIds))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldContainsFold(FieldRemark, v))
}

// ExtendYokeeIDEQ applies the EQ predicate on the "extend_yokee_id" field.
func ExtendYokeeIDEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldExtendYokeeID, v))
}

// ExtendYokeeIDNEQ applies the NEQ predicate on the "extend_yokee_id" field.
func ExtendYokeeIDNEQ(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldExtendYokeeID, v))
}

// ExtendYokeeIDIn applies the In predicate on the "extend_yokee_id" field.
func ExtendYokeeIDIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldExtendYokeeID, vs...))
}

// ExtendYokeeIDNotIn applies the NotIn predicate on the "extend_yokee_id" field.
func ExtendYokeeIDNotIn(vs ...int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldExtendYokeeID, vs...))
}

// ExtendYokeeIDGT applies the GT predicate on the "extend_yokee_id" field.
func ExtendYokeeIDGT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldExtendYokeeID, v))
}

// ExtendYokeeIDGTE applies the GTE predicate on the "extend_yokee_id" field.
func ExtendYokeeIDGTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldExtendYokeeID, v))
}

// ExtendYokeeIDLT applies the LT predicate on the "extend_yokee_id" field.
func ExtendYokeeIDLT(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldExtendYokeeID, v))
}

// ExtendYokeeIDLTE applies the LTE predicate on the "extend_yokee_id" field.
func ExtendYokeeIDLTE(v int) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldExtendYokeeID, v))
}

// ExtendYokeeIDIsNil applies the IsNil predicate on the "extend_yokee_id" field.
func ExtendYokeeIDIsNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIsNull(FieldExtendYokeeID))
}

// ExtendYokeeIDNotNil applies the NotNil predicate on the "extend_yokee_id" field.
func ExtendYokeeIDNotNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotNull(FieldExtendYokeeID))
}

// DepartureTimeEQ applies the EQ predicate on the "departure_time" field.
func DepartureTimeEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldDepartureTime, v))
}

// DepartureTimeNEQ applies the NEQ predicate on the "departure_time" field.
func DepartureTimeNEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldDepartureTime, v))
}

// DepartureTimeIn applies the In predicate on the "departure_time" field.
func DepartureTimeIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldDepartureTime, vs...))
}

// DepartureTimeNotIn applies the NotIn predicate on the "departure_time" field.
func DepartureTimeNotIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldDepartureTime, vs...))
}

// DepartureTimeGT applies the GT predicate on the "departure_time" field.
func DepartureTimeGT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldDepartureTime, v))
}

// DepartureTimeGTE applies the GTE predicate on the "departure_time" field.
func DepartureTimeGTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldDepartureTime, v))
}

// DepartureTimeLT applies the LT predicate on the "departure_time" field.
func DepartureTimeLT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldDepartureTime, v))
}

// DepartureTimeLTE applies the LTE predicate on the "departure_time" field.
func DepartureTimeLTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldDepartureTime, v))
}

// DepartureTimeIsNil applies the IsNil predicate on the "departure_time" field.
func DepartureTimeIsNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIsNull(FieldDepartureTime))
}

// DepartureTimeNotNil applies the NotNil predicate on the "departure_time" field.
func DepartureTimeNotNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotNull(FieldDepartureTime))
}

// FinishTimeEQ applies the EQ predicate on the "finish_time" field.
func FinishTimeEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldFinishTime, v))
}

// FinishTimeNEQ applies the NEQ predicate on the "finish_time" field.
func FinishTimeNEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldFinishTime, v))
}

// FinishTimeIn applies the In predicate on the "finish_time" field.
func FinishTimeIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldFinishTime, vs...))
}

// FinishTimeNotIn applies the NotIn predicate on the "finish_time" field.
func FinishTimeNotIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldFinishTime, vs...))
}

// FinishTimeGT applies the GT predicate on the "finish_time" field.
func FinishTimeGT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldFinishTime, v))
}

// FinishTimeGTE applies the GTE predicate on the "finish_time" field.
func FinishTimeGTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldFinishTime, v))
}

// FinishTimeLT applies the LT predicate on the "finish_time" field.
func FinishTimeLT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldFinishTime, v))
}

// FinishTimeLTE applies the LTE predicate on the "finish_time" field.
func FinishTimeLTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldFinishTime, v))
}

// FinishTimeIsNil applies the IsNil predicate on the "finish_time" field.
func FinishTimeIsNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIsNull(FieldFinishTime))
}

// FinishTimeNotNil applies the NotNil predicate on the "finish_time" field.
func FinishTimeNotNil() predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotNull(FieldFinishTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.CarsFlight {
	return predicate.CarsFlight(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CarsFlight) predicate.CarsFlight {
	return predicate.CarsFlight(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CarsFlight) predicate.CarsFlight {
	return predicate.CarsFlight(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CarsFlight) predicate.CarsFlight {
	return predicate.CarsFlight(sql.NotPredicates(p))
}
