// Code generated by ent, DO NOT EDIT.

package statsdailyscenicarea

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the statsdailyscenicarea type in the database.
	Label = "stats_daily_scenic_area"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldScenicAreaID holds the string denoting the scenic_area_id field in the database.
	FieldScenicAreaID = "scenic_area_id"
	// FieldY holds the string denoting the y field in the database.
	FieldY = "y"
	// FieldM holds the string denoting the m field in the database.
	FieldM = "m"
	// FieldD holds the string denoting the d field in the database.
	FieldD = "d"
	// FieldWeek holds the string denoting the week field in the database.
	FieldWeek = "week"
	// FieldWeekday holds the string denoting the weekday field in the database.
	FieldWeekday = "weekday"
	// FieldPeriod holds the string denoting the period field in the database.
	FieldPeriod = "period"
	// FieldUserCountLogin holds the string denoting the user_count_login field in the database.
	FieldUserCountLogin = "user_count_login"
	// FieldUserCountRegister holds the string denoting the user_count_register field in the database.
	FieldUserCountRegister = "user_count_register"
	// FieldUserCountOrder holds the string denoting the user_count_order field in the database.
	FieldUserCountOrder = "user_count_order"
	// FieldUserCountLoginorder holds the string denoting the user_count_loginorder field in the database.
	FieldUserCountLoginorder = "user_count_loginorder"
	// FieldOrderCountCreate holds the string denoting the order_count_create field in the database.
	FieldOrderCountCreate = "order_count_create"
	// FieldOrderCountFinish holds the string denoting the order_count_finish field in the database.
	FieldOrderCountFinish = "order_count_finish"
	// FieldOrderCountCancel holds the string denoting the order_count_cancel field in the database.
	FieldOrderCountCancel = "order_count_cancel"
	// FieldOrderAmount holds the string denoting the order_amount field in the database.
	FieldOrderAmount = "order_amount"
	// FieldOrderDuration holds the string denoting the order_duration field in the database.
	FieldOrderDuration = "order_duration"
	// FieldOrderMileage holds the string denoting the order_mileage field in the database.
	FieldOrderMileage = "order_mileage"
	// FieldCarCountDeploy holds the string denoting the car_count_deploy field in the database.
	FieldCarCountDeploy = "car_count_deploy"
	// FieldCarCountOperation holds the string denoting the car_count_operation field in the database.
	FieldCarCountOperation = "car_count_operation"
	// FieldCarOperationManualDuration holds the string denoting the car_operation_manual_duration field in the database.
	FieldCarOperationManualDuration = "car_operation_manual_duration"
	// FieldCarOperationAutoDuration holds the string denoting the car_operation_auto_duration field in the database.
	FieldCarOperationAutoDuration = "car_operation_auto_duration"
	// FieldCarOperationNormalDuration holds the string denoting the car_operation_normal_duration field in the database.
	FieldCarOperationNormalDuration = "car_operation_normal_duration"
	// FieldCarOperationFaultDuration holds the string denoting the car_operation_fault_duration field in the database.
	FieldCarOperationFaultDuration = "car_operation_fault_duration"
	// FieldCarOperationMileage holds the string denoting the car_operation_mileage field in the database.
	FieldCarOperationMileage = "car_operation_mileage"
	// FieldCarOperationFaultTimes holds the string denoting the car_operation_fault_times field in the database.
	FieldCarOperationFaultTimes = "car_operation_fault_times"
	// FieldCarMaintainManualDuration holds the string denoting the car_maintain_manual_duration field in the database.
	FieldCarMaintainManualDuration = "car_maintain_manual_duration"
	// FieldCarMaintainAutoDuration holds the string denoting the car_maintain_auto_duration field in the database.
	FieldCarMaintainAutoDuration = "car_maintain_auto_duration"
	// FieldCarMaintainNormalDuration holds the string denoting the car_maintain_normal_duration field in the database.
	FieldCarMaintainNormalDuration = "car_maintain_normal_duration"
	// FieldCarMaintainFaultDuration holds the string denoting the car_maintain_fault_duration field in the database.
	FieldCarMaintainFaultDuration = "car_maintain_fault_duration"
	// FieldCarMaintainMileage holds the string denoting the car_maintain_mileage field in the database.
	FieldCarMaintainMileage = "car_maintain_mileage"
	// FieldCarMaintainFaultTimes holds the string denoting the car_maintain_fault_times field in the database.
	FieldCarMaintainFaultTimes = "car_maintain_fault_times"
	// FieldCarAlarmTimes holds the string denoting the car_alarm_times field in the database.
	FieldCarAlarmTimes = "car_alarm_times"
	// FieldStatsTime holds the string denoting the stats_time field in the database.
	FieldStatsTime = "stats_time"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// Table holds the table name of the statsdailyscenicarea in the database.
	Table = "stats_daily_scenic_areas"
)

// Columns holds all SQL columns for statsdailyscenicarea fields.
var Columns = []string{
	FieldID,
	FieldScenicAreaID,
	FieldY,
	FieldM,
	FieldD,
	FieldWeek,
	FieldWeekday,
	FieldPeriod,
	FieldUserCountLogin,
	FieldUserCountRegister,
	FieldUserCountOrder,
	FieldUserCountLoginorder,
	FieldOrderCountCreate,
	FieldOrderCountFinish,
	FieldOrderCountCancel,
	FieldOrderAmount,
	FieldOrderDuration,
	FieldOrderMileage,
	FieldCarCountDeploy,
	FieldCarCountOperation,
	FieldCarOperationManualDuration,
	FieldCarOperationAutoDuration,
	FieldCarOperationNormalDuration,
	FieldCarOperationFaultDuration,
	FieldCarOperationMileage,
	FieldCarOperationFaultTimes,
	FieldCarMaintainManualDuration,
	FieldCarMaintainAutoDuration,
	FieldCarMaintainNormalDuration,
	FieldCarMaintainFaultDuration,
	FieldCarMaintainMileage,
	FieldCarMaintainFaultTimes,
	FieldCarAlarmTimes,
	FieldStatsTime,
	FieldCreateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUserCountLogin holds the default value on creation for the "user_count_login" field.
	DefaultUserCountLogin int
	// DefaultUserCountRegister holds the default value on creation for the "user_count_register" field.
	DefaultUserCountRegister int
	// DefaultUserCountOrder holds the default value on creation for the "user_count_order" field.
	DefaultUserCountOrder int
	// DefaultUserCountLoginorder holds the default value on creation for the "user_count_loginorder" field.
	DefaultUserCountLoginorder int
	// DefaultOrderCountCreate holds the default value on creation for the "order_count_create" field.
	DefaultOrderCountCreate int
	// DefaultOrderCountFinish holds the default value on creation for the "order_count_finish" field.
	DefaultOrderCountFinish int
	// DefaultOrderCountCancel holds the default value on creation for the "order_count_cancel" field.
	DefaultOrderCountCancel int
	// DefaultOrderAmount holds the default value on creation for the "order_amount" field.
	DefaultOrderAmount int
	// DefaultOrderDuration holds the default value on creation for the "order_duration" field.
	DefaultOrderDuration int
	// DefaultOrderMileage holds the default value on creation for the "order_mileage" field.
	DefaultOrderMileage int
	// DefaultCarCountDeploy holds the default value on creation for the "car_count_deploy" field.
	DefaultCarCountDeploy int
	// DefaultCarCountOperation holds the default value on creation for the "car_count_operation" field.
	DefaultCarCountOperation int
	// DefaultCarOperationManualDuration holds the default value on creation for the "car_operation_manual_duration" field.
	DefaultCarOperationManualDuration float32
	// DefaultCarOperationAutoDuration holds the default value on creation for the "car_operation_auto_duration" field.
	DefaultCarOperationAutoDuration float32
	// DefaultCarOperationNormalDuration holds the default value on creation for the "car_operation_normal_duration" field.
	DefaultCarOperationNormalDuration float32
	// DefaultCarOperationFaultDuration holds the default value on creation for the "car_operation_fault_duration" field.
	DefaultCarOperationFaultDuration float32
	// DefaultCarOperationMileage holds the default value on creation for the "car_operation_mileage" field.
	DefaultCarOperationMileage float32
	// DefaultCarOperationFaultTimes holds the default value on creation for the "car_operation_fault_times" field.
	DefaultCarOperationFaultTimes uint32
	// DefaultCarMaintainManualDuration holds the default value on creation for the "car_maintain_manual_duration" field.
	DefaultCarMaintainManualDuration float32
	// DefaultCarMaintainAutoDuration holds the default value on creation for the "car_maintain_auto_duration" field.
	DefaultCarMaintainAutoDuration float32
	// DefaultCarMaintainNormalDuration holds the default value on creation for the "car_maintain_normal_duration" field.
	DefaultCarMaintainNormalDuration float32
	// DefaultCarMaintainFaultDuration holds the default value on creation for the "car_maintain_fault_duration" field.
	DefaultCarMaintainFaultDuration float32
	// DefaultCarMaintainMileage holds the default value on creation for the "car_maintain_mileage" field.
	DefaultCarMaintainMileage float32
	// DefaultCarMaintainFaultTimes holds the default value on creation for the "car_maintain_fault_times" field.
	DefaultCarMaintainFaultTimes uint32
	// DefaultCarAlarmTimes holds the default value on creation for the "car_alarm_times" field.
	DefaultCarAlarmTimes int
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
)

// OrderOption defines the ordering options for the StatsDailyScenicArea queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByScenicAreaID orders the results by the scenic_area_id field.
func ByScenicAreaID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldScenicAreaID, opts...).ToFunc()
}

// ByY orders the results by the y field.
func ByY(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldY, opts...).ToFunc()
}

// ByM orders the results by the m field.
func ByM(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldM, opts...).ToFunc()
}

// ByD orders the results by the d field.
func ByD(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldD, opts...).ToFunc()
}

// ByWeek orders the results by the week field.
func ByWeek(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWeek, opts...).ToFunc()
}

// ByWeekday orders the results by the weekday field.
func ByWeekday(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWeekday, opts...).ToFunc()
}

// ByPeriod orders the results by the period field.
func ByPeriod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPeriod, opts...).ToFunc()
}

// ByUserCountLogin orders the results by the user_count_login field.
func ByUserCountLogin(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserCountLogin, opts...).ToFunc()
}

// ByUserCountRegister orders the results by the user_count_register field.
func ByUserCountRegister(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserCountRegister, opts...).ToFunc()
}

// ByUserCountOrder orders the results by the user_count_order field.
func ByUserCountOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserCountOrder, opts...).ToFunc()
}

// ByUserCountLoginorder orders the results by the user_count_loginorder field.
func ByUserCountLoginorder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUserCountLoginorder, opts...).ToFunc()
}

// ByOrderCountCreate orders the results by the order_count_create field.
func ByOrderCountCreate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderCountCreate, opts...).ToFunc()
}

// ByOrderCountFinish orders the results by the order_count_finish field.
func ByOrderCountFinish(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderCountFinish, opts...).ToFunc()
}

// ByOrderCountCancel orders the results by the order_count_cancel field.
func ByOrderCountCancel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderCountCancel, opts...).ToFunc()
}

// ByOrderAmount orders the results by the order_amount field.
func ByOrderAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderAmount, opts...).ToFunc()
}

// ByOrderDuration orders the results by the order_duration field.
func ByOrderDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderDuration, opts...).ToFunc()
}

// ByOrderMileage orders the results by the order_mileage field.
func ByOrderMileage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderMileage, opts...).ToFunc()
}

// ByCarCountDeploy orders the results by the car_count_deploy field.
func ByCarCountDeploy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarCountDeploy, opts...).ToFunc()
}

// ByCarCountOperation orders the results by the car_count_operation field.
func ByCarCountOperation(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarCountOperation, opts...).ToFunc()
}

// ByCarOperationManualDuration orders the results by the car_operation_manual_duration field.
func ByCarOperationManualDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarOperationManualDuration, opts...).ToFunc()
}

// ByCarOperationAutoDuration orders the results by the car_operation_auto_duration field.
func ByCarOperationAutoDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarOperationAutoDuration, opts...).ToFunc()
}

// ByCarOperationNormalDuration orders the results by the car_operation_normal_duration field.
func ByCarOperationNormalDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarOperationNormalDuration, opts...).ToFunc()
}

// ByCarOperationFaultDuration orders the results by the car_operation_fault_duration field.
func ByCarOperationFaultDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarOperationFaultDuration, opts...).ToFunc()
}

// ByCarOperationMileage orders the results by the car_operation_mileage field.
func ByCarOperationMileage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarOperationMileage, opts...).ToFunc()
}

// ByCarOperationFaultTimes orders the results by the car_operation_fault_times field.
func ByCarOperationFaultTimes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarOperationFaultTimes, opts...).ToFunc()
}

// ByCarMaintainManualDuration orders the results by the car_maintain_manual_duration field.
func ByCarMaintainManualDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarMaintainManualDuration, opts...).ToFunc()
}

// ByCarMaintainAutoDuration orders the results by the car_maintain_auto_duration field.
func ByCarMaintainAutoDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarMaintainAutoDuration, opts...).ToFunc()
}

// ByCarMaintainNormalDuration orders the results by the car_maintain_normal_duration field.
func ByCarMaintainNormalDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarMaintainNormalDuration, opts...).ToFunc()
}

// ByCarMaintainFaultDuration orders the results by the car_maintain_fault_duration field.
func ByCarMaintainFaultDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarMaintainFaultDuration, opts...).ToFunc()
}

// ByCarMaintainMileage orders the results by the car_maintain_mileage field.
func ByCarMaintainMileage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarMaintainMileage, opts...).ToFunc()
}

// ByCarMaintainFaultTimes orders the results by the car_maintain_fault_times field.
func ByCarMaintainFaultTimes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarMaintainFaultTimes, opts...).ToFunc()
}

// ByCarAlarmTimes orders the results by the car_alarm_times field.
func ByCarAlarmTimes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCarAlarmTimes, opts...).ToFunc()
}

// ByStatsTime orders the results by the stats_time field.
func ByStatsTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStatsTime, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}
