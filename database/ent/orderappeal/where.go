// Code generated by ent, DO NOT EDIT.

package orderappeal

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldID, id))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldScenicAreaID, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldUserID, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldOrderID, v))
}

// OrderNo applies equality check predicate on the "order_no" field. It's identical to OrderNoEQ.
func OrderNo(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldOrderNo, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldType, v))
}

// EndStopID applies equality check predicate on the "end_stop_id" field. It's identical to EndStopIDEQ.
func EndStopID(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldEndStopID, v))
}

// EndStopImageID applies equality check predicate on the "end_stop_image_id" field. It's identical to EndStopImageIDEQ.
func EndStopImageID(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldEndStopImageID, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldState, v))
}

// RefundAmount applies equality check predicate on the "refund_amount" field. It's identical to RefundAmountEQ.
func RefundAmount(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldRefundAmount, v))
}

// UserComment applies equality check predicate on the "user_comment" field. It's identical to UserCommentEQ.
func UserComment(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldUserComment, v))
}

// ReviewComment applies equality check predicate on the "review_comment" field. It's identical to ReviewCommentEQ.
func ReviewComment(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldReviewComment, v))
}

// RefundTime applies equality check predicate on the "refund_time" field. It's identical to RefundTimeEQ.
func RefundTime(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldRefundTime, v))
}

// ReviewTime applies equality check predicate on the "review_time" field. It's identical to ReviewTimeEQ.
func ReviewTime(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldReviewTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldUpdateTime, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDGT applies the GT predicate on the "scenic_area_id" field.
func ScenicAreaIDGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldScenicAreaID, v))
}

// ScenicAreaIDGTE applies the GTE predicate on the "scenic_area_id" field.
func ScenicAreaIDGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldScenicAreaID, v))
}

// ScenicAreaIDLT applies the LT predicate on the "scenic_area_id" field.
func ScenicAreaIDLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldScenicAreaID, v))
}

// ScenicAreaIDLTE applies the LTE predicate on the "scenic_area_id" field.
func ScenicAreaIDLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldScenicAreaID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldUserID, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldOrderID, v))
}

// OrderNoEQ applies the EQ predicate on the "order_no" field.
func OrderNoEQ(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldOrderNo, v))
}

// OrderNoNEQ applies the NEQ predicate on the "order_no" field.
func OrderNoNEQ(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldOrderNo, v))
}

// OrderNoIn applies the In predicate on the "order_no" field.
func OrderNoIn(vs ...string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldOrderNo, vs...))
}

// OrderNoNotIn applies the NotIn predicate on the "order_no" field.
func OrderNoNotIn(vs ...string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldOrderNo, vs...))
}

// OrderNoGT applies the GT predicate on the "order_no" field.
func OrderNoGT(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldOrderNo, v))
}

// OrderNoGTE applies the GTE predicate on the "order_no" field.
func OrderNoGTE(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldOrderNo, v))
}

// OrderNoLT applies the LT predicate on the "order_no" field.
func OrderNoLT(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldOrderNo, v))
}

// OrderNoLTE applies the LTE predicate on the "order_no" field.
func OrderNoLTE(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldOrderNo, v))
}

// OrderNoContains applies the Contains predicate on the "order_no" field.
func OrderNoContains(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldContains(FieldOrderNo, v))
}

// OrderNoHasPrefix applies the HasPrefix predicate on the "order_no" field.
func OrderNoHasPrefix(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldHasPrefix(FieldOrderNo, v))
}

// OrderNoHasSuffix applies the HasSuffix predicate on the "order_no" field.
func OrderNoHasSuffix(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldHasSuffix(FieldOrderNo, v))
}

// OrderNoEqualFold applies the EqualFold predicate on the "order_no" field.
func OrderNoEqualFold(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEqualFold(FieldOrderNo, v))
}

// OrderNoContainsFold applies the ContainsFold predicate on the "order_no" field.
func OrderNoContainsFold(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldContainsFold(FieldOrderNo, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldType, v))
}

// EndStopIDEQ applies the EQ predicate on the "end_stop_id" field.
func EndStopIDEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldEndStopID, v))
}

// EndStopIDNEQ applies the NEQ predicate on the "end_stop_id" field.
func EndStopIDNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldEndStopID, v))
}

// EndStopIDIn applies the In predicate on the "end_stop_id" field.
func EndStopIDIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldEndStopID, vs...))
}

// EndStopIDNotIn applies the NotIn predicate on the "end_stop_id" field.
func EndStopIDNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldEndStopID, vs...))
}

// EndStopIDGT applies the GT predicate on the "end_stop_id" field.
func EndStopIDGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldEndStopID, v))
}

// EndStopIDGTE applies the GTE predicate on the "end_stop_id" field.
func EndStopIDGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldEndStopID, v))
}

// EndStopIDLT applies the LT predicate on the "end_stop_id" field.
func EndStopIDLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldEndStopID, v))
}

// EndStopIDLTE applies the LTE predicate on the "end_stop_id" field.
func EndStopIDLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldEndStopID, v))
}

// EndStopImageIDEQ applies the EQ predicate on the "end_stop_image_id" field.
func EndStopImageIDEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldEndStopImageID, v))
}

// EndStopImageIDNEQ applies the NEQ predicate on the "end_stop_image_id" field.
func EndStopImageIDNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldEndStopImageID, v))
}

// EndStopImageIDIn applies the In predicate on the "end_stop_image_id" field.
func EndStopImageIDIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldEndStopImageID, vs...))
}

// EndStopImageIDNotIn applies the NotIn predicate on the "end_stop_image_id" field.
func EndStopImageIDNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldEndStopImageID, vs...))
}

// EndStopImageIDGT applies the GT predicate on the "end_stop_image_id" field.
func EndStopImageIDGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldEndStopImageID, v))
}

// EndStopImageIDGTE applies the GTE predicate on the "end_stop_image_id" field.
func EndStopImageIDGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldEndStopImageID, v))
}

// EndStopImageIDLT applies the LT predicate on the "end_stop_image_id" field.
func EndStopImageIDLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldEndStopImageID, v))
}

// EndStopImageIDLTE applies the LTE predicate on the "end_stop_image_id" field.
func EndStopImageIDLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldEndStopImageID, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldState, v))
}

// RefundAmountEQ applies the EQ predicate on the "refund_amount" field.
func RefundAmountEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldRefundAmount, v))
}

// RefundAmountNEQ applies the NEQ predicate on the "refund_amount" field.
func RefundAmountNEQ(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldRefundAmount, v))
}

// RefundAmountIn applies the In predicate on the "refund_amount" field.
func RefundAmountIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldRefundAmount, vs...))
}

// RefundAmountNotIn applies the NotIn predicate on the "refund_amount" field.
func RefundAmountNotIn(vs ...int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldRefundAmount, vs...))
}

// RefundAmountGT applies the GT predicate on the "refund_amount" field.
func RefundAmountGT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldRefundAmount, v))
}

// RefundAmountGTE applies the GTE predicate on the "refund_amount" field.
func RefundAmountGTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldRefundAmount, v))
}

// RefundAmountLT applies the LT predicate on the "refund_amount" field.
func RefundAmountLT(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldRefundAmount, v))
}

// RefundAmountLTE applies the LTE predicate on the "refund_amount" field.
func RefundAmountLTE(v int) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldRefundAmount, v))
}

// UserCommentEQ applies the EQ predicate on the "user_comment" field.
func UserCommentEQ(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldUserComment, v))
}

// UserCommentNEQ applies the NEQ predicate on the "user_comment" field.
func UserCommentNEQ(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldUserComment, v))
}

// UserCommentIn applies the In predicate on the "user_comment" field.
func UserCommentIn(vs ...string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldUserComment, vs...))
}

// UserCommentNotIn applies the NotIn predicate on the "user_comment" field.
func UserCommentNotIn(vs ...string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldUserComment, vs...))
}

// UserCommentGT applies the GT predicate on the "user_comment" field.
func UserCommentGT(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldUserComment, v))
}

// UserCommentGTE applies the GTE predicate on the "user_comment" field.
func UserCommentGTE(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldUserComment, v))
}

// UserCommentLT applies the LT predicate on the "user_comment" field.
func UserCommentLT(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldUserComment, v))
}

// UserCommentLTE applies the LTE predicate on the "user_comment" field.
func UserCommentLTE(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldUserComment, v))
}

// UserCommentContains applies the Contains predicate on the "user_comment" field.
func UserCommentContains(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldContains(FieldUserComment, v))
}

// UserCommentHasPrefix applies the HasPrefix predicate on the "user_comment" field.
func UserCommentHasPrefix(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldHasPrefix(FieldUserComment, v))
}

// UserCommentHasSuffix applies the HasSuffix predicate on the "user_comment" field.
func UserCommentHasSuffix(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldHasSuffix(FieldUserComment, v))
}

// UserCommentEqualFold applies the EqualFold predicate on the "user_comment" field.
func UserCommentEqualFold(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEqualFold(FieldUserComment, v))
}

// UserCommentContainsFold applies the ContainsFold predicate on the "user_comment" field.
func UserCommentContainsFold(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldContainsFold(FieldUserComment, v))
}

// ReviewCommentEQ applies the EQ predicate on the "review_comment" field.
func ReviewCommentEQ(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldReviewComment, v))
}

// ReviewCommentNEQ applies the NEQ predicate on the "review_comment" field.
func ReviewCommentNEQ(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldReviewComment, v))
}

// ReviewCommentIn applies the In predicate on the "review_comment" field.
func ReviewCommentIn(vs ...string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldReviewComment, vs...))
}

// ReviewCommentNotIn applies the NotIn predicate on the "review_comment" field.
func ReviewCommentNotIn(vs ...string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldReviewComment, vs...))
}

// ReviewCommentGT applies the GT predicate on the "review_comment" field.
func ReviewCommentGT(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldReviewComment, v))
}

// ReviewCommentGTE applies the GTE predicate on the "review_comment" field.
func ReviewCommentGTE(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldReviewComment, v))
}

// ReviewCommentLT applies the LT predicate on the "review_comment" field.
func ReviewCommentLT(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldReviewComment, v))
}

// ReviewCommentLTE applies the LTE predicate on the "review_comment" field.
func ReviewCommentLTE(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldReviewComment, v))
}

// ReviewCommentContains applies the Contains predicate on the "review_comment" field.
func ReviewCommentContains(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldContains(FieldReviewComment, v))
}

// ReviewCommentHasPrefix applies the HasPrefix predicate on the "review_comment" field.
func ReviewCommentHasPrefix(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldHasPrefix(FieldReviewComment, v))
}

// ReviewCommentHasSuffix applies the HasSuffix predicate on the "review_comment" field.
func ReviewCommentHasSuffix(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldHasSuffix(FieldReviewComment, v))
}

// ReviewCommentEqualFold applies the EqualFold predicate on the "review_comment" field.
func ReviewCommentEqualFold(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEqualFold(FieldReviewComment, v))
}

// ReviewCommentContainsFold applies the ContainsFold predicate on the "review_comment" field.
func ReviewCommentContainsFold(v string) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldContainsFold(FieldReviewComment, v))
}

// RefundTimeEQ applies the EQ predicate on the "refund_time" field.
func RefundTimeEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldRefundTime, v))
}

// RefundTimeNEQ applies the NEQ predicate on the "refund_time" field.
func RefundTimeNEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldRefundTime, v))
}

// RefundTimeIn applies the In predicate on the "refund_time" field.
func RefundTimeIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldRefundTime, vs...))
}

// RefundTimeNotIn applies the NotIn predicate on the "refund_time" field.
func RefundTimeNotIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldRefundTime, vs...))
}

// RefundTimeGT applies the GT predicate on the "refund_time" field.
func RefundTimeGT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldRefundTime, v))
}

// RefundTimeGTE applies the GTE predicate on the "refund_time" field.
func RefundTimeGTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldRefundTime, v))
}

// RefundTimeLT applies the LT predicate on the "refund_time" field.
func RefundTimeLT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldRefundTime, v))
}

// RefundTimeLTE applies the LTE predicate on the "refund_time" field.
func RefundTimeLTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldRefundTime, v))
}

// RefundTimeIsNil applies the IsNil predicate on the "refund_time" field.
func RefundTimeIsNil() predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIsNull(FieldRefundTime))
}

// RefundTimeNotNil applies the NotNil predicate on the "refund_time" field.
func RefundTimeNotNil() predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotNull(FieldRefundTime))
}

// ReviewTimeEQ applies the EQ predicate on the "review_time" field.
func ReviewTimeEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldReviewTime, v))
}

// ReviewTimeNEQ applies the NEQ predicate on the "review_time" field.
func ReviewTimeNEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldReviewTime, v))
}

// ReviewTimeIn applies the In predicate on the "review_time" field.
func ReviewTimeIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldReviewTime, vs...))
}

// ReviewTimeNotIn applies the NotIn predicate on the "review_time" field.
func ReviewTimeNotIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldReviewTime, vs...))
}

// ReviewTimeGT applies the GT predicate on the "review_time" field.
func ReviewTimeGT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldReviewTime, v))
}

// ReviewTimeGTE applies the GTE predicate on the "review_time" field.
func ReviewTimeGTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldReviewTime, v))
}

// ReviewTimeLT applies the LT predicate on the "review_time" field.
func ReviewTimeLT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldReviewTime, v))
}

// ReviewTimeLTE applies the LTE predicate on the "review_time" field.
func ReviewTimeLTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldReviewTime, v))
}

// ReviewTimeIsNil applies the IsNil predicate on the "review_time" field.
func ReviewTimeIsNil() predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIsNull(FieldReviewTime))
}

// ReviewTimeNotNil applies the NotNil predicate on the "review_time" field.
func ReviewTimeNotNil() predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotNull(FieldReviewTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderAppeal) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderAppeal) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderAppeal) predicate.OrderAppeal {
	return predicate.OrderAppeal(sql.NotPredicates(p))
}
