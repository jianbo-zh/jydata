// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/jianbo-zh/jydata/database/ent/poiextendyokee"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
)

// PoiExtendYokeeUpdate is the builder for updating PoiExtendYokee entities.
type PoiExtendYokeeUpdate struct {
	config
	hooks    []Hook
	mutation *PoiExtendYokeeMutation
}

// Where appends a list predicates to the PoiExtendYokeeUpdate builder.
func (peyu *PoiExtendYokeeUpdate) Where(ps ...predicate.PoiExtendYokee) *PoiExtendYokeeUpdate {
	peyu.mutation.Where(ps...)
	return peyu
}

// SetPoiID sets the "poi_id" field.
func (peyu *PoiExtendYokeeUpdate) SetPoiID(i int) *PoiExtendYokeeUpdate {
	peyu.mutation.ResetPoiID()
	peyu.mutation.SetPoiID(i)
	return peyu
}

// SetNillablePoiID sets the "poi_id" field if the given value is not nil.
func (peyu *PoiExtendYokeeUpdate) SetNillablePoiID(i *int) *PoiExtendYokeeUpdate {
	if i != nil {
		peyu.SetPoiID(*i)
	}
	return peyu
}

// AddPoiID adds i to the "poi_id" field.
func (peyu *PoiExtendYokeeUpdate) AddPoiID(i int) *PoiExtendYokeeUpdate {
	peyu.mutation.AddPoiID(i)
	return peyu
}

// SetYokeeStationID sets the "yokee_station_id" field.
func (peyu *PoiExtendYokeeUpdate) SetYokeeStationID(i int) *PoiExtendYokeeUpdate {
	peyu.mutation.ResetYokeeStationID()
	peyu.mutation.SetYokeeStationID(i)
	return peyu
}

// SetNillableYokeeStationID sets the "yokee_station_id" field if the given value is not nil.
func (peyu *PoiExtendYokeeUpdate) SetNillableYokeeStationID(i *int) *PoiExtendYokeeUpdate {
	if i != nil {
		peyu.SetYokeeStationID(*i)
	}
	return peyu
}

// AddYokeeStationID adds i to the "yokee_station_id" field.
func (peyu *PoiExtendYokeeUpdate) AddYokeeStationID(i int) *PoiExtendYokeeUpdate {
	peyu.mutation.AddYokeeStationID(i)
	return peyu
}

// SetYokeeStationName sets the "yokee_station_name" field.
func (peyu *PoiExtendYokeeUpdate) SetYokeeStationName(s string) *PoiExtendYokeeUpdate {
	peyu.mutation.SetYokeeStationName(s)
	return peyu
}

// SetNillableYokeeStationName sets the "yokee_station_name" field if the given value is not nil.
func (peyu *PoiExtendYokeeUpdate) SetNillableYokeeStationName(s *string) *PoiExtendYokeeUpdate {
	if s != nil {
		peyu.SetYokeeStationName(*s)
	}
	return peyu
}

// SetYokeeStopID sets the "yokee_stop_id" field.
func (peyu *PoiExtendYokeeUpdate) SetYokeeStopID(i int) *PoiExtendYokeeUpdate {
	peyu.mutation.ResetYokeeStopID()
	peyu.mutation.SetYokeeStopID(i)
	return peyu
}

// SetNillableYokeeStopID sets the "yokee_stop_id" field if the given value is not nil.
func (peyu *PoiExtendYokeeUpdate) SetNillableYokeeStopID(i *int) *PoiExtendYokeeUpdate {
	if i != nil {
		peyu.SetYokeeStopID(*i)
	}
	return peyu
}

// AddYokeeStopID adds i to the "yokee_stop_id" field.
func (peyu *PoiExtendYokeeUpdate) AddYokeeStopID(i int) *PoiExtendYokeeUpdate {
	peyu.mutation.AddYokeeStopID(i)
	return peyu
}

// SetYokeeStopName sets the "yokee_stop_name" field.
func (peyu *PoiExtendYokeeUpdate) SetYokeeStopName(s string) *PoiExtendYokeeUpdate {
	peyu.mutation.SetYokeeStopName(s)
	return peyu
}

// SetNillableYokeeStopName sets the "yokee_stop_name" field if the given value is not nil.
func (peyu *PoiExtendYokeeUpdate) SetNillableYokeeStopName(s *string) *PoiExtendYokeeUpdate {
	if s != nil {
		peyu.SetYokeeStopName(*s)
	}
	return peyu
}

// SetUpdateTime sets the "update_time" field.
func (peyu *PoiExtendYokeeUpdate) SetUpdateTime(t time.Time) *PoiExtendYokeeUpdate {
	peyu.mutation.SetUpdateTime(t)
	return peyu
}

// Mutation returns the PoiExtendYokeeMutation object of the builder.
func (peyu *PoiExtendYokeeUpdate) Mutation() *PoiExtendYokeeMutation {
	return peyu.mutation
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (peyu *PoiExtendYokeeUpdate) Save(ctx context.Context) (int, error) {
	peyu.defaults()
	return withHooks(ctx, peyu.sqlSave, peyu.mutation, peyu.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (peyu *PoiExtendYokeeUpdate) SaveX(ctx context.Context) int {
	affected, err := peyu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (peyu *PoiExtendYokeeUpdate) Exec(ctx context.Context) error {
	_, err := peyu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (peyu *PoiExtendYokeeUpdate) ExecX(ctx context.Context) {
	if err := peyu.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (peyu *PoiExtendYokeeUpdate) defaults() {
	if _, ok := peyu.mutation.UpdateTime(); !ok {
		v := poiextendyokee.UpdateDefaultUpdateTime()
		peyu.mutation.SetUpdateTime(v)
	}
}

func (peyu *PoiExtendYokeeUpdate) sqlSave(ctx context.Context) (n int, err error) {
	_spec := sqlgraph.NewUpdateSpec(poiextendyokee.Table, poiextendyokee.Columns, sqlgraph.NewFieldSpec(poiextendyokee.FieldID, field.TypeInt))
	if ps := peyu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := peyu.mutation.PoiID(); ok {
		_spec.SetField(poiextendyokee.FieldPoiID, field.TypeInt, value)
	}
	if value, ok := peyu.mutation.AddedPoiID(); ok {
		_spec.AddField(poiextendyokee.FieldPoiID, field.TypeInt, value)
	}
	if value, ok := peyu.mutation.YokeeStationID(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStationID, field.TypeInt, value)
	}
	if value, ok := peyu.mutation.AddedYokeeStationID(); ok {
		_spec.AddField(poiextendyokee.FieldYokeeStationID, field.TypeInt, value)
	}
	if value, ok := peyu.mutation.YokeeStationName(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStationName, field.TypeString, value)
	}
	if value, ok := peyu.mutation.YokeeStopID(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStopID, field.TypeInt, value)
	}
	if value, ok := peyu.mutation.AddedYokeeStopID(); ok {
		_spec.AddField(poiextendyokee.FieldYokeeStopID, field.TypeInt, value)
	}
	if value, ok := peyu.mutation.YokeeStopName(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStopName, field.TypeString, value)
	}
	if value, ok := peyu.mutation.UpdateTime(); ok {
		_spec.SetField(poiextendyokee.FieldUpdateTime, field.TypeTime, value)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, peyu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{poiextendyokee.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	peyu.mutation.done = true
	return n, nil
}

// PoiExtendYokeeUpdateOne is the builder for updating a single PoiExtendYokee entity.
type PoiExtendYokeeUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *PoiExtendYokeeMutation
}

// SetPoiID sets the "poi_id" field.
func (peyuo *PoiExtendYokeeUpdateOne) SetPoiID(i int) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.ResetPoiID()
	peyuo.mutation.SetPoiID(i)
	return peyuo
}

// SetNillablePoiID sets the "poi_id" field if the given value is not nil.
func (peyuo *PoiExtendYokeeUpdateOne) SetNillablePoiID(i *int) *PoiExtendYokeeUpdateOne {
	if i != nil {
		peyuo.SetPoiID(*i)
	}
	return peyuo
}

// AddPoiID adds i to the "poi_id" field.
func (peyuo *PoiExtendYokeeUpdateOne) AddPoiID(i int) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.AddPoiID(i)
	return peyuo
}

// SetYokeeStationID sets the "yokee_station_id" field.
func (peyuo *PoiExtendYokeeUpdateOne) SetYokeeStationID(i int) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.ResetYokeeStationID()
	peyuo.mutation.SetYokeeStationID(i)
	return peyuo
}

// SetNillableYokeeStationID sets the "yokee_station_id" field if the given value is not nil.
func (peyuo *PoiExtendYokeeUpdateOne) SetNillableYokeeStationID(i *int) *PoiExtendYokeeUpdateOne {
	if i != nil {
		peyuo.SetYokeeStationID(*i)
	}
	return peyuo
}

// AddYokeeStationID adds i to the "yokee_station_id" field.
func (peyuo *PoiExtendYokeeUpdateOne) AddYokeeStationID(i int) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.AddYokeeStationID(i)
	return peyuo
}

// SetYokeeStationName sets the "yokee_station_name" field.
func (peyuo *PoiExtendYokeeUpdateOne) SetYokeeStationName(s string) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.SetYokeeStationName(s)
	return peyuo
}

// SetNillableYokeeStationName sets the "yokee_station_name" field if the given value is not nil.
func (peyuo *PoiExtendYokeeUpdateOne) SetNillableYokeeStationName(s *string) *PoiExtendYokeeUpdateOne {
	if s != nil {
		peyuo.SetYokeeStationName(*s)
	}
	return peyuo
}

// SetYokeeStopID sets the "yokee_stop_id" field.
func (peyuo *PoiExtendYokeeUpdateOne) SetYokeeStopID(i int) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.ResetYokeeStopID()
	peyuo.mutation.SetYokeeStopID(i)
	return peyuo
}

// SetNillableYokeeStopID sets the "yokee_stop_id" field if the given value is not nil.
func (peyuo *PoiExtendYokeeUpdateOne) SetNillableYokeeStopID(i *int) *PoiExtendYokeeUpdateOne {
	if i != nil {
		peyuo.SetYokeeStopID(*i)
	}
	return peyuo
}

// AddYokeeStopID adds i to the "yokee_stop_id" field.
func (peyuo *PoiExtendYokeeUpdateOne) AddYokeeStopID(i int) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.AddYokeeStopID(i)
	return peyuo
}

// SetYokeeStopName sets the "yokee_stop_name" field.
func (peyuo *PoiExtendYokeeUpdateOne) SetYokeeStopName(s string) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.SetYokeeStopName(s)
	return peyuo
}

// SetNillableYokeeStopName sets the "yokee_stop_name" field if the given value is not nil.
func (peyuo *PoiExtendYokeeUpdateOne) SetNillableYokeeStopName(s *string) *PoiExtendYokeeUpdateOne {
	if s != nil {
		peyuo.SetYokeeStopName(*s)
	}
	return peyuo
}

// SetUpdateTime sets the "update_time" field.
func (peyuo *PoiExtendYokeeUpdateOne) SetUpdateTime(t time.Time) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.SetUpdateTime(t)
	return peyuo
}

// Mutation returns the PoiExtendYokeeMutation object of the builder.
func (peyuo *PoiExtendYokeeUpdateOne) Mutation() *PoiExtendYokeeMutation {
	return peyuo.mutation
}

// Where appends a list predicates to the PoiExtendYokeeUpdate builder.
func (peyuo *PoiExtendYokeeUpdateOne) Where(ps ...predicate.PoiExtendYokee) *PoiExtendYokeeUpdateOne {
	peyuo.mutation.Where(ps...)
	return peyuo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (peyuo *PoiExtendYokeeUpdateOne) Select(field string, fields ...string) *PoiExtendYokeeUpdateOne {
	peyuo.fields = append([]string{field}, fields...)
	return peyuo
}

// Save executes the query and returns the updated PoiExtendYokee entity.
func (peyuo *PoiExtendYokeeUpdateOne) Save(ctx context.Context) (*PoiExtendYokee, error) {
	peyuo.defaults()
	return withHooks(ctx, peyuo.sqlSave, peyuo.mutation, peyuo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (peyuo *PoiExtendYokeeUpdateOne) SaveX(ctx context.Context) *PoiExtendYokee {
	node, err := peyuo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (peyuo *PoiExtendYokeeUpdateOne) Exec(ctx context.Context) error {
	_, err := peyuo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (peyuo *PoiExtendYokeeUpdateOne) ExecX(ctx context.Context) {
	if err := peyuo.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (peyuo *PoiExtendYokeeUpdateOne) defaults() {
	if _, ok := peyuo.mutation.UpdateTime(); !ok {
		v := poiextendyokee.UpdateDefaultUpdateTime()
		peyuo.mutation.SetUpdateTime(v)
	}
}

func (peyuo *PoiExtendYokeeUpdateOne) sqlSave(ctx context.Context) (_node *PoiExtendYokee, err error) {
	_spec := sqlgraph.NewUpdateSpec(poiextendyokee.Table, poiextendyokee.Columns, sqlgraph.NewFieldSpec(poiextendyokee.FieldID, field.TypeInt))
	id, ok := peyuo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "PoiExtendYokee.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := peyuo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, poiextendyokee.FieldID)
		for _, f := range fields {
			if !poiextendyokee.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != poiextendyokee.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := peyuo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := peyuo.mutation.PoiID(); ok {
		_spec.SetField(poiextendyokee.FieldPoiID, field.TypeInt, value)
	}
	if value, ok := peyuo.mutation.AddedPoiID(); ok {
		_spec.AddField(poiextendyokee.FieldPoiID, field.TypeInt, value)
	}
	if value, ok := peyuo.mutation.YokeeStationID(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStationID, field.TypeInt, value)
	}
	if value, ok := peyuo.mutation.AddedYokeeStationID(); ok {
		_spec.AddField(poiextendyokee.FieldYokeeStationID, field.TypeInt, value)
	}
	if value, ok := peyuo.mutation.YokeeStationName(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStationName, field.TypeString, value)
	}
	if value, ok := peyuo.mutation.YokeeStopID(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStopID, field.TypeInt, value)
	}
	if value, ok := peyuo.mutation.AddedYokeeStopID(); ok {
		_spec.AddField(poiextendyokee.FieldYokeeStopID, field.TypeInt, value)
	}
	if value, ok := peyuo.mutation.YokeeStopName(); ok {
		_spec.SetField(poiextendyokee.FieldYokeeStopName, field.TypeString, value)
	}
	if value, ok := peyuo.mutation.UpdateTime(); ok {
		_spec.SetField(poiextendyokee.FieldUpdateTime, field.TypeTime, value)
	}
	_node = &PoiExtendYokee{config: peyuo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, peyuo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{poiextendyokee.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	peyuo.mutation.done = true
	return _node, nil
}
