// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/jianbo-zh/jydata/database/ent/car"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"github.com/jianbo-zh/jydata/database/ent/scenicarea"
	"github.com/jianbo-zh/jydata/database/ent/statshourlycar"
)

// StatsHourlyCarUpdate is the builder for updating StatsHourlyCar entities.
type StatsHourlyCarUpdate struct {
	config
	hooks    []Hook
	mutation *StatsHourlyCarMutation
}

// Where appends a list predicates to the StatsHourlyCarUpdate builder.
func (shcu *StatsHourlyCarUpdate) Where(ps ...predicate.StatsHourlyCar) *StatsHourlyCarUpdate {
	shcu.mutation.Where(ps...)
	return shcu
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (shcu *StatsHourlyCarUpdate) SetScenicAreaID(i int) *StatsHourlyCarUpdate {
	shcu.mutation.SetScenicAreaID(i)
	return shcu
}

// SetNillableScenicAreaID sets the "scenic_area_id" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableScenicAreaID(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetScenicAreaID(*i)
	}
	return shcu
}

// SetCarID sets the "car_id" field.
func (shcu *StatsHourlyCarUpdate) SetCarID(i int) *StatsHourlyCarUpdate {
	shcu.mutation.SetCarID(i)
	return shcu
}

// SetNillableCarID sets the "car_id" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCarID(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetCarID(*i)
	}
	return shcu
}

// SetY sets the "y" field.
func (shcu *StatsHourlyCarUpdate) SetY(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetY()
	shcu.mutation.SetY(i)
	return shcu
}

// SetNillableY sets the "y" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableY(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetY(*i)
	}
	return shcu
}

// AddY adds i to the "y" field.
func (shcu *StatsHourlyCarUpdate) AddY(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddY(i)
	return shcu
}

// SetM sets the "m" field.
func (shcu *StatsHourlyCarUpdate) SetM(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetM()
	shcu.mutation.SetM(i)
	return shcu
}

// SetNillableM sets the "m" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableM(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetM(*i)
	}
	return shcu
}

// AddM adds i to the "m" field.
func (shcu *StatsHourlyCarUpdate) AddM(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddM(i)
	return shcu
}

// SetD sets the "d" field.
func (shcu *StatsHourlyCarUpdate) SetD(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetD()
	shcu.mutation.SetD(i)
	return shcu
}

// SetNillableD sets the "d" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableD(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetD(*i)
	}
	return shcu
}

// AddD adds i to the "d" field.
func (shcu *StatsHourlyCarUpdate) AddD(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddD(i)
	return shcu
}

// SetH sets the "h" field.
func (shcu *StatsHourlyCarUpdate) SetH(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetH()
	shcu.mutation.SetH(i)
	return shcu
}

// SetNillableH sets the "h" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableH(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetH(*i)
	}
	return shcu
}

// AddH adds i to the "h" field.
func (shcu *StatsHourlyCarUpdate) AddH(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddH(i)
	return shcu
}

// SetWeek sets the "week" field.
func (shcu *StatsHourlyCarUpdate) SetWeek(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetWeek()
	shcu.mutation.SetWeek(i)
	return shcu
}

// SetNillableWeek sets the "week" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableWeek(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetWeek(*i)
	}
	return shcu
}

// AddWeek adds i to the "week" field.
func (shcu *StatsHourlyCarUpdate) AddWeek(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddWeek(i)
	return shcu
}

// SetWeekday sets the "weekday" field.
func (shcu *StatsHourlyCarUpdate) SetWeekday(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetWeekday()
	shcu.mutation.SetWeekday(i)
	return shcu
}

// SetNillableWeekday sets the "weekday" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableWeekday(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetWeekday(*i)
	}
	return shcu
}

// AddWeekday adds i to the "weekday" field.
func (shcu *StatsHourlyCarUpdate) AddWeekday(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddWeekday(i)
	return shcu
}

// SetPeriod sets the "period" field.
func (shcu *StatsHourlyCarUpdate) SetPeriod(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetPeriod()
	shcu.mutation.SetPeriod(i)
	return shcu
}

// SetNillablePeriod sets the "period" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillablePeriod(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetPeriod(*i)
	}
	return shcu
}

// AddPeriod adds i to the "period" field.
func (shcu *StatsHourlyCarUpdate) AddPeriod(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddPeriod(i)
	return shcu
}

// SetOrderCountCreate sets the "order_count_create" field.
func (shcu *StatsHourlyCarUpdate) SetOrderCountCreate(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderCountCreate()
	shcu.mutation.SetOrderCountCreate(i)
	return shcu
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderCountCreate(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderCountCreate(*i)
	}
	return shcu
}

// AddOrderCountCreate adds i to the "order_count_create" field.
func (shcu *StatsHourlyCarUpdate) AddOrderCountCreate(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderCountCreate(i)
	return shcu
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (shcu *StatsHourlyCarUpdate) SetOrderCountFinish(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderCountFinish()
	shcu.mutation.SetOrderCountFinish(i)
	return shcu
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderCountFinish(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderCountFinish(*i)
	}
	return shcu
}

// AddOrderCountFinish adds i to the "order_count_finish" field.
func (shcu *StatsHourlyCarUpdate) AddOrderCountFinish(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderCountFinish(i)
	return shcu
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (shcu *StatsHourlyCarUpdate) SetOrderCountCancel(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderCountCancel()
	shcu.mutation.SetOrderCountCancel(i)
	return shcu
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderCountCancel(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderCountCancel(*i)
	}
	return shcu
}

// AddOrderCountCancel adds i to the "order_count_cancel" field.
func (shcu *StatsHourlyCarUpdate) AddOrderCountCancel(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderCountCancel(i)
	return shcu
}

// SetOrderAmount sets the "order_amount" field.
func (shcu *StatsHourlyCarUpdate) SetOrderAmount(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderAmount()
	shcu.mutation.SetOrderAmount(i)
	return shcu
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderAmount(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderAmount(*i)
	}
	return shcu
}

// AddOrderAmount adds i to the "order_amount" field.
func (shcu *StatsHourlyCarUpdate) AddOrderAmount(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderAmount(i)
	return shcu
}

// SetOrderDuration sets the "order_duration" field.
func (shcu *StatsHourlyCarUpdate) SetOrderDuration(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderDuration()
	shcu.mutation.SetOrderDuration(i)
	return shcu
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderDuration(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderDuration(*i)
	}
	return shcu
}

// AddOrderDuration adds i to the "order_duration" field.
func (shcu *StatsHourlyCarUpdate) AddOrderDuration(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderDuration(i)
	return shcu
}

// SetOrderMileage sets the "order_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetOrderMileage(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderMileage()
	shcu.mutation.SetOrderMileage(i)
	return shcu
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderMileage(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderMileage(*i)
	}
	return shcu
}

// AddOrderMileage adds i to the "order_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddOrderMileage(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderMileage(i)
	return shcu
}

// SetOrderScore sets the "order_score" field.
func (shcu *StatsHourlyCarUpdate) SetOrderScore(i int) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOrderScore()
	shcu.mutation.SetOrderScore(i)
	return shcu
}

// SetNillableOrderScore sets the "order_score" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOrderScore(i *int) *StatsHourlyCarUpdate {
	if i != nil {
		shcu.SetOrderScore(*i)
	}
	return shcu
}

// AddOrderScore adds i to the "order_score" field.
func (shcu *StatsHourlyCarUpdate) AddOrderScore(i int) *StatsHourlyCarUpdate {
	shcu.mutation.AddOrderScore(i)
	return shcu
}

// SetCumulativeOperationLockDuration sets the "cumulative_operation_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationLockDuration()
	shcu.mutation.SetCumulativeOperationLockDuration(f)
	return shcu
}

// SetNillableCumulativeOperationLockDuration sets the "cumulative_operation_lock_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationLockDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeOperationLockDuration(*f)
	}
	return shcu
}

// AddCumulativeOperationLockDuration adds f to the "cumulative_operation_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationLockDuration(f)
	return shcu
}

// SetCumulativeOperationManualDuration sets the "cumulative_operation_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationManualDuration()
	shcu.mutation.SetCumulativeOperationManualDuration(f)
	return shcu
}

// SetNillableCumulativeOperationManualDuration sets the "cumulative_operation_manual_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationManualDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeOperationManualDuration(*f)
	}
	return shcu
}

// AddCumulativeOperationManualDuration adds f to the "cumulative_operation_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationManualDuration(f)
	return shcu
}

// SetCumulativeOperationAutoDuration sets the "cumulative_operation_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationAutoDuration()
	shcu.mutation.SetCumulativeOperationAutoDuration(f)
	return shcu
}

// SetNillableCumulativeOperationAutoDuration sets the "cumulative_operation_auto_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationAutoDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeOperationAutoDuration(*f)
	}
	return shcu
}

// AddCumulativeOperationAutoDuration adds f to the "cumulative_operation_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationAutoDuration(f)
	return shcu
}

// SetCumulativeOperationFaultDuration sets the "cumulative_operation_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationFaultDuration()
	shcu.mutation.SetCumulativeOperationFaultDuration(f)
	return shcu
}

// SetNillableCumulativeOperationFaultDuration sets the "cumulative_operation_fault_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationFaultDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeOperationFaultDuration(*f)
	}
	return shcu
}

// AddCumulativeOperationFaultDuration adds f to the "cumulative_operation_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationFaultDuration(f)
	return shcu
}

// SetCumulativeOperationLockTimes sets the "cumulative_operation_lock_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationLockTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationLockTimes()
	shcu.mutation.SetCumulativeOperationLockTimes(u)
	return shcu
}

// SetNillableCumulativeOperationLockTimes sets the "cumulative_operation_lock_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationLockTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeOperationLockTimes(*u)
	}
	return shcu
}

// AddCumulativeOperationLockTimes adds u to the "cumulative_operation_lock_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationLockTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationLockTimes(u)
	return shcu
}

// SetCumulativeOperationManualTimes sets the "cumulative_operation_manual_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationManualTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationManualTimes()
	shcu.mutation.SetCumulativeOperationManualTimes(u)
	return shcu
}

// SetNillableCumulativeOperationManualTimes sets the "cumulative_operation_manual_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationManualTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeOperationManualTimes(*u)
	}
	return shcu
}

// AddCumulativeOperationManualTimes adds u to the "cumulative_operation_manual_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationManualTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationManualTimes(u)
	return shcu
}

// SetCumulativeOperationAutoTimes sets the "cumulative_operation_auto_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationAutoTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationAutoTimes()
	shcu.mutation.SetCumulativeOperationAutoTimes(u)
	return shcu
}

// SetNillableCumulativeOperationAutoTimes sets the "cumulative_operation_auto_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationAutoTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeOperationAutoTimes(*u)
	}
	return shcu
}

// AddCumulativeOperationAutoTimes adds u to the "cumulative_operation_auto_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationAutoTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationAutoTimes(u)
	return shcu
}

// SetCumulativeOperationFaultTimes sets the "cumulative_operation_fault_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationFaultTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationFaultTimes()
	shcu.mutation.SetCumulativeOperationFaultTimes(u)
	return shcu
}

// SetNillableCumulativeOperationFaultTimes sets the "cumulative_operation_fault_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationFaultTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeOperationFaultTimes(*u)
	}
	return shcu
}

// AddCumulativeOperationFaultTimes adds u to the "cumulative_operation_fault_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationFaultTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationFaultTimes(u)
	return shcu
}

// SetCumulativeOperationManualMileage sets the "cumulative_operation_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationManualMileage()
	shcu.mutation.SetCumulativeOperationManualMileage(f)
	return shcu
}

// SetNillableCumulativeOperationManualMileage sets the "cumulative_operation_manual_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationManualMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeOperationManualMileage(*f)
	}
	return shcu
}

// AddCumulativeOperationManualMileage adds f to the "cumulative_operation_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationManualMileage(f)
	return shcu
}

// SetCumulativeOperationAutoMileage sets the "cumulative_operation_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeOperationAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeOperationAutoMileage()
	shcu.mutation.SetCumulativeOperationAutoMileage(f)
	return shcu
}

// SetNillableCumulativeOperationAutoMileage sets the "cumulative_operation_auto_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeOperationAutoMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeOperationAutoMileage(*f)
	}
	return shcu
}

// AddCumulativeOperationAutoMileage adds f to the "cumulative_operation_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeOperationAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeOperationAutoMileage(f)
	return shcu
}

// SetCumulativeMaintainLockDuration sets the "cumulative_maintain_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainLockDuration()
	shcu.mutation.SetCumulativeMaintainLockDuration(f)
	return shcu
}

// SetNillableCumulativeMaintainLockDuration sets the "cumulative_maintain_lock_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainLockDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainLockDuration(*f)
	}
	return shcu
}

// AddCumulativeMaintainLockDuration adds f to the "cumulative_maintain_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainLockDuration(f)
	return shcu
}

// SetCumulativeMaintainManualDuration sets the "cumulative_maintain_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainManualDuration()
	shcu.mutation.SetCumulativeMaintainManualDuration(f)
	return shcu
}

// SetNillableCumulativeMaintainManualDuration sets the "cumulative_maintain_manual_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainManualDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainManualDuration(*f)
	}
	return shcu
}

// AddCumulativeMaintainManualDuration adds f to the "cumulative_maintain_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainManualDuration(f)
	return shcu
}

// SetCumulativeMaintainAutoDuration sets the "cumulative_maintain_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainAutoDuration()
	shcu.mutation.SetCumulativeMaintainAutoDuration(f)
	return shcu
}

// SetNillableCumulativeMaintainAutoDuration sets the "cumulative_maintain_auto_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainAutoDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainAutoDuration(*f)
	}
	return shcu
}

// AddCumulativeMaintainAutoDuration adds f to the "cumulative_maintain_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainAutoDuration(f)
	return shcu
}

// SetCumulativeMaintainRemoteDuration sets the "cumulative_maintain_remote_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainRemoteDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainRemoteDuration()
	shcu.mutation.SetCumulativeMaintainRemoteDuration(f)
	return shcu
}

// SetNillableCumulativeMaintainRemoteDuration sets the "cumulative_maintain_remote_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainRemoteDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainRemoteDuration(*f)
	}
	return shcu
}

// AddCumulativeMaintainRemoteDuration adds f to the "cumulative_maintain_remote_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainRemoteDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainRemoteDuration(f)
	return shcu
}

// SetCumulativeMaintainFaultDuration sets the "cumulative_maintain_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainFaultDuration()
	shcu.mutation.SetCumulativeMaintainFaultDuration(f)
	return shcu
}

// SetNillableCumulativeMaintainFaultDuration sets the "cumulative_maintain_fault_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainFaultDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainFaultDuration(*f)
	}
	return shcu
}

// AddCumulativeMaintainFaultDuration adds f to the "cumulative_maintain_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainFaultDuration(f)
	return shcu
}

// SetCumulativeMaintainLockTimes sets the "cumulative_maintain_lock_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainLockTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainLockTimes()
	shcu.mutation.SetCumulativeMaintainLockTimes(u)
	return shcu
}

// SetNillableCumulativeMaintainLockTimes sets the "cumulative_maintain_lock_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainLockTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeMaintainLockTimes(*u)
	}
	return shcu
}

// AddCumulativeMaintainLockTimes adds u to the "cumulative_maintain_lock_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainLockTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainLockTimes(u)
	return shcu
}

// SetCumulativeMaintainManualTimes sets the "cumulative_maintain_manual_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainManualTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainManualTimes()
	shcu.mutation.SetCumulativeMaintainManualTimes(u)
	return shcu
}

// SetNillableCumulativeMaintainManualTimes sets the "cumulative_maintain_manual_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainManualTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeMaintainManualTimes(*u)
	}
	return shcu
}

// AddCumulativeMaintainManualTimes adds u to the "cumulative_maintain_manual_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainManualTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainManualTimes(u)
	return shcu
}

// SetCumulativeMaintainAutoTimes sets the "cumulative_maintain_auto_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainAutoTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainAutoTimes()
	shcu.mutation.SetCumulativeMaintainAutoTimes(u)
	return shcu
}

// SetNillableCumulativeMaintainAutoTimes sets the "cumulative_maintain_auto_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainAutoTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeMaintainAutoTimes(*u)
	}
	return shcu
}

// AddCumulativeMaintainAutoTimes adds u to the "cumulative_maintain_auto_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainAutoTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainAutoTimes(u)
	return shcu
}

// SetCumulativeMaintainRemoteTimes sets the "cumulative_maintain_remote_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainRemoteTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainRemoteTimes()
	shcu.mutation.SetCumulativeMaintainRemoteTimes(u)
	return shcu
}

// SetNillableCumulativeMaintainRemoteTimes sets the "cumulative_maintain_remote_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainRemoteTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeMaintainRemoteTimes(*u)
	}
	return shcu
}

// AddCumulativeMaintainRemoteTimes adds u to the "cumulative_maintain_remote_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainRemoteTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainRemoteTimes(u)
	return shcu
}

// SetCumulativeMaintainFaultTimes sets the "cumulative_maintain_fault_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainFaultTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainFaultTimes()
	shcu.mutation.SetCumulativeMaintainFaultTimes(u)
	return shcu
}

// SetNillableCumulativeMaintainFaultTimes sets the "cumulative_maintain_fault_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainFaultTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeMaintainFaultTimes(*u)
	}
	return shcu
}

// AddCumulativeMaintainFaultTimes adds u to the "cumulative_maintain_fault_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainFaultTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainFaultTimes(u)
	return shcu
}

// SetCumulativeMaintainManualMileage sets the "cumulative_maintain_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainManualMileage()
	shcu.mutation.SetCumulativeMaintainManualMileage(f)
	return shcu
}

// SetNillableCumulativeMaintainManualMileage sets the "cumulative_maintain_manual_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainManualMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainManualMileage(*f)
	}
	return shcu
}

// AddCumulativeMaintainManualMileage adds f to the "cumulative_maintain_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainManualMileage(f)
	return shcu
}

// SetCumulativeMaintainAutoMileage sets the "cumulative_maintain_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainAutoMileage()
	shcu.mutation.SetCumulativeMaintainAutoMileage(f)
	return shcu
}

// SetNillableCumulativeMaintainAutoMileage sets the "cumulative_maintain_auto_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainAutoMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainAutoMileage(*f)
	}
	return shcu
}

// AddCumulativeMaintainAutoMileage adds f to the "cumulative_maintain_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainAutoMileage(f)
	return shcu
}

// SetCumulativeMaintainRemoteMileage sets the "cumulative_maintain_remote_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeMaintainRemoteMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeMaintainRemoteMileage()
	shcu.mutation.SetCumulativeMaintainRemoteMileage(f)
	return shcu
}

// SetNillableCumulativeMaintainRemoteMileage sets the "cumulative_maintain_remote_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeMaintainRemoteMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetCumulativeMaintainRemoteMileage(*f)
	}
	return shcu
}

// AddCumulativeMaintainRemoteMileage adds f to the "cumulative_maintain_remote_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeMaintainRemoteMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeMaintainRemoteMileage(f)
	return shcu
}

// SetCumulativeAlarmTimes sets the "cumulative_alarm_times" field.
func (shcu *StatsHourlyCarUpdate) SetCumulativeAlarmTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetCumulativeAlarmTimes()
	shcu.mutation.SetCumulativeAlarmTimes(u)
	return shcu
}

// SetNillableCumulativeAlarmTimes sets the "cumulative_alarm_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableCumulativeAlarmTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetCumulativeAlarmTimes(*u)
	}
	return shcu
}

// AddCumulativeAlarmTimes adds u to the "cumulative_alarm_times" field.
func (shcu *StatsHourlyCarUpdate) AddCumulativeAlarmTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddCumulativeAlarmTimes(u)
	return shcu
}

// SetOperationLockDuration sets the "operation_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) SetOperationLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationLockDuration()
	shcu.mutation.SetOperationLockDuration(f)
	return shcu
}

// SetNillableOperationLockDuration sets the "operation_lock_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationLockDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetOperationLockDuration(*f)
	}
	return shcu
}

// AddOperationLockDuration adds f to the "operation_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) AddOperationLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationLockDuration(f)
	return shcu
}

// SetOperationManualDuration sets the "operation_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) SetOperationManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationManualDuration()
	shcu.mutation.SetOperationManualDuration(f)
	return shcu
}

// SetNillableOperationManualDuration sets the "operation_manual_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationManualDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetOperationManualDuration(*f)
	}
	return shcu
}

// AddOperationManualDuration adds f to the "operation_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) AddOperationManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationManualDuration(f)
	return shcu
}

// SetOperationAutoDuration sets the "operation_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) SetOperationAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationAutoDuration()
	shcu.mutation.SetOperationAutoDuration(f)
	return shcu
}

// SetNillableOperationAutoDuration sets the "operation_auto_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationAutoDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetOperationAutoDuration(*f)
	}
	return shcu
}

// AddOperationAutoDuration adds f to the "operation_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) AddOperationAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationAutoDuration(f)
	return shcu
}

// SetOperationFaultDuration sets the "operation_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) SetOperationFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationFaultDuration()
	shcu.mutation.SetOperationFaultDuration(f)
	return shcu
}

// SetNillableOperationFaultDuration sets the "operation_fault_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationFaultDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetOperationFaultDuration(*f)
	}
	return shcu
}

// AddOperationFaultDuration adds f to the "operation_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) AddOperationFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationFaultDuration(f)
	return shcu
}

// SetOperationLockTimes sets the "operation_lock_times" field.
func (shcu *StatsHourlyCarUpdate) SetOperationLockTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationLockTimes()
	shcu.mutation.SetOperationLockTimes(u)
	return shcu
}

// SetNillableOperationLockTimes sets the "operation_lock_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationLockTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetOperationLockTimes(*u)
	}
	return shcu
}

// AddOperationLockTimes adds u to the "operation_lock_times" field.
func (shcu *StatsHourlyCarUpdate) AddOperationLockTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationLockTimes(u)
	return shcu
}

// SetOperationManualTimes sets the "operation_manual_times" field.
func (shcu *StatsHourlyCarUpdate) SetOperationManualTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationManualTimes()
	shcu.mutation.SetOperationManualTimes(u)
	return shcu
}

// SetNillableOperationManualTimes sets the "operation_manual_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationManualTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetOperationManualTimes(*u)
	}
	return shcu
}

// AddOperationManualTimes adds u to the "operation_manual_times" field.
func (shcu *StatsHourlyCarUpdate) AddOperationManualTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationManualTimes(u)
	return shcu
}

// SetOperationAutoTimes sets the "operation_auto_times" field.
func (shcu *StatsHourlyCarUpdate) SetOperationAutoTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationAutoTimes()
	shcu.mutation.SetOperationAutoTimes(u)
	return shcu
}

// SetNillableOperationAutoTimes sets the "operation_auto_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationAutoTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetOperationAutoTimes(*u)
	}
	return shcu
}

// AddOperationAutoTimes adds u to the "operation_auto_times" field.
func (shcu *StatsHourlyCarUpdate) AddOperationAutoTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationAutoTimes(u)
	return shcu
}

// SetOperationFaultTimes sets the "operation_fault_times" field.
func (shcu *StatsHourlyCarUpdate) SetOperationFaultTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationFaultTimes()
	shcu.mutation.SetOperationFaultTimes(u)
	return shcu
}

// SetNillableOperationFaultTimes sets the "operation_fault_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationFaultTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetOperationFaultTimes(*u)
	}
	return shcu
}

// AddOperationFaultTimes adds u to the "operation_fault_times" field.
func (shcu *StatsHourlyCarUpdate) AddOperationFaultTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationFaultTimes(u)
	return shcu
}

// SetOperationManualMileage sets the "operation_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetOperationManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationManualMileage()
	shcu.mutation.SetOperationManualMileage(f)
	return shcu
}

// SetNillableOperationManualMileage sets the "operation_manual_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationManualMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetOperationManualMileage(*f)
	}
	return shcu
}

// AddOperationManualMileage adds f to the "operation_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddOperationManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationManualMileage(f)
	return shcu
}

// SetOperationAutoMileage sets the "operation_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetOperationAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetOperationAutoMileage()
	shcu.mutation.SetOperationAutoMileage(f)
	return shcu
}

// SetNillableOperationAutoMileage sets the "operation_auto_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableOperationAutoMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetOperationAutoMileage(*f)
	}
	return shcu
}

// AddOperationAutoMileage adds f to the "operation_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddOperationAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddOperationAutoMileage(f)
	return shcu
}

// SetMaintainLockDuration sets the "maintain_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainLockDuration()
	shcu.mutation.SetMaintainLockDuration(f)
	return shcu
}

// SetNillableMaintainLockDuration sets the "maintain_lock_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainLockDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainLockDuration(*f)
	}
	return shcu
}

// AddMaintainLockDuration adds f to the "maintain_lock_duration" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainLockDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainLockDuration(f)
	return shcu
}

// SetMaintainManualDuration sets the "maintain_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainManualDuration()
	shcu.mutation.SetMaintainManualDuration(f)
	return shcu
}

// SetNillableMaintainManualDuration sets the "maintain_manual_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainManualDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainManualDuration(*f)
	}
	return shcu
}

// AddMaintainManualDuration adds f to the "maintain_manual_duration" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainManualDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainManualDuration(f)
	return shcu
}

// SetMaintainAutoDuration sets the "maintain_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainAutoDuration()
	shcu.mutation.SetMaintainAutoDuration(f)
	return shcu
}

// SetNillableMaintainAutoDuration sets the "maintain_auto_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainAutoDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainAutoDuration(*f)
	}
	return shcu
}

// AddMaintainAutoDuration adds f to the "maintain_auto_duration" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainAutoDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainAutoDuration(f)
	return shcu
}

// SetMaintainRemoteDuration sets the "maintain_remote_duration" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainRemoteDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainRemoteDuration()
	shcu.mutation.SetMaintainRemoteDuration(f)
	return shcu
}

// SetNillableMaintainRemoteDuration sets the "maintain_remote_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainRemoteDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainRemoteDuration(*f)
	}
	return shcu
}

// AddMaintainRemoteDuration adds f to the "maintain_remote_duration" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainRemoteDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainRemoteDuration(f)
	return shcu
}

// SetMaintainFaultDuration sets the "maintain_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainFaultDuration()
	shcu.mutation.SetMaintainFaultDuration(f)
	return shcu
}

// SetNillableMaintainFaultDuration sets the "maintain_fault_duration" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainFaultDuration(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainFaultDuration(*f)
	}
	return shcu
}

// AddMaintainFaultDuration adds f to the "maintain_fault_duration" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainFaultDuration(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainFaultDuration(f)
	return shcu
}

// SetMaintainLockTimes sets the "maintain_lock_times" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainLockTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainLockTimes()
	shcu.mutation.SetMaintainLockTimes(u)
	return shcu
}

// SetNillableMaintainLockTimes sets the "maintain_lock_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainLockTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetMaintainLockTimes(*u)
	}
	return shcu
}

// AddMaintainLockTimes adds u to the "maintain_lock_times" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainLockTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainLockTimes(u)
	return shcu
}

// SetMaintainManualTimes sets the "maintain_manual_times" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainManualTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainManualTimes()
	shcu.mutation.SetMaintainManualTimes(u)
	return shcu
}

// SetNillableMaintainManualTimes sets the "maintain_manual_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainManualTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetMaintainManualTimes(*u)
	}
	return shcu
}

// AddMaintainManualTimes adds u to the "maintain_manual_times" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainManualTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainManualTimes(u)
	return shcu
}

// SetMaintainAutoTimes sets the "maintain_auto_times" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainAutoTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainAutoTimes()
	shcu.mutation.SetMaintainAutoTimes(u)
	return shcu
}

// SetNillableMaintainAutoTimes sets the "maintain_auto_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainAutoTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetMaintainAutoTimes(*u)
	}
	return shcu
}

// AddMaintainAutoTimes adds u to the "maintain_auto_times" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainAutoTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainAutoTimes(u)
	return shcu
}

// SetMaintainRemoteTimes sets the "maintain_remote_times" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainRemoteTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainRemoteTimes()
	shcu.mutation.SetMaintainRemoteTimes(u)
	return shcu
}

// SetNillableMaintainRemoteTimes sets the "maintain_remote_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainRemoteTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetMaintainRemoteTimes(*u)
	}
	return shcu
}

// AddMaintainRemoteTimes adds u to the "maintain_remote_times" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainRemoteTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainRemoteTimes(u)
	return shcu
}

// SetMaintainFaultTimes sets the "maintain_fault_times" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainFaultTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainFaultTimes()
	shcu.mutation.SetMaintainFaultTimes(u)
	return shcu
}

// SetNillableMaintainFaultTimes sets the "maintain_fault_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainFaultTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetMaintainFaultTimes(*u)
	}
	return shcu
}

// AddMaintainFaultTimes adds u to the "maintain_fault_times" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainFaultTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainFaultTimes(u)
	return shcu
}

// SetMaintainManualMileage sets the "maintain_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainManualMileage()
	shcu.mutation.SetMaintainManualMileage(f)
	return shcu
}

// SetNillableMaintainManualMileage sets the "maintain_manual_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainManualMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainManualMileage(*f)
	}
	return shcu
}

// AddMaintainManualMileage adds f to the "maintain_manual_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainManualMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainManualMileage(f)
	return shcu
}

// SetMaintainAutoMileage sets the "maintain_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainAutoMileage()
	shcu.mutation.SetMaintainAutoMileage(f)
	return shcu
}

// SetNillableMaintainAutoMileage sets the "maintain_auto_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainAutoMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainAutoMileage(*f)
	}
	return shcu
}

// AddMaintainAutoMileage adds f to the "maintain_auto_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainAutoMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainAutoMileage(f)
	return shcu
}

// SetMaintainRemoteMileage sets the "maintain_remote_mileage" field.
func (shcu *StatsHourlyCarUpdate) SetMaintainRemoteMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetMaintainRemoteMileage()
	shcu.mutation.SetMaintainRemoteMileage(f)
	return shcu
}

// SetNillableMaintainRemoteMileage sets the "maintain_remote_mileage" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableMaintainRemoteMileage(f *float32) *StatsHourlyCarUpdate {
	if f != nil {
		shcu.SetMaintainRemoteMileage(*f)
	}
	return shcu
}

// AddMaintainRemoteMileage adds f to the "maintain_remote_mileage" field.
func (shcu *StatsHourlyCarUpdate) AddMaintainRemoteMileage(f float32) *StatsHourlyCarUpdate {
	shcu.mutation.AddMaintainRemoteMileage(f)
	return shcu
}

// SetAlarmTimes sets the "alarm_times" field.
func (shcu *StatsHourlyCarUpdate) SetAlarmTimes(u uint32) *StatsHourlyCarUpdate {
	shcu.mutation.ResetAlarmTimes()
	shcu.mutation.SetAlarmTimes(u)
	return shcu
}

// SetNillableAlarmTimes sets the "alarm_times" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableAlarmTimes(u *uint32) *StatsHourlyCarUpdate {
	if u != nil {
		shcu.SetAlarmTimes(*u)
	}
	return shcu
}

// AddAlarmTimes adds u to the "alarm_times" field.
func (shcu *StatsHourlyCarUpdate) AddAlarmTimes(u int32) *StatsHourlyCarUpdate {
	shcu.mutation.AddAlarmTimes(u)
	return shcu
}

// SetStatsTime sets the "stats_time" field.
func (shcu *StatsHourlyCarUpdate) SetStatsTime(t time.Time) *StatsHourlyCarUpdate {
	shcu.mutation.SetStatsTime(t)
	return shcu
}

// SetNillableStatsTime sets the "stats_time" field if the given value is not nil.
func (shcu *StatsHourlyCarUpdate) SetNillableStatsTime(t *time.Time) *StatsHourlyCarUpdate {
	if t != nil {
		shcu.SetStatsTime(*t)
	}
	return shcu
}

// SetBackgroundScenicAreaID sets the "background_scenic_area" edge to the ScenicArea entity by ID.
func (shcu *StatsHourlyCarUpdate) SetBackgroundScenicAreaID(id int) *StatsHourlyCarUpdate {
	shcu.mutation.SetBackgroundScenicAreaID(id)
	return shcu
}

// SetBackgroundScenicArea sets the "background_scenic_area" edge to the ScenicArea entity.
func (shcu *StatsHourlyCarUpdate) SetBackgroundScenicArea(s *ScenicArea) *StatsHourlyCarUpdate {
	return shcu.SetBackgroundScenicAreaID(s.ID)
}

// SetCar sets the "car" edge to the Car entity.
func (shcu *StatsHourlyCarUpdate) SetCar(c *Car) *StatsHourlyCarUpdate {
	return shcu.SetCarID(c.ID)
}

// Mutation returns the StatsHourlyCarMutation object of the builder.
func (shcu *StatsHourlyCarUpdate) Mutation() *StatsHourlyCarMutation {
	return shcu.mutation
}

// ClearBackgroundScenicArea clears the "background_scenic_area" edge to the ScenicArea entity.
func (shcu *StatsHourlyCarUpdate) ClearBackgroundScenicArea() *StatsHourlyCarUpdate {
	shcu.mutation.ClearBackgroundScenicArea()
	return shcu
}

// ClearCar clears the "car" edge to the Car entity.
func (shcu *StatsHourlyCarUpdate) ClearCar() *StatsHourlyCarUpdate {
	shcu.mutation.ClearCar()
	return shcu
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (shcu *StatsHourlyCarUpdate) Save(ctx context.Context) (int, error) {
	return withHooks(ctx, shcu.sqlSave, shcu.mutation, shcu.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (shcu *StatsHourlyCarUpdate) SaveX(ctx context.Context) int {
	affected, err := shcu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (shcu *StatsHourlyCarUpdate) Exec(ctx context.Context) error {
	_, err := shcu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (shcu *StatsHourlyCarUpdate) ExecX(ctx context.Context) {
	if err := shcu.Exec(ctx); err != nil {
		panic(err)
	}
}

// check runs all checks and user-defined validators on the builder.
func (shcu *StatsHourlyCarUpdate) check() error {
	if shcu.mutation.BackgroundScenicAreaCleared() && len(shcu.mutation.BackgroundScenicAreaIDs()) > 0 {
		return errors.New(`ent: clearing a required unique edge "StatsHourlyCar.background_scenic_area"`)
	}
	if shcu.mutation.CarCleared() && len(shcu.mutation.CarIDs()) > 0 {
		return errors.New(`ent: clearing a required unique edge "StatsHourlyCar.car"`)
	}
	return nil
}

func (shcu *StatsHourlyCarUpdate) sqlSave(ctx context.Context) (n int, err error) {
	if err := shcu.check(); err != nil {
		return n, err
	}
	_spec := sqlgraph.NewUpdateSpec(statshourlycar.Table, statshourlycar.Columns, sqlgraph.NewFieldSpec(statshourlycar.FieldID, field.TypeInt))
	if ps := shcu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := shcu.mutation.Y(); ok {
		_spec.SetField(statshourlycar.FieldY, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedY(); ok {
		_spec.AddField(statshourlycar.FieldY, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.M(); ok {
		_spec.SetField(statshourlycar.FieldM, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedM(); ok {
		_spec.AddField(statshourlycar.FieldM, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.D(); ok {
		_spec.SetField(statshourlycar.FieldD, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedD(); ok {
		_spec.AddField(statshourlycar.FieldD, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.H(); ok {
		_spec.SetField(statshourlycar.FieldH, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedH(); ok {
		_spec.AddField(statshourlycar.FieldH, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.Week(); ok {
		_spec.SetField(statshourlycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedWeek(); ok {
		_spec.AddField(statshourlycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.Weekday(); ok {
		_spec.SetField(statshourlycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedWeekday(); ok {
		_spec.AddField(statshourlycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.Period(); ok {
		_spec.SetField(statshourlycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedPeriod(); ok {
		_spec.AddField(statshourlycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderCountCreate(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderCountCreate(); ok {
		_spec.AddField(statshourlycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderCountFinish(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderCountFinish(); ok {
		_spec.AddField(statshourlycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderCountCancel(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderCountCancel(); ok {
		_spec.AddField(statshourlycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderAmount(); ok {
		_spec.SetField(statshourlycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderAmount(); ok {
		_spec.AddField(statshourlycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderDuration(); ok {
		_spec.SetField(statshourlycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderDuration(); ok {
		_spec.AddField(statshourlycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderMileage(); ok {
		_spec.SetField(statshourlycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderMileage(); ok {
		_spec.AddField(statshourlycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.OrderScore(); ok {
		_spec.SetField(statshourlycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.AddedOrderScore(); ok {
		_spec.AddField(statshourlycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeOperationAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeOperationAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainRemoteDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainRemoteDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainRemoteTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainRemoteTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeMaintainRemoteMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeMaintainRemoteMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.CumulativeAlarmTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedCumulativeAlarmTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.OperationLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedOperationLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.OperationManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedOperationManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.OperationAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedOperationAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.OperationFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedOperationFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.OperationLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedOperationLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.OperationManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedOperationManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.OperationAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedOperationAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.OperationFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedOperationFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.OperationManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedOperationManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.OperationAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedOperationAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainRemoteDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainRemoteDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.MaintainManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.MaintainAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.MaintainRemoteTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainRemoteTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.MaintainFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.MaintainManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.MaintainRemoteMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AddedMaintainRemoteMileage(); ok {
		_spec.AddField(statshourlycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcu.mutation.AlarmTimes(); ok {
		_spec.SetField(statshourlycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.AddedAlarmTimes(); ok {
		_spec.AddField(statshourlycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcu.mutation.StatsTime(); ok {
		_spec.SetField(statshourlycar.FieldStatsTime, field.TypeTime, value)
	}
	if shcu.mutation.BackgroundScenicAreaCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.BackgroundScenicAreaTable,
			Columns: []string{statshourlycar.BackgroundScenicAreaColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(scenicarea.FieldID, field.TypeInt),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := shcu.mutation.BackgroundScenicAreaIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.BackgroundScenicAreaTable,
			Columns: []string{statshourlycar.BackgroundScenicAreaColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(scenicarea.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if shcu.mutation.CarCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.CarTable,
			Columns: []string{statshourlycar.CarColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(car.FieldID, field.TypeInt),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := shcu.mutation.CarIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.CarTable,
			Columns: []string{statshourlycar.CarColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(car.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, shcu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{statshourlycar.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	shcu.mutation.done = true
	return n, nil
}

// StatsHourlyCarUpdateOne is the builder for updating a single StatsHourlyCar entity.
type StatsHourlyCarUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *StatsHourlyCarMutation
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (shcuo *StatsHourlyCarUpdateOne) SetScenicAreaID(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.SetScenicAreaID(i)
	return shcuo
}

// SetNillableScenicAreaID sets the "scenic_area_id" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableScenicAreaID(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetScenicAreaID(*i)
	}
	return shcuo
}

// SetCarID sets the "car_id" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCarID(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.SetCarID(i)
	return shcuo
}

// SetNillableCarID sets the "car_id" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCarID(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetCarID(*i)
	}
	return shcuo
}

// SetY sets the "y" field.
func (shcuo *StatsHourlyCarUpdateOne) SetY(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetY()
	shcuo.mutation.SetY(i)
	return shcuo
}

// SetNillableY sets the "y" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableY(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetY(*i)
	}
	return shcuo
}

// AddY adds i to the "y" field.
func (shcuo *StatsHourlyCarUpdateOne) AddY(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddY(i)
	return shcuo
}

// SetM sets the "m" field.
func (shcuo *StatsHourlyCarUpdateOne) SetM(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetM()
	shcuo.mutation.SetM(i)
	return shcuo
}

// SetNillableM sets the "m" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableM(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetM(*i)
	}
	return shcuo
}

// AddM adds i to the "m" field.
func (shcuo *StatsHourlyCarUpdateOne) AddM(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddM(i)
	return shcuo
}

// SetD sets the "d" field.
func (shcuo *StatsHourlyCarUpdateOne) SetD(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetD()
	shcuo.mutation.SetD(i)
	return shcuo
}

// SetNillableD sets the "d" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableD(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetD(*i)
	}
	return shcuo
}

// AddD adds i to the "d" field.
func (shcuo *StatsHourlyCarUpdateOne) AddD(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddD(i)
	return shcuo
}

// SetH sets the "h" field.
func (shcuo *StatsHourlyCarUpdateOne) SetH(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetH()
	shcuo.mutation.SetH(i)
	return shcuo
}

// SetNillableH sets the "h" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableH(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetH(*i)
	}
	return shcuo
}

// AddH adds i to the "h" field.
func (shcuo *StatsHourlyCarUpdateOne) AddH(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddH(i)
	return shcuo
}

// SetWeek sets the "week" field.
func (shcuo *StatsHourlyCarUpdateOne) SetWeek(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetWeek()
	shcuo.mutation.SetWeek(i)
	return shcuo
}

// SetNillableWeek sets the "week" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableWeek(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetWeek(*i)
	}
	return shcuo
}

// AddWeek adds i to the "week" field.
func (shcuo *StatsHourlyCarUpdateOne) AddWeek(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddWeek(i)
	return shcuo
}

// SetWeekday sets the "weekday" field.
func (shcuo *StatsHourlyCarUpdateOne) SetWeekday(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetWeekday()
	shcuo.mutation.SetWeekday(i)
	return shcuo
}

// SetNillableWeekday sets the "weekday" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableWeekday(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetWeekday(*i)
	}
	return shcuo
}

// AddWeekday adds i to the "weekday" field.
func (shcuo *StatsHourlyCarUpdateOne) AddWeekday(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddWeekday(i)
	return shcuo
}

// SetPeriod sets the "period" field.
func (shcuo *StatsHourlyCarUpdateOne) SetPeriod(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetPeriod()
	shcuo.mutation.SetPeriod(i)
	return shcuo
}

// SetNillablePeriod sets the "period" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillablePeriod(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetPeriod(*i)
	}
	return shcuo
}

// AddPeriod adds i to the "period" field.
func (shcuo *StatsHourlyCarUpdateOne) AddPeriod(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddPeriod(i)
	return shcuo
}

// SetOrderCountCreate sets the "order_count_create" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderCountCreate(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderCountCreate()
	shcuo.mutation.SetOrderCountCreate(i)
	return shcuo
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderCountCreate(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderCountCreate(*i)
	}
	return shcuo
}

// AddOrderCountCreate adds i to the "order_count_create" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderCountCreate(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderCountCreate(i)
	return shcuo
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderCountFinish(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderCountFinish()
	shcuo.mutation.SetOrderCountFinish(i)
	return shcuo
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderCountFinish(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderCountFinish(*i)
	}
	return shcuo
}

// AddOrderCountFinish adds i to the "order_count_finish" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderCountFinish(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderCountFinish(i)
	return shcuo
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderCountCancel(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderCountCancel()
	shcuo.mutation.SetOrderCountCancel(i)
	return shcuo
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderCountCancel(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderCountCancel(*i)
	}
	return shcuo
}

// AddOrderCountCancel adds i to the "order_count_cancel" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderCountCancel(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderCountCancel(i)
	return shcuo
}

// SetOrderAmount sets the "order_amount" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderAmount(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderAmount()
	shcuo.mutation.SetOrderAmount(i)
	return shcuo
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderAmount(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderAmount(*i)
	}
	return shcuo
}

// AddOrderAmount adds i to the "order_amount" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderAmount(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderAmount(i)
	return shcuo
}

// SetOrderDuration sets the "order_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderDuration(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderDuration()
	shcuo.mutation.SetOrderDuration(i)
	return shcuo
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderDuration(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderDuration(*i)
	}
	return shcuo
}

// AddOrderDuration adds i to the "order_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderDuration(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderDuration(i)
	return shcuo
}

// SetOrderMileage sets the "order_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderMileage(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderMileage()
	shcuo.mutation.SetOrderMileage(i)
	return shcuo
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderMileage(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderMileage(*i)
	}
	return shcuo
}

// AddOrderMileage adds i to the "order_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderMileage(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderMileage(i)
	return shcuo
}

// SetOrderScore sets the "order_score" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOrderScore(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOrderScore()
	shcuo.mutation.SetOrderScore(i)
	return shcuo
}

// SetNillableOrderScore sets the "order_score" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOrderScore(i *int) *StatsHourlyCarUpdateOne {
	if i != nil {
		shcuo.SetOrderScore(*i)
	}
	return shcuo
}

// AddOrderScore adds i to the "order_score" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOrderScore(i int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOrderScore(i)
	return shcuo
}

// SetCumulativeOperationLockDuration sets the "cumulative_operation_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationLockDuration()
	shcuo.mutation.SetCumulativeOperationLockDuration(f)
	return shcuo
}

// SetNillableCumulativeOperationLockDuration sets the "cumulative_operation_lock_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationLockDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeOperationLockDuration(*f)
	}
	return shcuo
}

// AddCumulativeOperationLockDuration adds f to the "cumulative_operation_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationLockDuration(f)
	return shcuo
}

// SetCumulativeOperationManualDuration sets the "cumulative_operation_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationManualDuration()
	shcuo.mutation.SetCumulativeOperationManualDuration(f)
	return shcuo
}

// SetNillableCumulativeOperationManualDuration sets the "cumulative_operation_manual_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationManualDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeOperationManualDuration(*f)
	}
	return shcuo
}

// AddCumulativeOperationManualDuration adds f to the "cumulative_operation_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationManualDuration(f)
	return shcuo
}

// SetCumulativeOperationAutoDuration sets the "cumulative_operation_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationAutoDuration()
	shcuo.mutation.SetCumulativeOperationAutoDuration(f)
	return shcuo
}

// SetNillableCumulativeOperationAutoDuration sets the "cumulative_operation_auto_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationAutoDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeOperationAutoDuration(*f)
	}
	return shcuo
}

// AddCumulativeOperationAutoDuration adds f to the "cumulative_operation_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationAutoDuration(f)
	return shcuo
}

// SetCumulativeOperationFaultDuration sets the "cumulative_operation_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationFaultDuration()
	shcuo.mutation.SetCumulativeOperationFaultDuration(f)
	return shcuo
}

// SetNillableCumulativeOperationFaultDuration sets the "cumulative_operation_fault_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationFaultDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeOperationFaultDuration(*f)
	}
	return shcuo
}

// AddCumulativeOperationFaultDuration adds f to the "cumulative_operation_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationFaultDuration(f)
	return shcuo
}

// SetCumulativeOperationLockTimes sets the "cumulative_operation_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationLockTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationLockTimes()
	shcuo.mutation.SetCumulativeOperationLockTimes(u)
	return shcuo
}

// SetNillableCumulativeOperationLockTimes sets the "cumulative_operation_lock_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationLockTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeOperationLockTimes(*u)
	}
	return shcuo
}

// AddCumulativeOperationLockTimes adds u to the "cumulative_operation_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationLockTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationLockTimes(u)
	return shcuo
}

// SetCumulativeOperationManualTimes sets the "cumulative_operation_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationManualTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationManualTimes()
	shcuo.mutation.SetCumulativeOperationManualTimes(u)
	return shcuo
}

// SetNillableCumulativeOperationManualTimes sets the "cumulative_operation_manual_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationManualTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeOperationManualTimes(*u)
	}
	return shcuo
}

// AddCumulativeOperationManualTimes adds u to the "cumulative_operation_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationManualTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationManualTimes(u)
	return shcuo
}

// SetCumulativeOperationAutoTimes sets the "cumulative_operation_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationAutoTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationAutoTimes()
	shcuo.mutation.SetCumulativeOperationAutoTimes(u)
	return shcuo
}

// SetNillableCumulativeOperationAutoTimes sets the "cumulative_operation_auto_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationAutoTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeOperationAutoTimes(*u)
	}
	return shcuo
}

// AddCumulativeOperationAutoTimes adds u to the "cumulative_operation_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationAutoTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationAutoTimes(u)
	return shcuo
}

// SetCumulativeOperationFaultTimes sets the "cumulative_operation_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationFaultTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationFaultTimes()
	shcuo.mutation.SetCumulativeOperationFaultTimes(u)
	return shcuo
}

// SetNillableCumulativeOperationFaultTimes sets the "cumulative_operation_fault_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationFaultTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeOperationFaultTimes(*u)
	}
	return shcuo
}

// AddCumulativeOperationFaultTimes adds u to the "cumulative_operation_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationFaultTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationFaultTimes(u)
	return shcuo
}

// SetCumulativeOperationManualMileage sets the "cumulative_operation_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationManualMileage()
	shcuo.mutation.SetCumulativeOperationManualMileage(f)
	return shcuo
}

// SetNillableCumulativeOperationManualMileage sets the "cumulative_operation_manual_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationManualMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeOperationManualMileage(*f)
	}
	return shcuo
}

// AddCumulativeOperationManualMileage adds f to the "cumulative_operation_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationManualMileage(f)
	return shcuo
}

// SetCumulativeOperationAutoMileage sets the "cumulative_operation_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeOperationAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeOperationAutoMileage()
	shcuo.mutation.SetCumulativeOperationAutoMileage(f)
	return shcuo
}

// SetNillableCumulativeOperationAutoMileage sets the "cumulative_operation_auto_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeOperationAutoMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeOperationAutoMileage(*f)
	}
	return shcuo
}

// AddCumulativeOperationAutoMileage adds f to the "cumulative_operation_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeOperationAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeOperationAutoMileage(f)
	return shcuo
}

// SetCumulativeMaintainLockDuration sets the "cumulative_maintain_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainLockDuration()
	shcuo.mutation.SetCumulativeMaintainLockDuration(f)
	return shcuo
}

// SetNillableCumulativeMaintainLockDuration sets the "cumulative_maintain_lock_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainLockDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainLockDuration(*f)
	}
	return shcuo
}

// AddCumulativeMaintainLockDuration adds f to the "cumulative_maintain_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainLockDuration(f)
	return shcuo
}

// SetCumulativeMaintainManualDuration sets the "cumulative_maintain_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainManualDuration()
	shcuo.mutation.SetCumulativeMaintainManualDuration(f)
	return shcuo
}

// SetNillableCumulativeMaintainManualDuration sets the "cumulative_maintain_manual_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainManualDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainManualDuration(*f)
	}
	return shcuo
}

// AddCumulativeMaintainManualDuration adds f to the "cumulative_maintain_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainManualDuration(f)
	return shcuo
}

// SetCumulativeMaintainAutoDuration sets the "cumulative_maintain_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainAutoDuration()
	shcuo.mutation.SetCumulativeMaintainAutoDuration(f)
	return shcuo
}

// SetNillableCumulativeMaintainAutoDuration sets the "cumulative_maintain_auto_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainAutoDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainAutoDuration(*f)
	}
	return shcuo
}

// AddCumulativeMaintainAutoDuration adds f to the "cumulative_maintain_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainAutoDuration(f)
	return shcuo
}

// SetCumulativeMaintainRemoteDuration sets the "cumulative_maintain_remote_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainRemoteDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainRemoteDuration()
	shcuo.mutation.SetCumulativeMaintainRemoteDuration(f)
	return shcuo
}

// SetNillableCumulativeMaintainRemoteDuration sets the "cumulative_maintain_remote_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainRemoteDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainRemoteDuration(*f)
	}
	return shcuo
}

// AddCumulativeMaintainRemoteDuration adds f to the "cumulative_maintain_remote_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainRemoteDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainRemoteDuration(f)
	return shcuo
}

// SetCumulativeMaintainFaultDuration sets the "cumulative_maintain_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainFaultDuration()
	shcuo.mutation.SetCumulativeMaintainFaultDuration(f)
	return shcuo
}

// SetNillableCumulativeMaintainFaultDuration sets the "cumulative_maintain_fault_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainFaultDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainFaultDuration(*f)
	}
	return shcuo
}

// AddCumulativeMaintainFaultDuration adds f to the "cumulative_maintain_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainFaultDuration(f)
	return shcuo
}

// SetCumulativeMaintainLockTimes sets the "cumulative_maintain_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainLockTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainLockTimes()
	shcuo.mutation.SetCumulativeMaintainLockTimes(u)
	return shcuo
}

// SetNillableCumulativeMaintainLockTimes sets the "cumulative_maintain_lock_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainLockTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeMaintainLockTimes(*u)
	}
	return shcuo
}

// AddCumulativeMaintainLockTimes adds u to the "cumulative_maintain_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainLockTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainLockTimes(u)
	return shcuo
}

// SetCumulativeMaintainManualTimes sets the "cumulative_maintain_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainManualTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainManualTimes()
	shcuo.mutation.SetCumulativeMaintainManualTimes(u)
	return shcuo
}

// SetNillableCumulativeMaintainManualTimes sets the "cumulative_maintain_manual_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainManualTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeMaintainManualTimes(*u)
	}
	return shcuo
}

// AddCumulativeMaintainManualTimes adds u to the "cumulative_maintain_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainManualTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainManualTimes(u)
	return shcuo
}

// SetCumulativeMaintainAutoTimes sets the "cumulative_maintain_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainAutoTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainAutoTimes()
	shcuo.mutation.SetCumulativeMaintainAutoTimes(u)
	return shcuo
}

// SetNillableCumulativeMaintainAutoTimes sets the "cumulative_maintain_auto_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainAutoTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeMaintainAutoTimes(*u)
	}
	return shcuo
}

// AddCumulativeMaintainAutoTimes adds u to the "cumulative_maintain_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainAutoTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainAutoTimes(u)
	return shcuo
}

// SetCumulativeMaintainRemoteTimes sets the "cumulative_maintain_remote_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainRemoteTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainRemoteTimes()
	shcuo.mutation.SetCumulativeMaintainRemoteTimes(u)
	return shcuo
}

// SetNillableCumulativeMaintainRemoteTimes sets the "cumulative_maintain_remote_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainRemoteTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeMaintainRemoteTimes(*u)
	}
	return shcuo
}

// AddCumulativeMaintainRemoteTimes adds u to the "cumulative_maintain_remote_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainRemoteTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainRemoteTimes(u)
	return shcuo
}

// SetCumulativeMaintainFaultTimes sets the "cumulative_maintain_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainFaultTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainFaultTimes()
	shcuo.mutation.SetCumulativeMaintainFaultTimes(u)
	return shcuo
}

// SetNillableCumulativeMaintainFaultTimes sets the "cumulative_maintain_fault_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainFaultTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeMaintainFaultTimes(*u)
	}
	return shcuo
}

// AddCumulativeMaintainFaultTimes adds u to the "cumulative_maintain_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainFaultTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainFaultTimes(u)
	return shcuo
}

// SetCumulativeMaintainManualMileage sets the "cumulative_maintain_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainManualMileage()
	shcuo.mutation.SetCumulativeMaintainManualMileage(f)
	return shcuo
}

// SetNillableCumulativeMaintainManualMileage sets the "cumulative_maintain_manual_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainManualMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainManualMileage(*f)
	}
	return shcuo
}

// AddCumulativeMaintainManualMileage adds f to the "cumulative_maintain_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainManualMileage(f)
	return shcuo
}

// SetCumulativeMaintainAutoMileage sets the "cumulative_maintain_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainAutoMileage()
	shcuo.mutation.SetCumulativeMaintainAutoMileage(f)
	return shcuo
}

// SetNillableCumulativeMaintainAutoMileage sets the "cumulative_maintain_auto_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainAutoMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainAutoMileage(*f)
	}
	return shcuo
}

// AddCumulativeMaintainAutoMileage adds f to the "cumulative_maintain_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainAutoMileage(f)
	return shcuo
}

// SetCumulativeMaintainRemoteMileage sets the "cumulative_maintain_remote_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeMaintainRemoteMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeMaintainRemoteMileage()
	shcuo.mutation.SetCumulativeMaintainRemoteMileage(f)
	return shcuo
}

// SetNillableCumulativeMaintainRemoteMileage sets the "cumulative_maintain_remote_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeMaintainRemoteMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetCumulativeMaintainRemoteMileage(*f)
	}
	return shcuo
}

// AddCumulativeMaintainRemoteMileage adds f to the "cumulative_maintain_remote_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeMaintainRemoteMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeMaintainRemoteMileage(f)
	return shcuo
}

// SetCumulativeAlarmTimes sets the "cumulative_alarm_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetCumulativeAlarmTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetCumulativeAlarmTimes()
	shcuo.mutation.SetCumulativeAlarmTimes(u)
	return shcuo
}

// SetNillableCumulativeAlarmTimes sets the "cumulative_alarm_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableCumulativeAlarmTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetCumulativeAlarmTimes(*u)
	}
	return shcuo
}

// AddCumulativeAlarmTimes adds u to the "cumulative_alarm_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddCumulativeAlarmTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddCumulativeAlarmTimes(u)
	return shcuo
}

// SetOperationLockDuration sets the "operation_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationLockDuration()
	shcuo.mutation.SetOperationLockDuration(f)
	return shcuo
}

// SetNillableOperationLockDuration sets the "operation_lock_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationLockDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetOperationLockDuration(*f)
	}
	return shcuo
}

// AddOperationLockDuration adds f to the "operation_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationLockDuration(f)
	return shcuo
}

// SetOperationManualDuration sets the "operation_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationManualDuration()
	shcuo.mutation.SetOperationManualDuration(f)
	return shcuo
}

// SetNillableOperationManualDuration sets the "operation_manual_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationManualDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetOperationManualDuration(*f)
	}
	return shcuo
}

// AddOperationManualDuration adds f to the "operation_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationManualDuration(f)
	return shcuo
}

// SetOperationAutoDuration sets the "operation_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationAutoDuration()
	shcuo.mutation.SetOperationAutoDuration(f)
	return shcuo
}

// SetNillableOperationAutoDuration sets the "operation_auto_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationAutoDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetOperationAutoDuration(*f)
	}
	return shcuo
}

// AddOperationAutoDuration adds f to the "operation_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationAutoDuration(f)
	return shcuo
}

// SetOperationFaultDuration sets the "operation_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationFaultDuration()
	shcuo.mutation.SetOperationFaultDuration(f)
	return shcuo
}

// SetNillableOperationFaultDuration sets the "operation_fault_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationFaultDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetOperationFaultDuration(*f)
	}
	return shcuo
}

// AddOperationFaultDuration adds f to the "operation_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationFaultDuration(f)
	return shcuo
}

// SetOperationLockTimes sets the "operation_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationLockTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationLockTimes()
	shcuo.mutation.SetOperationLockTimes(u)
	return shcuo
}

// SetNillableOperationLockTimes sets the "operation_lock_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationLockTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetOperationLockTimes(*u)
	}
	return shcuo
}

// AddOperationLockTimes adds u to the "operation_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationLockTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationLockTimes(u)
	return shcuo
}

// SetOperationManualTimes sets the "operation_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationManualTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationManualTimes()
	shcuo.mutation.SetOperationManualTimes(u)
	return shcuo
}

// SetNillableOperationManualTimes sets the "operation_manual_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationManualTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetOperationManualTimes(*u)
	}
	return shcuo
}

// AddOperationManualTimes adds u to the "operation_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationManualTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationManualTimes(u)
	return shcuo
}

// SetOperationAutoTimes sets the "operation_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationAutoTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationAutoTimes()
	shcuo.mutation.SetOperationAutoTimes(u)
	return shcuo
}

// SetNillableOperationAutoTimes sets the "operation_auto_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationAutoTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetOperationAutoTimes(*u)
	}
	return shcuo
}

// AddOperationAutoTimes adds u to the "operation_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationAutoTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationAutoTimes(u)
	return shcuo
}

// SetOperationFaultTimes sets the "operation_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationFaultTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationFaultTimes()
	shcuo.mutation.SetOperationFaultTimes(u)
	return shcuo
}

// SetNillableOperationFaultTimes sets the "operation_fault_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationFaultTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetOperationFaultTimes(*u)
	}
	return shcuo
}

// AddOperationFaultTimes adds u to the "operation_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationFaultTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationFaultTimes(u)
	return shcuo
}

// SetOperationManualMileage sets the "operation_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationManualMileage()
	shcuo.mutation.SetOperationManualMileage(f)
	return shcuo
}

// SetNillableOperationManualMileage sets the "operation_manual_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationManualMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetOperationManualMileage(*f)
	}
	return shcuo
}

// AddOperationManualMileage adds f to the "operation_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationManualMileage(f)
	return shcuo
}

// SetOperationAutoMileage sets the "operation_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetOperationAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetOperationAutoMileage()
	shcuo.mutation.SetOperationAutoMileage(f)
	return shcuo
}

// SetNillableOperationAutoMileage sets the "operation_auto_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableOperationAutoMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetOperationAutoMileage(*f)
	}
	return shcuo
}

// AddOperationAutoMileage adds f to the "operation_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddOperationAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddOperationAutoMileage(f)
	return shcuo
}

// SetMaintainLockDuration sets the "maintain_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainLockDuration()
	shcuo.mutation.SetMaintainLockDuration(f)
	return shcuo
}

// SetNillableMaintainLockDuration sets the "maintain_lock_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainLockDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainLockDuration(*f)
	}
	return shcuo
}

// AddMaintainLockDuration adds f to the "maintain_lock_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainLockDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainLockDuration(f)
	return shcuo
}

// SetMaintainManualDuration sets the "maintain_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainManualDuration()
	shcuo.mutation.SetMaintainManualDuration(f)
	return shcuo
}

// SetNillableMaintainManualDuration sets the "maintain_manual_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainManualDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainManualDuration(*f)
	}
	return shcuo
}

// AddMaintainManualDuration adds f to the "maintain_manual_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainManualDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainManualDuration(f)
	return shcuo
}

// SetMaintainAutoDuration sets the "maintain_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainAutoDuration()
	shcuo.mutation.SetMaintainAutoDuration(f)
	return shcuo
}

// SetNillableMaintainAutoDuration sets the "maintain_auto_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainAutoDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainAutoDuration(*f)
	}
	return shcuo
}

// AddMaintainAutoDuration adds f to the "maintain_auto_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainAutoDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainAutoDuration(f)
	return shcuo
}

// SetMaintainRemoteDuration sets the "maintain_remote_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainRemoteDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainRemoteDuration()
	shcuo.mutation.SetMaintainRemoteDuration(f)
	return shcuo
}

// SetNillableMaintainRemoteDuration sets the "maintain_remote_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainRemoteDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainRemoteDuration(*f)
	}
	return shcuo
}

// AddMaintainRemoteDuration adds f to the "maintain_remote_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainRemoteDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainRemoteDuration(f)
	return shcuo
}

// SetMaintainFaultDuration sets the "maintain_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainFaultDuration()
	shcuo.mutation.SetMaintainFaultDuration(f)
	return shcuo
}

// SetNillableMaintainFaultDuration sets the "maintain_fault_duration" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainFaultDuration(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainFaultDuration(*f)
	}
	return shcuo
}

// AddMaintainFaultDuration adds f to the "maintain_fault_duration" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainFaultDuration(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainFaultDuration(f)
	return shcuo
}

// SetMaintainLockTimes sets the "maintain_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainLockTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainLockTimes()
	shcuo.mutation.SetMaintainLockTimes(u)
	return shcuo
}

// SetNillableMaintainLockTimes sets the "maintain_lock_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainLockTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetMaintainLockTimes(*u)
	}
	return shcuo
}

// AddMaintainLockTimes adds u to the "maintain_lock_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainLockTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainLockTimes(u)
	return shcuo
}

// SetMaintainManualTimes sets the "maintain_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainManualTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainManualTimes()
	shcuo.mutation.SetMaintainManualTimes(u)
	return shcuo
}

// SetNillableMaintainManualTimes sets the "maintain_manual_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainManualTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetMaintainManualTimes(*u)
	}
	return shcuo
}

// AddMaintainManualTimes adds u to the "maintain_manual_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainManualTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainManualTimes(u)
	return shcuo
}

// SetMaintainAutoTimes sets the "maintain_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainAutoTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainAutoTimes()
	shcuo.mutation.SetMaintainAutoTimes(u)
	return shcuo
}

// SetNillableMaintainAutoTimes sets the "maintain_auto_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainAutoTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetMaintainAutoTimes(*u)
	}
	return shcuo
}

// AddMaintainAutoTimes adds u to the "maintain_auto_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainAutoTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainAutoTimes(u)
	return shcuo
}

// SetMaintainRemoteTimes sets the "maintain_remote_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainRemoteTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainRemoteTimes()
	shcuo.mutation.SetMaintainRemoteTimes(u)
	return shcuo
}

// SetNillableMaintainRemoteTimes sets the "maintain_remote_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainRemoteTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetMaintainRemoteTimes(*u)
	}
	return shcuo
}

// AddMaintainRemoteTimes adds u to the "maintain_remote_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainRemoteTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainRemoteTimes(u)
	return shcuo
}

// SetMaintainFaultTimes sets the "maintain_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainFaultTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainFaultTimes()
	shcuo.mutation.SetMaintainFaultTimes(u)
	return shcuo
}

// SetNillableMaintainFaultTimes sets the "maintain_fault_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainFaultTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetMaintainFaultTimes(*u)
	}
	return shcuo
}

// AddMaintainFaultTimes adds u to the "maintain_fault_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainFaultTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainFaultTimes(u)
	return shcuo
}

// SetMaintainManualMileage sets the "maintain_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainManualMileage()
	shcuo.mutation.SetMaintainManualMileage(f)
	return shcuo
}

// SetNillableMaintainManualMileage sets the "maintain_manual_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainManualMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainManualMileage(*f)
	}
	return shcuo
}

// AddMaintainManualMileage adds f to the "maintain_manual_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainManualMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainManualMileage(f)
	return shcuo
}

// SetMaintainAutoMileage sets the "maintain_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainAutoMileage()
	shcuo.mutation.SetMaintainAutoMileage(f)
	return shcuo
}

// SetNillableMaintainAutoMileage sets the "maintain_auto_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainAutoMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainAutoMileage(*f)
	}
	return shcuo
}

// AddMaintainAutoMileage adds f to the "maintain_auto_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainAutoMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainAutoMileage(f)
	return shcuo
}

// SetMaintainRemoteMileage sets the "maintain_remote_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) SetMaintainRemoteMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetMaintainRemoteMileage()
	shcuo.mutation.SetMaintainRemoteMileage(f)
	return shcuo
}

// SetNillableMaintainRemoteMileage sets the "maintain_remote_mileage" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableMaintainRemoteMileage(f *float32) *StatsHourlyCarUpdateOne {
	if f != nil {
		shcuo.SetMaintainRemoteMileage(*f)
	}
	return shcuo
}

// AddMaintainRemoteMileage adds f to the "maintain_remote_mileage" field.
func (shcuo *StatsHourlyCarUpdateOne) AddMaintainRemoteMileage(f float32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddMaintainRemoteMileage(f)
	return shcuo
}

// SetAlarmTimes sets the "alarm_times" field.
func (shcuo *StatsHourlyCarUpdateOne) SetAlarmTimes(u uint32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.ResetAlarmTimes()
	shcuo.mutation.SetAlarmTimes(u)
	return shcuo
}

// SetNillableAlarmTimes sets the "alarm_times" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableAlarmTimes(u *uint32) *StatsHourlyCarUpdateOne {
	if u != nil {
		shcuo.SetAlarmTimes(*u)
	}
	return shcuo
}

// AddAlarmTimes adds u to the "alarm_times" field.
func (shcuo *StatsHourlyCarUpdateOne) AddAlarmTimes(u int32) *StatsHourlyCarUpdateOne {
	shcuo.mutation.AddAlarmTimes(u)
	return shcuo
}

// SetStatsTime sets the "stats_time" field.
func (shcuo *StatsHourlyCarUpdateOne) SetStatsTime(t time.Time) *StatsHourlyCarUpdateOne {
	shcuo.mutation.SetStatsTime(t)
	return shcuo
}

// SetNillableStatsTime sets the "stats_time" field if the given value is not nil.
func (shcuo *StatsHourlyCarUpdateOne) SetNillableStatsTime(t *time.Time) *StatsHourlyCarUpdateOne {
	if t != nil {
		shcuo.SetStatsTime(*t)
	}
	return shcuo
}

// SetBackgroundScenicAreaID sets the "background_scenic_area" edge to the ScenicArea entity by ID.
func (shcuo *StatsHourlyCarUpdateOne) SetBackgroundScenicAreaID(id int) *StatsHourlyCarUpdateOne {
	shcuo.mutation.SetBackgroundScenicAreaID(id)
	return shcuo
}

// SetBackgroundScenicArea sets the "background_scenic_area" edge to the ScenicArea entity.
func (shcuo *StatsHourlyCarUpdateOne) SetBackgroundScenicArea(s *ScenicArea) *StatsHourlyCarUpdateOne {
	return shcuo.SetBackgroundScenicAreaID(s.ID)
}

// SetCar sets the "car" edge to the Car entity.
func (shcuo *StatsHourlyCarUpdateOne) SetCar(c *Car) *StatsHourlyCarUpdateOne {
	return shcuo.SetCarID(c.ID)
}

// Mutation returns the StatsHourlyCarMutation object of the builder.
func (shcuo *StatsHourlyCarUpdateOne) Mutation() *StatsHourlyCarMutation {
	return shcuo.mutation
}

// ClearBackgroundScenicArea clears the "background_scenic_area" edge to the ScenicArea entity.
func (shcuo *StatsHourlyCarUpdateOne) ClearBackgroundScenicArea() *StatsHourlyCarUpdateOne {
	shcuo.mutation.ClearBackgroundScenicArea()
	return shcuo
}

// ClearCar clears the "car" edge to the Car entity.
func (shcuo *StatsHourlyCarUpdateOne) ClearCar() *StatsHourlyCarUpdateOne {
	shcuo.mutation.ClearCar()
	return shcuo
}

// Where appends a list predicates to the StatsHourlyCarUpdate builder.
func (shcuo *StatsHourlyCarUpdateOne) Where(ps ...predicate.StatsHourlyCar) *StatsHourlyCarUpdateOne {
	shcuo.mutation.Where(ps...)
	return shcuo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (shcuo *StatsHourlyCarUpdateOne) Select(field string, fields ...string) *StatsHourlyCarUpdateOne {
	shcuo.fields = append([]string{field}, fields...)
	return shcuo
}

// Save executes the query and returns the updated StatsHourlyCar entity.
func (shcuo *StatsHourlyCarUpdateOne) Save(ctx context.Context) (*StatsHourlyCar, error) {
	return withHooks(ctx, shcuo.sqlSave, shcuo.mutation, shcuo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (shcuo *StatsHourlyCarUpdateOne) SaveX(ctx context.Context) *StatsHourlyCar {
	node, err := shcuo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (shcuo *StatsHourlyCarUpdateOne) Exec(ctx context.Context) error {
	_, err := shcuo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (shcuo *StatsHourlyCarUpdateOne) ExecX(ctx context.Context) {
	if err := shcuo.Exec(ctx); err != nil {
		panic(err)
	}
}

// check runs all checks and user-defined validators on the builder.
func (shcuo *StatsHourlyCarUpdateOne) check() error {
	if shcuo.mutation.BackgroundScenicAreaCleared() && len(shcuo.mutation.BackgroundScenicAreaIDs()) > 0 {
		return errors.New(`ent: clearing a required unique edge "StatsHourlyCar.background_scenic_area"`)
	}
	if shcuo.mutation.CarCleared() && len(shcuo.mutation.CarIDs()) > 0 {
		return errors.New(`ent: clearing a required unique edge "StatsHourlyCar.car"`)
	}
	return nil
}

func (shcuo *StatsHourlyCarUpdateOne) sqlSave(ctx context.Context) (_node *StatsHourlyCar, err error) {
	if err := shcuo.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(statshourlycar.Table, statshourlycar.Columns, sqlgraph.NewFieldSpec(statshourlycar.FieldID, field.TypeInt))
	id, ok := shcuo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "StatsHourlyCar.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := shcuo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, statshourlycar.FieldID)
		for _, f := range fields {
			if !statshourlycar.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != statshourlycar.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := shcuo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := shcuo.mutation.Y(); ok {
		_spec.SetField(statshourlycar.FieldY, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedY(); ok {
		_spec.AddField(statshourlycar.FieldY, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.M(); ok {
		_spec.SetField(statshourlycar.FieldM, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedM(); ok {
		_spec.AddField(statshourlycar.FieldM, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.D(); ok {
		_spec.SetField(statshourlycar.FieldD, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedD(); ok {
		_spec.AddField(statshourlycar.FieldD, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.H(); ok {
		_spec.SetField(statshourlycar.FieldH, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedH(); ok {
		_spec.AddField(statshourlycar.FieldH, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.Week(); ok {
		_spec.SetField(statshourlycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedWeek(); ok {
		_spec.AddField(statshourlycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.Weekday(); ok {
		_spec.SetField(statshourlycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedWeekday(); ok {
		_spec.AddField(statshourlycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.Period(); ok {
		_spec.SetField(statshourlycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedPeriod(); ok {
		_spec.AddField(statshourlycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderCountCreate(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderCountCreate(); ok {
		_spec.AddField(statshourlycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderCountFinish(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderCountFinish(); ok {
		_spec.AddField(statshourlycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderCountCancel(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderCountCancel(); ok {
		_spec.AddField(statshourlycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderAmount(); ok {
		_spec.SetField(statshourlycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderAmount(); ok {
		_spec.AddField(statshourlycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderDuration(); ok {
		_spec.SetField(statshourlycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderDuration(); ok {
		_spec.AddField(statshourlycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderMileage(); ok {
		_spec.SetField(statshourlycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderMileage(); ok {
		_spec.AddField(statshourlycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.OrderScore(); ok {
		_spec.SetField(statshourlycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.AddedOrderScore(); ok {
		_spec.AddField(statshourlycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeOperationAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeOperationAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainRemoteDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainRemoteDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainRemoteTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainRemoteTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeMaintainRemoteMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeMaintainRemoteMileage(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.CumulativeAlarmTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedCumulativeAlarmTimes(); ok {
		_spec.AddField(statshourlycar.FieldCumulativeAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.OperationLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.OperationManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.OperationAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.OperationFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.OperationLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.OperationManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.OperationAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.OperationFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.OperationManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.OperationAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedOperationAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainLockDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainManualDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainAutoDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainRemoteDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainRemoteDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainFaultDuration(); ok {
		_spec.AddField(statshourlycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainLockTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.MaintainManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainManualTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.MaintainAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainAutoTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.MaintainRemoteTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainRemoteTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.MaintainFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainFaultTimes(); ok {
		_spec.AddField(statshourlycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.MaintainManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainManualMileage(); ok {
		_spec.AddField(statshourlycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainAutoMileage(); ok {
		_spec.AddField(statshourlycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.MaintainRemoteMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AddedMaintainRemoteMileage(); ok {
		_spec.AddField(statshourlycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := shcuo.mutation.AlarmTimes(); ok {
		_spec.SetField(statshourlycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.AddedAlarmTimes(); ok {
		_spec.AddField(statshourlycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shcuo.mutation.StatsTime(); ok {
		_spec.SetField(statshourlycar.FieldStatsTime, field.TypeTime, value)
	}
	if shcuo.mutation.BackgroundScenicAreaCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.BackgroundScenicAreaTable,
			Columns: []string{statshourlycar.BackgroundScenicAreaColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(scenicarea.FieldID, field.TypeInt),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := shcuo.mutation.BackgroundScenicAreaIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.BackgroundScenicAreaTable,
			Columns: []string{statshourlycar.BackgroundScenicAreaColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(scenicarea.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	if shcuo.mutation.CarCleared() {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.CarTable,
			Columns: []string{statshourlycar.CarColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(car.FieldID, field.TypeInt),
			},
		}
		_spec.Edges.Clear = append(_spec.Edges.Clear, edge)
	}
	if nodes := shcuo.mutation.CarIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.CarTable,
			Columns: []string{statshourlycar.CarColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(car.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges.Add = append(_spec.Edges.Add, edge)
	}
	_node = &StatsHourlyCar{config: shcuo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, shcuo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{statshourlycar.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	shcuo.mutation.done = true
	return _node, nil
}
