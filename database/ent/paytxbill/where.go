// Code generated by ent, DO NOT EDIT.

package paytxbill

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldID, id))
}

// TxID applies equality check predicate on the "tx_id" field. It's identical to TxIDEQ.
func TxID(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxID, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldOrderID, v))
}

// OrderNo applies equality check predicate on the "order_no" field. It's identical to OrderNoEQ.
func OrderNo(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldOrderNo, v))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaName applies equality check predicate on the "scenic_area_name" field. It's identical to ScenicAreaNameEQ.
func ScenicAreaName(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldScenicAreaName, v))
}

// TxType applies equality check predicate on the "tx_type" field. It's identical to TxTypeEQ.
func TxType(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxType, v))
}

// TxChannel applies equality check predicate on the "tx_channel" field. It's identical to TxChannelEQ.
func TxChannel(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxChannel, v))
}

// TxAccount applies equality check predicate on the "tx_account" field. It's identical to TxAccountEQ.
func TxAccount(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxAccount, v))
}

// TxAccountName applies equality check predicate on the "tx_account_name" field. It's identical to TxAccountNameEQ.
func TxAccountName(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxAccountName, v))
}

// TxAmount applies equality check predicate on the "tx_amount" field. It's identical to TxAmountEQ.
func TxAmount(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxAmount, v))
}

// TxTime applies equality check predicate on the "tx_time" field. It's identical to TxTimeEQ.
func TxTime(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxTime, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldRemark, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldUpdateTime, v))
}

// TxIDEQ applies the EQ predicate on the "tx_id" field.
func TxIDEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxID, v))
}

// TxIDNEQ applies the NEQ predicate on the "tx_id" field.
func TxIDNEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxID, v))
}

// TxIDIn applies the In predicate on the "tx_id" field.
func TxIDIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxID, vs...))
}

// TxIDNotIn applies the NotIn predicate on the "tx_id" field.
func TxIDNotIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxID, vs...))
}

// TxIDGT applies the GT predicate on the "tx_id" field.
func TxIDGT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxID, v))
}

// TxIDGTE applies the GTE predicate on the "tx_id" field.
func TxIDGTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxID, v))
}

// TxIDLT applies the LT predicate on the "tx_id" field.
func TxIDLT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxID, v))
}

// TxIDLTE applies the LTE predicate on the "tx_id" field.
func TxIDLTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxID, v))
}

// TxIDContains applies the Contains predicate on the "tx_id" field.
func TxIDContains(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContains(FieldTxID, v))
}

// TxIDHasPrefix applies the HasPrefix predicate on the "tx_id" field.
func TxIDHasPrefix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasPrefix(FieldTxID, v))
}

// TxIDHasSuffix applies the HasSuffix predicate on the "tx_id" field.
func TxIDHasSuffix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasSuffix(FieldTxID, v))
}

// TxIDEqualFold applies the EqualFold predicate on the "tx_id" field.
func TxIDEqualFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEqualFold(FieldTxID, v))
}

// TxIDContainsFold applies the ContainsFold predicate on the "tx_id" field.
func TxIDContainsFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContainsFold(FieldTxID, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldOrderID, v))
}

// OrderNoEQ applies the EQ predicate on the "order_no" field.
func OrderNoEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldOrderNo, v))
}

// OrderNoNEQ applies the NEQ predicate on the "order_no" field.
func OrderNoNEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldOrderNo, v))
}

// OrderNoIn applies the In predicate on the "order_no" field.
func OrderNoIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldOrderNo, vs...))
}

// OrderNoNotIn applies the NotIn predicate on the "order_no" field.
func OrderNoNotIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldOrderNo, vs...))
}

// OrderNoGT applies the GT predicate on the "order_no" field.
func OrderNoGT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldOrderNo, v))
}

// OrderNoGTE applies the GTE predicate on the "order_no" field.
func OrderNoGTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldOrderNo, v))
}

// OrderNoLT applies the LT predicate on the "order_no" field.
func OrderNoLT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldOrderNo, v))
}

// OrderNoLTE applies the LTE predicate on the "order_no" field.
func OrderNoLTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldOrderNo, v))
}

// OrderNoContains applies the Contains predicate on the "order_no" field.
func OrderNoContains(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContains(FieldOrderNo, v))
}

// OrderNoHasPrefix applies the HasPrefix predicate on the "order_no" field.
func OrderNoHasPrefix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasPrefix(FieldOrderNo, v))
}

// OrderNoHasSuffix applies the HasSuffix predicate on the "order_no" field.
func OrderNoHasSuffix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasSuffix(FieldOrderNo, v))
}

// OrderNoEqualFold applies the EqualFold predicate on the "order_no" field.
func OrderNoEqualFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEqualFold(FieldOrderNo, v))
}

// OrderNoContainsFold applies the ContainsFold predicate on the "order_no" field.
func OrderNoContainsFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContainsFold(FieldOrderNo, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaNameEQ applies the EQ predicate on the "scenic_area_name" field.
func ScenicAreaNameEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldScenicAreaName, v))
}

// ScenicAreaNameNEQ applies the NEQ predicate on the "scenic_area_name" field.
func ScenicAreaNameNEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldScenicAreaName, v))
}

// ScenicAreaNameIn applies the In predicate on the "scenic_area_name" field.
func ScenicAreaNameIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldScenicAreaName, vs...))
}

// ScenicAreaNameNotIn applies the NotIn predicate on the "scenic_area_name" field.
func ScenicAreaNameNotIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldScenicAreaName, vs...))
}

// ScenicAreaNameGT applies the GT predicate on the "scenic_area_name" field.
func ScenicAreaNameGT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldScenicAreaName, v))
}

// ScenicAreaNameGTE applies the GTE predicate on the "scenic_area_name" field.
func ScenicAreaNameGTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldScenicAreaName, v))
}

// ScenicAreaNameLT applies the LT predicate on the "scenic_area_name" field.
func ScenicAreaNameLT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldScenicAreaName, v))
}

// ScenicAreaNameLTE applies the LTE predicate on the "scenic_area_name" field.
func ScenicAreaNameLTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldScenicAreaName, v))
}

// ScenicAreaNameContains applies the Contains predicate on the "scenic_area_name" field.
func ScenicAreaNameContains(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContains(FieldScenicAreaName, v))
}

// ScenicAreaNameHasPrefix applies the HasPrefix predicate on the "scenic_area_name" field.
func ScenicAreaNameHasPrefix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasPrefix(FieldScenicAreaName, v))
}

// ScenicAreaNameHasSuffix applies the HasSuffix predicate on the "scenic_area_name" field.
func ScenicAreaNameHasSuffix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasSuffix(FieldScenicAreaName, v))
}

// ScenicAreaNameEqualFold applies the EqualFold predicate on the "scenic_area_name" field.
func ScenicAreaNameEqualFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEqualFold(FieldScenicAreaName, v))
}

// ScenicAreaNameContainsFold applies the ContainsFold predicate on the "scenic_area_name" field.
func ScenicAreaNameContainsFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContainsFold(FieldScenicAreaName, v))
}

// TxTypeEQ applies the EQ predicate on the "tx_type" field.
func TxTypeEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxType, v))
}

// TxTypeNEQ applies the NEQ predicate on the "tx_type" field.
func TxTypeNEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxType, v))
}

// TxTypeIn applies the In predicate on the "tx_type" field.
func TxTypeIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxType, vs...))
}

// TxTypeNotIn applies the NotIn predicate on the "tx_type" field.
func TxTypeNotIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxType, vs...))
}

// TxTypeGT applies the GT predicate on the "tx_type" field.
func TxTypeGT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxType, v))
}

// TxTypeGTE applies the GTE predicate on the "tx_type" field.
func TxTypeGTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxType, v))
}

// TxTypeLT applies the LT predicate on the "tx_type" field.
func TxTypeLT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxType, v))
}

// TxTypeLTE applies the LTE predicate on the "tx_type" field.
func TxTypeLTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxType, v))
}

// TxChannelEQ applies the EQ predicate on the "tx_channel" field.
func TxChannelEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxChannel, v))
}

// TxChannelNEQ applies the NEQ predicate on the "tx_channel" field.
func TxChannelNEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxChannel, v))
}

// TxChannelIn applies the In predicate on the "tx_channel" field.
func TxChannelIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxChannel, vs...))
}

// TxChannelNotIn applies the NotIn predicate on the "tx_channel" field.
func TxChannelNotIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxChannel, vs...))
}

// TxChannelGT applies the GT predicate on the "tx_channel" field.
func TxChannelGT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxChannel, v))
}

// TxChannelGTE applies the GTE predicate on the "tx_channel" field.
func TxChannelGTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxChannel, v))
}

// TxChannelLT applies the LT predicate on the "tx_channel" field.
func TxChannelLT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxChannel, v))
}

// TxChannelLTE applies the LTE predicate on the "tx_channel" field.
func TxChannelLTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxChannel, v))
}

// TxAccountEQ applies the EQ predicate on the "tx_account" field.
func TxAccountEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxAccount, v))
}

// TxAccountNEQ applies the NEQ predicate on the "tx_account" field.
func TxAccountNEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxAccount, v))
}

// TxAccountIn applies the In predicate on the "tx_account" field.
func TxAccountIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxAccount, vs...))
}

// TxAccountNotIn applies the NotIn predicate on the "tx_account" field.
func TxAccountNotIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxAccount, vs...))
}

// TxAccountGT applies the GT predicate on the "tx_account" field.
func TxAccountGT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxAccount, v))
}

// TxAccountGTE applies the GTE predicate on the "tx_account" field.
func TxAccountGTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxAccount, v))
}

// TxAccountLT applies the LT predicate on the "tx_account" field.
func TxAccountLT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxAccount, v))
}

// TxAccountLTE applies the LTE predicate on the "tx_account" field.
func TxAccountLTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxAccount, v))
}

// TxAccountContains applies the Contains predicate on the "tx_account" field.
func TxAccountContains(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContains(FieldTxAccount, v))
}

// TxAccountHasPrefix applies the HasPrefix predicate on the "tx_account" field.
func TxAccountHasPrefix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasPrefix(FieldTxAccount, v))
}

// TxAccountHasSuffix applies the HasSuffix predicate on the "tx_account" field.
func TxAccountHasSuffix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasSuffix(FieldTxAccount, v))
}

// TxAccountEqualFold applies the EqualFold predicate on the "tx_account" field.
func TxAccountEqualFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEqualFold(FieldTxAccount, v))
}

// TxAccountContainsFold applies the ContainsFold predicate on the "tx_account" field.
func TxAccountContainsFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContainsFold(FieldTxAccount, v))
}

// TxAccountNameEQ applies the EQ predicate on the "tx_account_name" field.
func TxAccountNameEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxAccountName, v))
}

// TxAccountNameNEQ applies the NEQ predicate on the "tx_account_name" field.
func TxAccountNameNEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxAccountName, v))
}

// TxAccountNameIn applies the In predicate on the "tx_account_name" field.
func TxAccountNameIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxAccountName, vs...))
}

// TxAccountNameNotIn applies the NotIn predicate on the "tx_account_name" field.
func TxAccountNameNotIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxAccountName, vs...))
}

// TxAccountNameGT applies the GT predicate on the "tx_account_name" field.
func TxAccountNameGT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxAccountName, v))
}

// TxAccountNameGTE applies the GTE predicate on the "tx_account_name" field.
func TxAccountNameGTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxAccountName, v))
}

// TxAccountNameLT applies the LT predicate on the "tx_account_name" field.
func TxAccountNameLT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxAccountName, v))
}

// TxAccountNameLTE applies the LTE predicate on the "tx_account_name" field.
func TxAccountNameLTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxAccountName, v))
}

// TxAccountNameContains applies the Contains predicate on the "tx_account_name" field.
func TxAccountNameContains(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContains(FieldTxAccountName, v))
}

// TxAccountNameHasPrefix applies the HasPrefix predicate on the "tx_account_name" field.
func TxAccountNameHasPrefix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasPrefix(FieldTxAccountName, v))
}

// TxAccountNameHasSuffix applies the HasSuffix predicate on the "tx_account_name" field.
func TxAccountNameHasSuffix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasSuffix(FieldTxAccountName, v))
}

// TxAccountNameEqualFold applies the EqualFold predicate on the "tx_account_name" field.
func TxAccountNameEqualFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEqualFold(FieldTxAccountName, v))
}

// TxAccountNameContainsFold applies the ContainsFold predicate on the "tx_account_name" field.
func TxAccountNameContainsFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContainsFold(FieldTxAccountName, v))
}

// TxAmountEQ applies the EQ predicate on the "tx_amount" field.
func TxAmountEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxAmount, v))
}

// TxAmountNEQ applies the NEQ predicate on the "tx_amount" field.
func TxAmountNEQ(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxAmount, v))
}

// TxAmountIn applies the In predicate on the "tx_amount" field.
func TxAmountIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxAmount, vs...))
}

// TxAmountNotIn applies the NotIn predicate on the "tx_amount" field.
func TxAmountNotIn(vs ...int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxAmount, vs...))
}

// TxAmountGT applies the GT predicate on the "tx_amount" field.
func TxAmountGT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxAmount, v))
}

// TxAmountGTE applies the GTE predicate on the "tx_amount" field.
func TxAmountGTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxAmount, v))
}

// TxAmountLT applies the LT predicate on the "tx_amount" field.
func TxAmountLT(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxAmount, v))
}

// TxAmountLTE applies the LTE predicate on the "tx_amount" field.
func TxAmountLTE(v int) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxAmount, v))
}

// TxTimeEQ applies the EQ predicate on the "tx_time" field.
func TxTimeEQ(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldTxTime, v))
}

// TxTimeNEQ applies the NEQ predicate on the "tx_time" field.
func TxTimeNEQ(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldTxTime, v))
}

// TxTimeIn applies the In predicate on the "tx_time" field.
func TxTimeIn(vs ...time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldTxTime, vs...))
}

// TxTimeNotIn applies the NotIn predicate on the "tx_time" field.
func TxTimeNotIn(vs ...time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldTxTime, vs...))
}

// TxTimeGT applies the GT predicate on the "tx_time" field.
func TxTimeGT(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldTxTime, v))
}

// TxTimeGTE applies the GTE predicate on the "tx_time" field.
func TxTimeGTE(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldTxTime, v))
}

// TxTimeLT applies the LT predicate on the "tx_time" field.
func TxTimeLT(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldTxTime, v))
}

// TxTimeLTE applies the LTE predicate on the "tx_time" field.
func TxTimeLTE(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldTxTime, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldContainsFold(FieldRemark, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.PayTxBill {
	return predicate.PayTxBill(sql.FieldLTE(FieldUpdateTime, v))
}

// HasBackgroundScenicArea applies the HasEdge predicate on the "background_scenic_area" edge.
func HasBackgroundScenicArea() predicate.PayTxBill {
	return predicate.PayTxBill(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, BackgroundScenicAreaTable, BackgroundScenicAreaColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBackgroundScenicAreaWith applies the HasEdge predicate on the "background_scenic_area" edge with a given conditions (other predicates).
func HasBackgroundScenicAreaWith(preds ...predicate.ScenicArea) predicate.PayTxBill {
	return predicate.PayTxBill(func(s *sql.Selector) {
		step := newBackgroundScenicAreaStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PayTxBill) predicate.PayTxBill {
	return predicate.PayTxBill(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PayTxBill) predicate.PayTxBill {
	return predicate.PayTxBill(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PayTxBill) predicate.PayTxBill {
	return predicate.PayTxBill(sql.NotPredicates(p))
}
