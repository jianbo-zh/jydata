// Code generated by ent, DO NOT EDIT.

package carconfigdownload

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldID, id))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldUUID, v))
}

// CarID applies equality check predicate on the "car_id" field. It's identical to CarIDEQ.
func CarID(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldCarID, v))
}

// DeviceID applies equality check predicate on the "device_id" field. It's identical to DeviceIDEQ.
func DeviceID(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldDeviceID, v))
}

// DownloadState applies equality check predicate on the "download_state" field. It's identical to DownloadStateEQ.
func DownloadState(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldDownloadState, v))
}

// DownloadProcess applies equality check predicate on the "download_process" field. It's identical to DownloadProcessEQ.
func DownloadProcess(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldDownloadProcess, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldRemark, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldUpdateTime, v))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v int64) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldUUID, v))
}

// CarIDEQ applies the EQ predicate on the "car_id" field.
func CarIDEQ(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldCarID, v))
}

// CarIDNEQ applies the NEQ predicate on the "car_id" field.
func CarIDNEQ(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldCarID, v))
}

// CarIDIn applies the In predicate on the "car_id" field.
func CarIDIn(vs ...int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldCarID, vs...))
}

// CarIDNotIn applies the NotIn predicate on the "car_id" field.
func CarIDNotIn(vs ...int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldCarID, vs...))
}

// CarIDGT applies the GT predicate on the "car_id" field.
func CarIDGT(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldCarID, v))
}

// CarIDGTE applies the GTE predicate on the "car_id" field.
func CarIDGTE(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldCarID, v))
}

// CarIDLT applies the LT predicate on the "car_id" field.
func CarIDLT(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldCarID, v))
}

// CarIDLTE applies the LTE predicate on the "car_id" field.
func CarIDLTE(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldCarID, v))
}

// DeviceIDEQ applies the EQ predicate on the "device_id" field.
func DeviceIDEQ(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldDeviceID, v))
}

// DeviceIDNEQ applies the NEQ predicate on the "device_id" field.
func DeviceIDNEQ(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldDeviceID, v))
}

// DeviceIDIn applies the In predicate on the "device_id" field.
func DeviceIDIn(vs ...string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldDeviceID, vs...))
}

// DeviceIDNotIn applies the NotIn predicate on the "device_id" field.
func DeviceIDNotIn(vs ...string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldDeviceID, vs...))
}

// DeviceIDGT applies the GT predicate on the "device_id" field.
func DeviceIDGT(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldDeviceID, v))
}

// DeviceIDGTE applies the GTE predicate on the "device_id" field.
func DeviceIDGTE(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldDeviceID, v))
}

// DeviceIDLT applies the LT predicate on the "device_id" field.
func DeviceIDLT(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldDeviceID, v))
}

// DeviceIDLTE applies the LTE predicate on the "device_id" field.
func DeviceIDLTE(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldDeviceID, v))
}

// DeviceIDContains applies the Contains predicate on the "device_id" field.
func DeviceIDContains(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldContains(FieldDeviceID, v))
}

// DeviceIDHasPrefix applies the HasPrefix predicate on the "device_id" field.
func DeviceIDHasPrefix(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldHasPrefix(FieldDeviceID, v))
}

// DeviceIDHasSuffix applies the HasSuffix predicate on the "device_id" field.
func DeviceIDHasSuffix(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldHasSuffix(FieldDeviceID, v))
}

// DeviceIDEqualFold applies the EqualFold predicate on the "device_id" field.
func DeviceIDEqualFold(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEqualFold(FieldDeviceID, v))
}

// DeviceIDContainsFold applies the ContainsFold predicate on the "device_id" field.
func DeviceIDContainsFold(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldContainsFold(FieldDeviceID, v))
}

// DownloadStateEQ applies the EQ predicate on the "download_state" field.
func DownloadStateEQ(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldDownloadState, v))
}

// DownloadStateNEQ applies the NEQ predicate on the "download_state" field.
func DownloadStateNEQ(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldDownloadState, v))
}

// DownloadStateIn applies the In predicate on the "download_state" field.
func DownloadStateIn(vs ...string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldDownloadState, vs...))
}

// DownloadStateNotIn applies the NotIn predicate on the "download_state" field.
func DownloadStateNotIn(vs ...string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldDownloadState, vs...))
}

// DownloadStateGT applies the GT predicate on the "download_state" field.
func DownloadStateGT(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldDownloadState, v))
}

// DownloadStateGTE applies the GTE predicate on the "download_state" field.
func DownloadStateGTE(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldDownloadState, v))
}

// DownloadStateLT applies the LT predicate on the "download_state" field.
func DownloadStateLT(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldDownloadState, v))
}

// DownloadStateLTE applies the LTE predicate on the "download_state" field.
func DownloadStateLTE(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldDownloadState, v))
}

// DownloadStateContains applies the Contains predicate on the "download_state" field.
func DownloadStateContains(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldContains(FieldDownloadState, v))
}

// DownloadStateHasPrefix applies the HasPrefix predicate on the "download_state" field.
func DownloadStateHasPrefix(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldHasPrefix(FieldDownloadState, v))
}

// DownloadStateHasSuffix applies the HasSuffix predicate on the "download_state" field.
func DownloadStateHasSuffix(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldHasSuffix(FieldDownloadState, v))
}

// DownloadStateEqualFold applies the EqualFold predicate on the "download_state" field.
func DownloadStateEqualFold(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEqualFold(FieldDownloadState, v))
}

// DownloadStateContainsFold applies the ContainsFold predicate on the "download_state" field.
func DownloadStateContainsFold(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldContainsFold(FieldDownloadState, v))
}

// DownloadProcessEQ applies the EQ predicate on the "download_process" field.
func DownloadProcessEQ(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldDownloadProcess, v))
}

// DownloadProcessNEQ applies the NEQ predicate on the "download_process" field.
func DownloadProcessNEQ(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldDownloadProcess, v))
}

// DownloadProcessIn applies the In predicate on the "download_process" field.
func DownloadProcessIn(vs ...int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldDownloadProcess, vs...))
}

// DownloadProcessNotIn applies the NotIn predicate on the "download_process" field.
func DownloadProcessNotIn(vs ...int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldDownloadProcess, vs...))
}

// DownloadProcessGT applies the GT predicate on the "download_process" field.
func DownloadProcessGT(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldDownloadProcess, v))
}

// DownloadProcessGTE applies the GTE predicate on the "download_process" field.
func DownloadProcessGTE(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldDownloadProcess, v))
}

// DownloadProcessLT applies the LT predicate on the "download_process" field.
func DownloadProcessLT(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldDownloadProcess, v))
}

// DownloadProcessLTE applies the LTE predicate on the "download_process" field.
func DownloadProcessLTE(v int) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldDownloadProcess, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldContainsFold(FieldRemark, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CarConfigDownload) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CarConfigDownload) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CarConfigDownload) predicate.CarConfigDownload {
	return predicate.CarConfigDownload(sql.NotPredicates(p))
}
