// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"github.com/jianbo-zh/jydata/database/ent/statsdailycar"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// StatsDailyCarUpdate is the builder for updating StatsDailyCar entities.
type StatsDailyCarUpdate struct {
	config
	hooks    []Hook
	mutation *StatsDailyCarMutation
}

// Where appends a list predicates to the StatsDailyCarUpdate builder.
func (sdcu *StatsDailyCarUpdate) Where(ps ...predicate.StatsDailyCar) *StatsDailyCarUpdate {
	sdcu.mutation.Where(ps...)
	return sdcu
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (sdcu *StatsDailyCarUpdate) SetScenicAreaID(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetScenicAreaID()
	sdcu.mutation.SetScenicAreaID(i)
	return sdcu
}

// SetNillableScenicAreaID sets the "scenic_area_id" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableScenicAreaID(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetScenicAreaID(*i)
	}
	return sdcu
}

// AddScenicAreaID adds i to the "scenic_area_id" field.
func (sdcu *StatsDailyCarUpdate) AddScenicAreaID(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddScenicAreaID(i)
	return sdcu
}

// SetCarID sets the "car_id" field.
func (sdcu *StatsDailyCarUpdate) SetCarID(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetCarID()
	sdcu.mutation.SetCarID(i)
	return sdcu
}

// SetNillableCarID sets the "car_id" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableCarID(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetCarID(*i)
	}
	return sdcu
}

// AddCarID adds i to the "car_id" field.
func (sdcu *StatsDailyCarUpdate) AddCarID(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddCarID(i)
	return sdcu
}

// SetY sets the "y" field.
func (sdcu *StatsDailyCarUpdate) SetY(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetY()
	sdcu.mutation.SetY(i)
	return sdcu
}

// SetNillableY sets the "y" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableY(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetY(*i)
	}
	return sdcu
}

// AddY adds i to the "y" field.
func (sdcu *StatsDailyCarUpdate) AddY(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddY(i)
	return sdcu
}

// SetM sets the "m" field.
func (sdcu *StatsDailyCarUpdate) SetM(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetM()
	sdcu.mutation.SetM(i)
	return sdcu
}

// SetNillableM sets the "m" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableM(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetM(*i)
	}
	return sdcu
}

// AddM adds i to the "m" field.
func (sdcu *StatsDailyCarUpdate) AddM(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddM(i)
	return sdcu
}

// SetD sets the "d" field.
func (sdcu *StatsDailyCarUpdate) SetD(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetD()
	sdcu.mutation.SetD(i)
	return sdcu
}

// SetNillableD sets the "d" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableD(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetD(*i)
	}
	return sdcu
}

// AddD adds i to the "d" field.
func (sdcu *StatsDailyCarUpdate) AddD(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddD(i)
	return sdcu
}

// SetWeek sets the "week" field.
func (sdcu *StatsDailyCarUpdate) SetWeek(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetWeek()
	sdcu.mutation.SetWeek(i)
	return sdcu
}

// SetNillableWeek sets the "week" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableWeek(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetWeek(*i)
	}
	return sdcu
}

// AddWeek adds i to the "week" field.
func (sdcu *StatsDailyCarUpdate) AddWeek(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddWeek(i)
	return sdcu
}

// SetWeekday sets the "weekday" field.
func (sdcu *StatsDailyCarUpdate) SetWeekday(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetWeekday()
	sdcu.mutation.SetWeekday(i)
	return sdcu
}

// SetNillableWeekday sets the "weekday" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableWeekday(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetWeekday(*i)
	}
	return sdcu
}

// AddWeekday adds i to the "weekday" field.
func (sdcu *StatsDailyCarUpdate) AddWeekday(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddWeekday(i)
	return sdcu
}

// SetPeriod sets the "period" field.
func (sdcu *StatsDailyCarUpdate) SetPeriod(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetPeriod()
	sdcu.mutation.SetPeriod(i)
	return sdcu
}

// SetNillablePeriod sets the "period" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillablePeriod(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetPeriod(*i)
	}
	return sdcu
}

// AddPeriod adds i to the "period" field.
func (sdcu *StatsDailyCarUpdate) AddPeriod(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddPeriod(i)
	return sdcu
}

// SetOrderCountCreate sets the "order_count_create" field.
func (sdcu *StatsDailyCarUpdate) SetOrderCountCreate(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderCountCreate()
	sdcu.mutation.SetOrderCountCreate(i)
	return sdcu
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderCountCreate(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderCountCreate(*i)
	}
	return sdcu
}

// AddOrderCountCreate adds i to the "order_count_create" field.
func (sdcu *StatsDailyCarUpdate) AddOrderCountCreate(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderCountCreate(i)
	return sdcu
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (sdcu *StatsDailyCarUpdate) SetOrderCountFinish(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderCountFinish()
	sdcu.mutation.SetOrderCountFinish(i)
	return sdcu
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderCountFinish(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderCountFinish(*i)
	}
	return sdcu
}

// AddOrderCountFinish adds i to the "order_count_finish" field.
func (sdcu *StatsDailyCarUpdate) AddOrderCountFinish(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderCountFinish(i)
	return sdcu
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (sdcu *StatsDailyCarUpdate) SetOrderCountCancel(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderCountCancel()
	sdcu.mutation.SetOrderCountCancel(i)
	return sdcu
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderCountCancel(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderCountCancel(*i)
	}
	return sdcu
}

// AddOrderCountCancel adds i to the "order_count_cancel" field.
func (sdcu *StatsDailyCarUpdate) AddOrderCountCancel(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderCountCancel(i)
	return sdcu
}

// SetOrderAmount sets the "order_amount" field.
func (sdcu *StatsDailyCarUpdate) SetOrderAmount(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderAmount()
	sdcu.mutation.SetOrderAmount(i)
	return sdcu
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderAmount(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderAmount(*i)
	}
	return sdcu
}

// AddOrderAmount adds i to the "order_amount" field.
func (sdcu *StatsDailyCarUpdate) AddOrderAmount(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderAmount(i)
	return sdcu
}

// SetOrderDuration sets the "order_duration" field.
func (sdcu *StatsDailyCarUpdate) SetOrderDuration(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderDuration()
	sdcu.mutation.SetOrderDuration(i)
	return sdcu
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderDuration(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderDuration(*i)
	}
	return sdcu
}

// AddOrderDuration adds i to the "order_duration" field.
func (sdcu *StatsDailyCarUpdate) AddOrderDuration(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderDuration(i)
	return sdcu
}

// SetOrderMileage sets the "order_mileage" field.
func (sdcu *StatsDailyCarUpdate) SetOrderMileage(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderMileage()
	sdcu.mutation.SetOrderMileage(i)
	return sdcu
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderMileage(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderMileage(*i)
	}
	return sdcu
}

// AddOrderMileage adds i to the "order_mileage" field.
func (sdcu *StatsDailyCarUpdate) AddOrderMileage(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderMileage(i)
	return sdcu
}

// SetOrderScore sets the "order_score" field.
func (sdcu *StatsDailyCarUpdate) SetOrderScore(i int) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOrderScore()
	sdcu.mutation.SetOrderScore(i)
	return sdcu
}

// SetNillableOrderScore sets the "order_score" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOrderScore(i *int) *StatsDailyCarUpdate {
	if i != nil {
		sdcu.SetOrderScore(*i)
	}
	return sdcu
}

// AddOrderScore adds i to the "order_score" field.
func (sdcu *StatsDailyCarUpdate) AddOrderScore(i int) *StatsDailyCarUpdate {
	sdcu.mutation.AddOrderScore(i)
	return sdcu
}

// SetOperationLockDuration sets the "operation_lock_duration" field.
func (sdcu *StatsDailyCarUpdate) SetOperationLockDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationLockDuration()
	sdcu.mutation.SetOperationLockDuration(f)
	return sdcu
}

// SetNillableOperationLockDuration sets the "operation_lock_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationLockDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetOperationLockDuration(*f)
	}
	return sdcu
}

// AddOperationLockDuration adds f to the "operation_lock_duration" field.
func (sdcu *StatsDailyCarUpdate) AddOperationLockDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationLockDuration(f)
	return sdcu
}

// SetOperationManualDuration sets the "operation_manual_duration" field.
func (sdcu *StatsDailyCarUpdate) SetOperationManualDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationManualDuration()
	sdcu.mutation.SetOperationManualDuration(f)
	return sdcu
}

// SetNillableOperationManualDuration sets the "operation_manual_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationManualDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetOperationManualDuration(*f)
	}
	return sdcu
}

// AddOperationManualDuration adds f to the "operation_manual_duration" field.
func (sdcu *StatsDailyCarUpdate) AddOperationManualDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationManualDuration(f)
	return sdcu
}

// SetOperationAutoDuration sets the "operation_auto_duration" field.
func (sdcu *StatsDailyCarUpdate) SetOperationAutoDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationAutoDuration()
	sdcu.mutation.SetOperationAutoDuration(f)
	return sdcu
}

// SetNillableOperationAutoDuration sets the "operation_auto_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationAutoDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetOperationAutoDuration(*f)
	}
	return sdcu
}

// AddOperationAutoDuration adds f to the "operation_auto_duration" field.
func (sdcu *StatsDailyCarUpdate) AddOperationAutoDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationAutoDuration(f)
	return sdcu
}

// SetOperationFaultDuration sets the "operation_fault_duration" field.
func (sdcu *StatsDailyCarUpdate) SetOperationFaultDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationFaultDuration()
	sdcu.mutation.SetOperationFaultDuration(f)
	return sdcu
}

// SetNillableOperationFaultDuration sets the "operation_fault_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationFaultDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetOperationFaultDuration(*f)
	}
	return sdcu
}

// AddOperationFaultDuration adds f to the "operation_fault_duration" field.
func (sdcu *StatsDailyCarUpdate) AddOperationFaultDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationFaultDuration(f)
	return sdcu
}

// SetOperationLockTimes sets the "operation_lock_times" field.
func (sdcu *StatsDailyCarUpdate) SetOperationLockTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationLockTimes()
	sdcu.mutation.SetOperationLockTimes(u)
	return sdcu
}

// SetNillableOperationLockTimes sets the "operation_lock_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationLockTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetOperationLockTimes(*u)
	}
	return sdcu
}

// AddOperationLockTimes adds u to the "operation_lock_times" field.
func (sdcu *StatsDailyCarUpdate) AddOperationLockTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationLockTimes(u)
	return sdcu
}

// SetOperationManualTimes sets the "operation_manual_times" field.
func (sdcu *StatsDailyCarUpdate) SetOperationManualTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationManualTimes()
	sdcu.mutation.SetOperationManualTimes(u)
	return sdcu
}

// SetNillableOperationManualTimes sets the "operation_manual_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationManualTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetOperationManualTimes(*u)
	}
	return sdcu
}

// AddOperationManualTimes adds u to the "operation_manual_times" field.
func (sdcu *StatsDailyCarUpdate) AddOperationManualTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationManualTimes(u)
	return sdcu
}

// SetOperationAutoTimes sets the "operation_auto_times" field.
func (sdcu *StatsDailyCarUpdate) SetOperationAutoTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationAutoTimes()
	sdcu.mutation.SetOperationAutoTimes(u)
	return sdcu
}

// SetNillableOperationAutoTimes sets the "operation_auto_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationAutoTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetOperationAutoTimes(*u)
	}
	return sdcu
}

// AddOperationAutoTimes adds u to the "operation_auto_times" field.
func (sdcu *StatsDailyCarUpdate) AddOperationAutoTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationAutoTimes(u)
	return sdcu
}

// SetOperationFaultTimes sets the "operation_fault_times" field.
func (sdcu *StatsDailyCarUpdate) SetOperationFaultTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationFaultTimes()
	sdcu.mutation.SetOperationFaultTimes(u)
	return sdcu
}

// SetNillableOperationFaultTimes sets the "operation_fault_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationFaultTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetOperationFaultTimes(*u)
	}
	return sdcu
}

// AddOperationFaultTimes adds u to the "operation_fault_times" field.
func (sdcu *StatsDailyCarUpdate) AddOperationFaultTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationFaultTimes(u)
	return sdcu
}

// SetOperationManualMileage sets the "operation_manual_mileage" field.
func (sdcu *StatsDailyCarUpdate) SetOperationManualMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationManualMileage()
	sdcu.mutation.SetOperationManualMileage(f)
	return sdcu
}

// SetNillableOperationManualMileage sets the "operation_manual_mileage" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationManualMileage(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetOperationManualMileage(*f)
	}
	return sdcu
}

// AddOperationManualMileage adds f to the "operation_manual_mileage" field.
func (sdcu *StatsDailyCarUpdate) AddOperationManualMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationManualMileage(f)
	return sdcu
}

// SetOperationAutoMileage sets the "operation_auto_mileage" field.
func (sdcu *StatsDailyCarUpdate) SetOperationAutoMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetOperationAutoMileage()
	sdcu.mutation.SetOperationAutoMileage(f)
	return sdcu
}

// SetNillableOperationAutoMileage sets the "operation_auto_mileage" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableOperationAutoMileage(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetOperationAutoMileage(*f)
	}
	return sdcu
}

// AddOperationAutoMileage adds f to the "operation_auto_mileage" field.
func (sdcu *StatsDailyCarUpdate) AddOperationAutoMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddOperationAutoMileage(f)
	return sdcu
}

// SetMaintainLockDuration sets the "maintain_lock_duration" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainLockDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainLockDuration()
	sdcu.mutation.SetMaintainLockDuration(f)
	return sdcu
}

// SetNillableMaintainLockDuration sets the "maintain_lock_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainLockDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainLockDuration(*f)
	}
	return sdcu
}

// AddMaintainLockDuration adds f to the "maintain_lock_duration" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainLockDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainLockDuration(f)
	return sdcu
}

// SetMaintainManualDuration sets the "maintain_manual_duration" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainManualDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainManualDuration()
	sdcu.mutation.SetMaintainManualDuration(f)
	return sdcu
}

// SetNillableMaintainManualDuration sets the "maintain_manual_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainManualDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainManualDuration(*f)
	}
	return sdcu
}

// AddMaintainManualDuration adds f to the "maintain_manual_duration" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainManualDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainManualDuration(f)
	return sdcu
}

// SetMaintainAutoDuration sets the "maintain_auto_duration" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainAutoDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainAutoDuration()
	sdcu.mutation.SetMaintainAutoDuration(f)
	return sdcu
}

// SetNillableMaintainAutoDuration sets the "maintain_auto_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainAutoDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainAutoDuration(*f)
	}
	return sdcu
}

// AddMaintainAutoDuration adds f to the "maintain_auto_duration" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainAutoDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainAutoDuration(f)
	return sdcu
}

// SetMaintainRemoteDuration sets the "maintain_remote_duration" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainRemoteDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainRemoteDuration()
	sdcu.mutation.SetMaintainRemoteDuration(f)
	return sdcu
}

// SetNillableMaintainRemoteDuration sets the "maintain_remote_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainRemoteDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainRemoteDuration(*f)
	}
	return sdcu
}

// AddMaintainRemoteDuration adds f to the "maintain_remote_duration" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainRemoteDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainRemoteDuration(f)
	return sdcu
}

// SetMaintainFaultDuration sets the "maintain_fault_duration" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainFaultDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainFaultDuration()
	sdcu.mutation.SetMaintainFaultDuration(f)
	return sdcu
}

// SetNillableMaintainFaultDuration sets the "maintain_fault_duration" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainFaultDuration(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainFaultDuration(*f)
	}
	return sdcu
}

// AddMaintainFaultDuration adds f to the "maintain_fault_duration" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainFaultDuration(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainFaultDuration(f)
	return sdcu
}

// SetMaintainLockTimes sets the "maintain_lock_times" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainLockTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainLockTimes()
	sdcu.mutation.SetMaintainLockTimes(u)
	return sdcu
}

// SetNillableMaintainLockTimes sets the "maintain_lock_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainLockTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetMaintainLockTimes(*u)
	}
	return sdcu
}

// AddMaintainLockTimes adds u to the "maintain_lock_times" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainLockTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainLockTimes(u)
	return sdcu
}

// SetMaintainManualTimes sets the "maintain_manual_times" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainManualTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainManualTimes()
	sdcu.mutation.SetMaintainManualTimes(u)
	return sdcu
}

// SetNillableMaintainManualTimes sets the "maintain_manual_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainManualTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetMaintainManualTimes(*u)
	}
	return sdcu
}

// AddMaintainManualTimes adds u to the "maintain_manual_times" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainManualTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainManualTimes(u)
	return sdcu
}

// SetMaintainAutoTimes sets the "maintain_auto_times" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainAutoTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainAutoTimes()
	sdcu.mutation.SetMaintainAutoTimes(u)
	return sdcu
}

// SetNillableMaintainAutoTimes sets the "maintain_auto_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainAutoTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetMaintainAutoTimes(*u)
	}
	return sdcu
}

// AddMaintainAutoTimes adds u to the "maintain_auto_times" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainAutoTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainAutoTimes(u)
	return sdcu
}

// SetMaintainRemoteTimes sets the "maintain_remote_times" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainRemoteTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainRemoteTimes()
	sdcu.mutation.SetMaintainRemoteTimes(u)
	return sdcu
}

// SetNillableMaintainRemoteTimes sets the "maintain_remote_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainRemoteTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetMaintainRemoteTimes(*u)
	}
	return sdcu
}

// AddMaintainRemoteTimes adds u to the "maintain_remote_times" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainRemoteTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainRemoteTimes(u)
	return sdcu
}

// SetMaintainFaultTimes sets the "maintain_fault_times" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainFaultTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainFaultTimes()
	sdcu.mutation.SetMaintainFaultTimes(u)
	return sdcu
}

// SetNillableMaintainFaultTimes sets the "maintain_fault_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainFaultTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetMaintainFaultTimes(*u)
	}
	return sdcu
}

// AddMaintainFaultTimes adds u to the "maintain_fault_times" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainFaultTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainFaultTimes(u)
	return sdcu
}

// SetMaintainManualMileage sets the "maintain_manual_mileage" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainManualMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainManualMileage()
	sdcu.mutation.SetMaintainManualMileage(f)
	return sdcu
}

// SetNillableMaintainManualMileage sets the "maintain_manual_mileage" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainManualMileage(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainManualMileage(*f)
	}
	return sdcu
}

// AddMaintainManualMileage adds f to the "maintain_manual_mileage" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainManualMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainManualMileage(f)
	return sdcu
}

// SetMaintainAutoMileage sets the "maintain_auto_mileage" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainAutoMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainAutoMileage()
	sdcu.mutation.SetMaintainAutoMileage(f)
	return sdcu
}

// SetNillableMaintainAutoMileage sets the "maintain_auto_mileage" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainAutoMileage(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainAutoMileage(*f)
	}
	return sdcu
}

// AddMaintainAutoMileage adds f to the "maintain_auto_mileage" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainAutoMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainAutoMileage(f)
	return sdcu
}

// SetMaintainRemoteMileage sets the "maintain_remote_mileage" field.
func (sdcu *StatsDailyCarUpdate) SetMaintainRemoteMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetMaintainRemoteMileage()
	sdcu.mutation.SetMaintainRemoteMileage(f)
	return sdcu
}

// SetNillableMaintainRemoteMileage sets the "maintain_remote_mileage" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableMaintainRemoteMileage(f *float32) *StatsDailyCarUpdate {
	if f != nil {
		sdcu.SetMaintainRemoteMileage(*f)
	}
	return sdcu
}

// AddMaintainRemoteMileage adds f to the "maintain_remote_mileage" field.
func (sdcu *StatsDailyCarUpdate) AddMaintainRemoteMileage(f float32) *StatsDailyCarUpdate {
	sdcu.mutation.AddMaintainRemoteMileage(f)
	return sdcu
}

// SetAlarmTimes sets the "alarm_times" field.
func (sdcu *StatsDailyCarUpdate) SetAlarmTimes(u uint32) *StatsDailyCarUpdate {
	sdcu.mutation.ResetAlarmTimes()
	sdcu.mutation.SetAlarmTimes(u)
	return sdcu
}

// SetNillableAlarmTimes sets the "alarm_times" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableAlarmTimes(u *uint32) *StatsDailyCarUpdate {
	if u != nil {
		sdcu.SetAlarmTimes(*u)
	}
	return sdcu
}

// AddAlarmTimes adds u to the "alarm_times" field.
func (sdcu *StatsDailyCarUpdate) AddAlarmTimes(u int32) *StatsDailyCarUpdate {
	sdcu.mutation.AddAlarmTimes(u)
	return sdcu
}

// SetStatsTime sets the "stats_time" field.
func (sdcu *StatsDailyCarUpdate) SetStatsTime(t time.Time) *StatsDailyCarUpdate {
	sdcu.mutation.SetStatsTime(t)
	return sdcu
}

// SetNillableStatsTime sets the "stats_time" field if the given value is not nil.
func (sdcu *StatsDailyCarUpdate) SetNillableStatsTime(t *time.Time) *StatsDailyCarUpdate {
	if t != nil {
		sdcu.SetStatsTime(*t)
	}
	return sdcu
}

// Mutation returns the StatsDailyCarMutation object of the builder.
func (sdcu *StatsDailyCarUpdate) Mutation() *StatsDailyCarMutation {
	return sdcu.mutation
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (sdcu *StatsDailyCarUpdate) Save(ctx context.Context) (int, error) {
	return withHooks(ctx, sdcu.sqlSave, sdcu.mutation, sdcu.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (sdcu *StatsDailyCarUpdate) SaveX(ctx context.Context) int {
	affected, err := sdcu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (sdcu *StatsDailyCarUpdate) Exec(ctx context.Context) error {
	_, err := sdcu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (sdcu *StatsDailyCarUpdate) ExecX(ctx context.Context) {
	if err := sdcu.Exec(ctx); err != nil {
		panic(err)
	}
}

func (sdcu *StatsDailyCarUpdate) sqlSave(ctx context.Context) (n int, err error) {
	_spec := sqlgraph.NewUpdateSpec(statsdailycar.Table, statsdailycar.Columns, sqlgraph.NewFieldSpec(statsdailycar.FieldID, field.TypeInt))
	if ps := sdcu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := sdcu.mutation.ScenicAreaID(); ok {
		_spec.SetField(statsdailycar.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedScenicAreaID(); ok {
		_spec.AddField(statsdailycar.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.CarID(); ok {
		_spec.SetField(statsdailycar.FieldCarID, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedCarID(); ok {
		_spec.AddField(statsdailycar.FieldCarID, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.Y(); ok {
		_spec.SetField(statsdailycar.FieldY, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedY(); ok {
		_spec.AddField(statsdailycar.FieldY, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.M(); ok {
		_spec.SetField(statsdailycar.FieldM, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedM(); ok {
		_spec.AddField(statsdailycar.FieldM, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.D(); ok {
		_spec.SetField(statsdailycar.FieldD, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedD(); ok {
		_spec.AddField(statsdailycar.FieldD, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.Week(); ok {
		_spec.SetField(statsdailycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedWeek(); ok {
		_spec.AddField(statsdailycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.Weekday(); ok {
		_spec.SetField(statsdailycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedWeekday(); ok {
		_spec.AddField(statsdailycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.Period(); ok {
		_spec.SetField(statsdailycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedPeriod(); ok {
		_spec.AddField(statsdailycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderCountCreate(); ok {
		_spec.SetField(statsdailycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderCountCreate(); ok {
		_spec.AddField(statsdailycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderCountFinish(); ok {
		_spec.SetField(statsdailycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderCountFinish(); ok {
		_spec.AddField(statsdailycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderCountCancel(); ok {
		_spec.SetField(statsdailycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderCountCancel(); ok {
		_spec.AddField(statsdailycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderAmount(); ok {
		_spec.SetField(statsdailycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderAmount(); ok {
		_spec.AddField(statsdailycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderDuration(); ok {
		_spec.SetField(statsdailycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderDuration(); ok {
		_spec.AddField(statsdailycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderMileage(); ok {
		_spec.SetField(statsdailycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderMileage(); ok {
		_spec.AddField(statsdailycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OrderScore(); ok {
		_spec.SetField(statsdailycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.AddedOrderScore(); ok {
		_spec.AddField(statsdailycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := sdcu.mutation.OperationLockDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationLockDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.OperationManualDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationManualDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.OperationAutoDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationAutoDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.OperationFaultDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationFaultDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.OperationLockTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationLockTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.OperationManualTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationManualTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.OperationAutoTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationAutoTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.OperationFaultTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationFaultTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.OperationManualMileage(); ok {
		_spec.SetField(statsdailycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationManualMileage(); ok {
		_spec.AddField(statsdailycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.OperationAutoMileage(); ok {
		_spec.SetField(statsdailycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedOperationAutoMileage(); ok {
		_spec.AddField(statsdailycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainLockDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainLockDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainManualDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainManualDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainAutoDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainAutoDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainRemoteDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainRemoteDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainFaultDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainFaultDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainLockTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainLockTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.MaintainManualTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainManualTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.MaintainAutoTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainAutoTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.MaintainRemoteTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainRemoteTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.MaintainFaultTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainFaultTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.MaintainManualMileage(); ok {
		_spec.SetField(statsdailycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainManualMileage(); ok {
		_spec.AddField(statsdailycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainAutoMileage(); ok {
		_spec.SetField(statsdailycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainAutoMileage(); ok {
		_spec.AddField(statsdailycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.MaintainRemoteMileage(); ok {
		_spec.SetField(statsdailycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AddedMaintainRemoteMileage(); ok {
		_spec.AddField(statsdailycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcu.mutation.AlarmTimes(); ok {
		_spec.SetField(statsdailycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.AddedAlarmTimes(); ok {
		_spec.AddField(statsdailycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := sdcu.mutation.StatsTime(); ok {
		_spec.SetField(statsdailycar.FieldStatsTime, field.TypeTime, value)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, sdcu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{statsdailycar.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	sdcu.mutation.done = true
	return n, nil
}

// StatsDailyCarUpdateOne is the builder for updating a single StatsDailyCar entity.
type StatsDailyCarUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *StatsDailyCarMutation
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (sdcuo *StatsDailyCarUpdateOne) SetScenicAreaID(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetScenicAreaID()
	sdcuo.mutation.SetScenicAreaID(i)
	return sdcuo
}

// SetNillableScenicAreaID sets the "scenic_area_id" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableScenicAreaID(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetScenicAreaID(*i)
	}
	return sdcuo
}

// AddScenicAreaID adds i to the "scenic_area_id" field.
func (sdcuo *StatsDailyCarUpdateOne) AddScenicAreaID(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddScenicAreaID(i)
	return sdcuo
}

// SetCarID sets the "car_id" field.
func (sdcuo *StatsDailyCarUpdateOne) SetCarID(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetCarID()
	sdcuo.mutation.SetCarID(i)
	return sdcuo
}

// SetNillableCarID sets the "car_id" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableCarID(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetCarID(*i)
	}
	return sdcuo
}

// AddCarID adds i to the "car_id" field.
func (sdcuo *StatsDailyCarUpdateOne) AddCarID(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddCarID(i)
	return sdcuo
}

// SetY sets the "y" field.
func (sdcuo *StatsDailyCarUpdateOne) SetY(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetY()
	sdcuo.mutation.SetY(i)
	return sdcuo
}

// SetNillableY sets the "y" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableY(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetY(*i)
	}
	return sdcuo
}

// AddY adds i to the "y" field.
func (sdcuo *StatsDailyCarUpdateOne) AddY(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddY(i)
	return sdcuo
}

// SetM sets the "m" field.
func (sdcuo *StatsDailyCarUpdateOne) SetM(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetM()
	sdcuo.mutation.SetM(i)
	return sdcuo
}

// SetNillableM sets the "m" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableM(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetM(*i)
	}
	return sdcuo
}

// AddM adds i to the "m" field.
func (sdcuo *StatsDailyCarUpdateOne) AddM(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddM(i)
	return sdcuo
}

// SetD sets the "d" field.
func (sdcuo *StatsDailyCarUpdateOne) SetD(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetD()
	sdcuo.mutation.SetD(i)
	return sdcuo
}

// SetNillableD sets the "d" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableD(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetD(*i)
	}
	return sdcuo
}

// AddD adds i to the "d" field.
func (sdcuo *StatsDailyCarUpdateOne) AddD(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddD(i)
	return sdcuo
}

// SetWeek sets the "week" field.
func (sdcuo *StatsDailyCarUpdateOne) SetWeek(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetWeek()
	sdcuo.mutation.SetWeek(i)
	return sdcuo
}

// SetNillableWeek sets the "week" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableWeek(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetWeek(*i)
	}
	return sdcuo
}

// AddWeek adds i to the "week" field.
func (sdcuo *StatsDailyCarUpdateOne) AddWeek(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddWeek(i)
	return sdcuo
}

// SetWeekday sets the "weekday" field.
func (sdcuo *StatsDailyCarUpdateOne) SetWeekday(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetWeekday()
	sdcuo.mutation.SetWeekday(i)
	return sdcuo
}

// SetNillableWeekday sets the "weekday" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableWeekday(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetWeekday(*i)
	}
	return sdcuo
}

// AddWeekday adds i to the "weekday" field.
func (sdcuo *StatsDailyCarUpdateOne) AddWeekday(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddWeekday(i)
	return sdcuo
}

// SetPeriod sets the "period" field.
func (sdcuo *StatsDailyCarUpdateOne) SetPeriod(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetPeriod()
	sdcuo.mutation.SetPeriod(i)
	return sdcuo
}

// SetNillablePeriod sets the "period" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillablePeriod(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetPeriod(*i)
	}
	return sdcuo
}

// AddPeriod adds i to the "period" field.
func (sdcuo *StatsDailyCarUpdateOne) AddPeriod(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddPeriod(i)
	return sdcuo
}

// SetOrderCountCreate sets the "order_count_create" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderCountCreate(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderCountCreate()
	sdcuo.mutation.SetOrderCountCreate(i)
	return sdcuo
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderCountCreate(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderCountCreate(*i)
	}
	return sdcuo
}

// AddOrderCountCreate adds i to the "order_count_create" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderCountCreate(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderCountCreate(i)
	return sdcuo
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderCountFinish(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderCountFinish()
	sdcuo.mutation.SetOrderCountFinish(i)
	return sdcuo
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderCountFinish(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderCountFinish(*i)
	}
	return sdcuo
}

// AddOrderCountFinish adds i to the "order_count_finish" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderCountFinish(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderCountFinish(i)
	return sdcuo
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderCountCancel(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderCountCancel()
	sdcuo.mutation.SetOrderCountCancel(i)
	return sdcuo
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderCountCancel(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderCountCancel(*i)
	}
	return sdcuo
}

// AddOrderCountCancel adds i to the "order_count_cancel" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderCountCancel(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderCountCancel(i)
	return sdcuo
}

// SetOrderAmount sets the "order_amount" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderAmount(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderAmount()
	sdcuo.mutation.SetOrderAmount(i)
	return sdcuo
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderAmount(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderAmount(*i)
	}
	return sdcuo
}

// AddOrderAmount adds i to the "order_amount" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderAmount(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderAmount(i)
	return sdcuo
}

// SetOrderDuration sets the "order_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderDuration(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderDuration()
	sdcuo.mutation.SetOrderDuration(i)
	return sdcuo
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderDuration(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderDuration(*i)
	}
	return sdcuo
}

// AddOrderDuration adds i to the "order_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderDuration(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderDuration(i)
	return sdcuo
}

// SetOrderMileage sets the "order_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderMileage(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderMileage()
	sdcuo.mutation.SetOrderMileage(i)
	return sdcuo
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderMileage(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderMileage(*i)
	}
	return sdcuo
}

// AddOrderMileage adds i to the "order_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderMileage(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderMileage(i)
	return sdcuo
}

// SetOrderScore sets the "order_score" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOrderScore(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOrderScore()
	sdcuo.mutation.SetOrderScore(i)
	return sdcuo
}

// SetNillableOrderScore sets the "order_score" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOrderScore(i *int) *StatsDailyCarUpdateOne {
	if i != nil {
		sdcuo.SetOrderScore(*i)
	}
	return sdcuo
}

// AddOrderScore adds i to the "order_score" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOrderScore(i int) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOrderScore(i)
	return sdcuo
}

// SetOperationLockDuration sets the "operation_lock_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationLockDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationLockDuration()
	sdcuo.mutation.SetOperationLockDuration(f)
	return sdcuo
}

// SetNillableOperationLockDuration sets the "operation_lock_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationLockDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetOperationLockDuration(*f)
	}
	return sdcuo
}

// AddOperationLockDuration adds f to the "operation_lock_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationLockDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationLockDuration(f)
	return sdcuo
}

// SetOperationManualDuration sets the "operation_manual_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationManualDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationManualDuration()
	sdcuo.mutation.SetOperationManualDuration(f)
	return sdcuo
}

// SetNillableOperationManualDuration sets the "operation_manual_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationManualDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetOperationManualDuration(*f)
	}
	return sdcuo
}

// AddOperationManualDuration adds f to the "operation_manual_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationManualDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationManualDuration(f)
	return sdcuo
}

// SetOperationAutoDuration sets the "operation_auto_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationAutoDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationAutoDuration()
	sdcuo.mutation.SetOperationAutoDuration(f)
	return sdcuo
}

// SetNillableOperationAutoDuration sets the "operation_auto_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationAutoDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetOperationAutoDuration(*f)
	}
	return sdcuo
}

// AddOperationAutoDuration adds f to the "operation_auto_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationAutoDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationAutoDuration(f)
	return sdcuo
}

// SetOperationFaultDuration sets the "operation_fault_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationFaultDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationFaultDuration()
	sdcuo.mutation.SetOperationFaultDuration(f)
	return sdcuo
}

// SetNillableOperationFaultDuration sets the "operation_fault_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationFaultDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetOperationFaultDuration(*f)
	}
	return sdcuo
}

// AddOperationFaultDuration adds f to the "operation_fault_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationFaultDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationFaultDuration(f)
	return sdcuo
}

// SetOperationLockTimes sets the "operation_lock_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationLockTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationLockTimes()
	sdcuo.mutation.SetOperationLockTimes(u)
	return sdcuo
}

// SetNillableOperationLockTimes sets the "operation_lock_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationLockTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetOperationLockTimes(*u)
	}
	return sdcuo
}

// AddOperationLockTimes adds u to the "operation_lock_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationLockTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationLockTimes(u)
	return sdcuo
}

// SetOperationManualTimes sets the "operation_manual_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationManualTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationManualTimes()
	sdcuo.mutation.SetOperationManualTimes(u)
	return sdcuo
}

// SetNillableOperationManualTimes sets the "operation_manual_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationManualTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetOperationManualTimes(*u)
	}
	return sdcuo
}

// AddOperationManualTimes adds u to the "operation_manual_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationManualTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationManualTimes(u)
	return sdcuo
}

// SetOperationAutoTimes sets the "operation_auto_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationAutoTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationAutoTimes()
	sdcuo.mutation.SetOperationAutoTimes(u)
	return sdcuo
}

// SetNillableOperationAutoTimes sets the "operation_auto_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationAutoTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetOperationAutoTimes(*u)
	}
	return sdcuo
}

// AddOperationAutoTimes adds u to the "operation_auto_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationAutoTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationAutoTimes(u)
	return sdcuo
}

// SetOperationFaultTimes sets the "operation_fault_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationFaultTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationFaultTimes()
	sdcuo.mutation.SetOperationFaultTimes(u)
	return sdcuo
}

// SetNillableOperationFaultTimes sets the "operation_fault_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationFaultTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetOperationFaultTimes(*u)
	}
	return sdcuo
}

// AddOperationFaultTimes adds u to the "operation_fault_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationFaultTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationFaultTimes(u)
	return sdcuo
}

// SetOperationManualMileage sets the "operation_manual_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationManualMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationManualMileage()
	sdcuo.mutation.SetOperationManualMileage(f)
	return sdcuo
}

// SetNillableOperationManualMileage sets the "operation_manual_mileage" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationManualMileage(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetOperationManualMileage(*f)
	}
	return sdcuo
}

// AddOperationManualMileage adds f to the "operation_manual_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationManualMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationManualMileage(f)
	return sdcuo
}

// SetOperationAutoMileage sets the "operation_auto_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) SetOperationAutoMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetOperationAutoMileage()
	sdcuo.mutation.SetOperationAutoMileage(f)
	return sdcuo
}

// SetNillableOperationAutoMileage sets the "operation_auto_mileage" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableOperationAutoMileage(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetOperationAutoMileage(*f)
	}
	return sdcuo
}

// AddOperationAutoMileage adds f to the "operation_auto_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) AddOperationAutoMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddOperationAutoMileage(f)
	return sdcuo
}

// SetMaintainLockDuration sets the "maintain_lock_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainLockDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainLockDuration()
	sdcuo.mutation.SetMaintainLockDuration(f)
	return sdcuo
}

// SetNillableMaintainLockDuration sets the "maintain_lock_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainLockDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainLockDuration(*f)
	}
	return sdcuo
}

// AddMaintainLockDuration adds f to the "maintain_lock_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainLockDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainLockDuration(f)
	return sdcuo
}

// SetMaintainManualDuration sets the "maintain_manual_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainManualDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainManualDuration()
	sdcuo.mutation.SetMaintainManualDuration(f)
	return sdcuo
}

// SetNillableMaintainManualDuration sets the "maintain_manual_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainManualDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainManualDuration(*f)
	}
	return sdcuo
}

// AddMaintainManualDuration adds f to the "maintain_manual_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainManualDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainManualDuration(f)
	return sdcuo
}

// SetMaintainAutoDuration sets the "maintain_auto_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainAutoDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainAutoDuration()
	sdcuo.mutation.SetMaintainAutoDuration(f)
	return sdcuo
}

// SetNillableMaintainAutoDuration sets the "maintain_auto_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainAutoDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainAutoDuration(*f)
	}
	return sdcuo
}

// AddMaintainAutoDuration adds f to the "maintain_auto_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainAutoDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainAutoDuration(f)
	return sdcuo
}

// SetMaintainRemoteDuration sets the "maintain_remote_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainRemoteDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainRemoteDuration()
	sdcuo.mutation.SetMaintainRemoteDuration(f)
	return sdcuo
}

// SetNillableMaintainRemoteDuration sets the "maintain_remote_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainRemoteDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainRemoteDuration(*f)
	}
	return sdcuo
}

// AddMaintainRemoteDuration adds f to the "maintain_remote_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainRemoteDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainRemoteDuration(f)
	return sdcuo
}

// SetMaintainFaultDuration sets the "maintain_fault_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainFaultDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainFaultDuration()
	sdcuo.mutation.SetMaintainFaultDuration(f)
	return sdcuo
}

// SetNillableMaintainFaultDuration sets the "maintain_fault_duration" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainFaultDuration(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainFaultDuration(*f)
	}
	return sdcuo
}

// AddMaintainFaultDuration adds f to the "maintain_fault_duration" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainFaultDuration(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainFaultDuration(f)
	return sdcuo
}

// SetMaintainLockTimes sets the "maintain_lock_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainLockTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainLockTimes()
	sdcuo.mutation.SetMaintainLockTimes(u)
	return sdcuo
}

// SetNillableMaintainLockTimes sets the "maintain_lock_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainLockTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetMaintainLockTimes(*u)
	}
	return sdcuo
}

// AddMaintainLockTimes adds u to the "maintain_lock_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainLockTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainLockTimes(u)
	return sdcuo
}

// SetMaintainManualTimes sets the "maintain_manual_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainManualTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainManualTimes()
	sdcuo.mutation.SetMaintainManualTimes(u)
	return sdcuo
}

// SetNillableMaintainManualTimes sets the "maintain_manual_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainManualTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetMaintainManualTimes(*u)
	}
	return sdcuo
}

// AddMaintainManualTimes adds u to the "maintain_manual_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainManualTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainManualTimes(u)
	return sdcuo
}

// SetMaintainAutoTimes sets the "maintain_auto_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainAutoTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainAutoTimes()
	sdcuo.mutation.SetMaintainAutoTimes(u)
	return sdcuo
}

// SetNillableMaintainAutoTimes sets the "maintain_auto_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainAutoTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetMaintainAutoTimes(*u)
	}
	return sdcuo
}

// AddMaintainAutoTimes adds u to the "maintain_auto_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainAutoTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainAutoTimes(u)
	return sdcuo
}

// SetMaintainRemoteTimes sets the "maintain_remote_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainRemoteTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainRemoteTimes()
	sdcuo.mutation.SetMaintainRemoteTimes(u)
	return sdcuo
}

// SetNillableMaintainRemoteTimes sets the "maintain_remote_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainRemoteTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetMaintainRemoteTimes(*u)
	}
	return sdcuo
}

// AddMaintainRemoteTimes adds u to the "maintain_remote_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainRemoteTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainRemoteTimes(u)
	return sdcuo
}

// SetMaintainFaultTimes sets the "maintain_fault_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainFaultTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainFaultTimes()
	sdcuo.mutation.SetMaintainFaultTimes(u)
	return sdcuo
}

// SetNillableMaintainFaultTimes sets the "maintain_fault_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainFaultTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetMaintainFaultTimes(*u)
	}
	return sdcuo
}

// AddMaintainFaultTimes adds u to the "maintain_fault_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainFaultTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainFaultTimes(u)
	return sdcuo
}

// SetMaintainManualMileage sets the "maintain_manual_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainManualMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainManualMileage()
	sdcuo.mutation.SetMaintainManualMileage(f)
	return sdcuo
}

// SetNillableMaintainManualMileage sets the "maintain_manual_mileage" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainManualMileage(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainManualMileage(*f)
	}
	return sdcuo
}

// AddMaintainManualMileage adds f to the "maintain_manual_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainManualMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainManualMileage(f)
	return sdcuo
}

// SetMaintainAutoMileage sets the "maintain_auto_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainAutoMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainAutoMileage()
	sdcuo.mutation.SetMaintainAutoMileage(f)
	return sdcuo
}

// SetNillableMaintainAutoMileage sets the "maintain_auto_mileage" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainAutoMileage(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainAutoMileage(*f)
	}
	return sdcuo
}

// AddMaintainAutoMileage adds f to the "maintain_auto_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainAutoMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainAutoMileage(f)
	return sdcuo
}

// SetMaintainRemoteMileage sets the "maintain_remote_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) SetMaintainRemoteMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetMaintainRemoteMileage()
	sdcuo.mutation.SetMaintainRemoteMileage(f)
	return sdcuo
}

// SetNillableMaintainRemoteMileage sets the "maintain_remote_mileage" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableMaintainRemoteMileage(f *float32) *StatsDailyCarUpdateOne {
	if f != nil {
		sdcuo.SetMaintainRemoteMileage(*f)
	}
	return sdcuo
}

// AddMaintainRemoteMileage adds f to the "maintain_remote_mileage" field.
func (sdcuo *StatsDailyCarUpdateOne) AddMaintainRemoteMileage(f float32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddMaintainRemoteMileage(f)
	return sdcuo
}

// SetAlarmTimes sets the "alarm_times" field.
func (sdcuo *StatsDailyCarUpdateOne) SetAlarmTimes(u uint32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.ResetAlarmTimes()
	sdcuo.mutation.SetAlarmTimes(u)
	return sdcuo
}

// SetNillableAlarmTimes sets the "alarm_times" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableAlarmTimes(u *uint32) *StatsDailyCarUpdateOne {
	if u != nil {
		sdcuo.SetAlarmTimes(*u)
	}
	return sdcuo
}

// AddAlarmTimes adds u to the "alarm_times" field.
func (sdcuo *StatsDailyCarUpdateOne) AddAlarmTimes(u int32) *StatsDailyCarUpdateOne {
	sdcuo.mutation.AddAlarmTimes(u)
	return sdcuo
}

// SetStatsTime sets the "stats_time" field.
func (sdcuo *StatsDailyCarUpdateOne) SetStatsTime(t time.Time) *StatsDailyCarUpdateOne {
	sdcuo.mutation.SetStatsTime(t)
	return sdcuo
}

// SetNillableStatsTime sets the "stats_time" field if the given value is not nil.
func (sdcuo *StatsDailyCarUpdateOne) SetNillableStatsTime(t *time.Time) *StatsDailyCarUpdateOne {
	if t != nil {
		sdcuo.SetStatsTime(*t)
	}
	return sdcuo
}

// Mutation returns the StatsDailyCarMutation object of the builder.
func (sdcuo *StatsDailyCarUpdateOne) Mutation() *StatsDailyCarMutation {
	return sdcuo.mutation
}

// Where appends a list predicates to the StatsDailyCarUpdate builder.
func (sdcuo *StatsDailyCarUpdateOne) Where(ps ...predicate.StatsDailyCar) *StatsDailyCarUpdateOne {
	sdcuo.mutation.Where(ps...)
	return sdcuo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (sdcuo *StatsDailyCarUpdateOne) Select(field string, fields ...string) *StatsDailyCarUpdateOne {
	sdcuo.fields = append([]string{field}, fields...)
	return sdcuo
}

// Save executes the query and returns the updated StatsDailyCar entity.
func (sdcuo *StatsDailyCarUpdateOne) Save(ctx context.Context) (*StatsDailyCar, error) {
	return withHooks(ctx, sdcuo.sqlSave, sdcuo.mutation, sdcuo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (sdcuo *StatsDailyCarUpdateOne) SaveX(ctx context.Context) *StatsDailyCar {
	node, err := sdcuo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (sdcuo *StatsDailyCarUpdateOne) Exec(ctx context.Context) error {
	_, err := sdcuo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (sdcuo *StatsDailyCarUpdateOne) ExecX(ctx context.Context) {
	if err := sdcuo.Exec(ctx); err != nil {
		panic(err)
	}
}

func (sdcuo *StatsDailyCarUpdateOne) sqlSave(ctx context.Context) (_node *StatsDailyCar, err error) {
	_spec := sqlgraph.NewUpdateSpec(statsdailycar.Table, statsdailycar.Columns, sqlgraph.NewFieldSpec(statsdailycar.FieldID, field.TypeInt))
	id, ok := sdcuo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "StatsDailyCar.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := sdcuo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, statsdailycar.FieldID)
		for _, f := range fields {
			if !statsdailycar.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != statsdailycar.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := sdcuo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := sdcuo.mutation.ScenicAreaID(); ok {
		_spec.SetField(statsdailycar.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedScenicAreaID(); ok {
		_spec.AddField(statsdailycar.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.CarID(); ok {
		_spec.SetField(statsdailycar.FieldCarID, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedCarID(); ok {
		_spec.AddField(statsdailycar.FieldCarID, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.Y(); ok {
		_spec.SetField(statsdailycar.FieldY, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedY(); ok {
		_spec.AddField(statsdailycar.FieldY, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.M(); ok {
		_spec.SetField(statsdailycar.FieldM, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedM(); ok {
		_spec.AddField(statsdailycar.FieldM, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.D(); ok {
		_spec.SetField(statsdailycar.FieldD, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedD(); ok {
		_spec.AddField(statsdailycar.FieldD, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.Week(); ok {
		_spec.SetField(statsdailycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedWeek(); ok {
		_spec.AddField(statsdailycar.FieldWeek, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.Weekday(); ok {
		_spec.SetField(statsdailycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedWeekday(); ok {
		_spec.AddField(statsdailycar.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.Period(); ok {
		_spec.SetField(statsdailycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedPeriod(); ok {
		_spec.AddField(statsdailycar.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderCountCreate(); ok {
		_spec.SetField(statsdailycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderCountCreate(); ok {
		_spec.AddField(statsdailycar.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderCountFinish(); ok {
		_spec.SetField(statsdailycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderCountFinish(); ok {
		_spec.AddField(statsdailycar.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderCountCancel(); ok {
		_spec.SetField(statsdailycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderCountCancel(); ok {
		_spec.AddField(statsdailycar.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderAmount(); ok {
		_spec.SetField(statsdailycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderAmount(); ok {
		_spec.AddField(statsdailycar.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderDuration(); ok {
		_spec.SetField(statsdailycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderDuration(); ok {
		_spec.AddField(statsdailycar.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderMileage(); ok {
		_spec.SetField(statsdailycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderMileage(); ok {
		_spec.AddField(statsdailycar.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OrderScore(); ok {
		_spec.SetField(statsdailycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.AddedOrderScore(); ok {
		_spec.AddField(statsdailycar.FieldOrderScore, field.TypeInt, value)
	}
	if value, ok := sdcuo.mutation.OperationLockDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationLockDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.OperationManualDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationManualDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.OperationAutoDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationAutoDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.OperationFaultDuration(); ok {
		_spec.SetField(statsdailycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationFaultDuration(); ok {
		_spec.AddField(statsdailycar.FieldOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.OperationLockTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationLockTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.OperationManualTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationManualTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.OperationAutoTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationAutoTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.OperationFaultTimes(); ok {
		_spec.SetField(statsdailycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationFaultTimes(); ok {
		_spec.AddField(statsdailycar.FieldOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.OperationManualMileage(); ok {
		_spec.SetField(statsdailycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationManualMileage(); ok {
		_spec.AddField(statsdailycar.FieldOperationManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.OperationAutoMileage(); ok {
		_spec.SetField(statsdailycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedOperationAutoMileage(); ok {
		_spec.AddField(statsdailycar.FieldOperationAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainLockDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainLockDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainLockDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainManualDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainManualDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainAutoDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainAutoDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainRemoteDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainRemoteDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainFaultDuration(); ok {
		_spec.SetField(statsdailycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainFaultDuration(); ok {
		_spec.AddField(statsdailycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainLockTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainLockTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainLockTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.MaintainManualTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainManualTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainManualTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.MaintainAutoTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainAutoTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainAutoTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.MaintainRemoteTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainRemoteTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.MaintainFaultTimes(); ok {
		_spec.SetField(statsdailycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainFaultTimes(); ok {
		_spec.AddField(statsdailycar.FieldMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.MaintainManualMileage(); ok {
		_spec.SetField(statsdailycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainManualMileage(); ok {
		_spec.AddField(statsdailycar.FieldMaintainManualMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainAutoMileage(); ok {
		_spec.SetField(statsdailycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainAutoMileage(); ok {
		_spec.AddField(statsdailycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.MaintainRemoteMileage(); ok {
		_spec.SetField(statsdailycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AddedMaintainRemoteMileage(); ok {
		_spec.AddField(statsdailycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
	}
	if value, ok := sdcuo.mutation.AlarmTimes(); ok {
		_spec.SetField(statsdailycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.AddedAlarmTimes(); ok {
		_spec.AddField(statsdailycar.FieldAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := sdcuo.mutation.StatsTime(); ok {
		_spec.SetField(statsdailycar.FieldStatsTime, field.TypeTime, value)
	}
	_node = &StatsDailyCar{config: sdcuo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, sdcuo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{statsdailycar.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	sdcuo.mutation.done = true
	return _node, nil
}
