// Code generated by ent, DO NOT EDIT.

package carextendyokee

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldID, id))
}

// DeleteTime applies equality check predicate on the "delete_time" field. It's identical to DeleteTimeEQ.
func DeleteTime(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldDeleteTime, v))
}

// CarID applies equality check predicate on the "car_id" field. It's identical to CarIDEQ.
func CarID(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldCarID, v))
}

// YokeeVehicleID applies equality check predicate on the "yokee_vehicle_id" field. It's identical to YokeeVehicleIDEQ.
func YokeeVehicleID(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldYokeeVehicleID, v))
}

// YokeeVehicleName applies equality check predicate on the "yokee_vehicle_name" field. It's identical to YokeeVehicleNameEQ.
func YokeeVehicleName(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldYokeeVehicleName, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldUpdateTime, v))
}

// DeleteTimeEQ applies the EQ predicate on the "delete_time" field.
func DeleteTimeEQ(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldDeleteTime, v))
}

// DeleteTimeNEQ applies the NEQ predicate on the "delete_time" field.
func DeleteTimeNEQ(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldDeleteTime, v))
}

// DeleteTimeIn applies the In predicate on the "delete_time" field.
func DeleteTimeIn(vs ...time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldDeleteTime, vs...))
}

// DeleteTimeNotIn applies the NotIn predicate on the "delete_time" field.
func DeleteTimeNotIn(vs ...time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldDeleteTime, vs...))
}

// DeleteTimeGT applies the GT predicate on the "delete_time" field.
func DeleteTimeGT(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldDeleteTime, v))
}

// DeleteTimeGTE applies the GTE predicate on the "delete_time" field.
func DeleteTimeGTE(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldDeleteTime, v))
}

// DeleteTimeLT applies the LT predicate on the "delete_time" field.
func DeleteTimeLT(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldDeleteTime, v))
}

// DeleteTimeLTE applies the LTE predicate on the "delete_time" field.
func DeleteTimeLTE(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldDeleteTime, v))
}

// DeleteTimeIsNil applies the IsNil predicate on the "delete_time" field.
func DeleteTimeIsNil() predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIsNull(FieldDeleteTime))
}

// DeleteTimeNotNil applies the NotNil predicate on the "delete_time" field.
func DeleteTimeNotNil() predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotNull(FieldDeleteTime))
}

// CarIDEQ applies the EQ predicate on the "car_id" field.
func CarIDEQ(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldCarID, v))
}

// CarIDNEQ applies the NEQ predicate on the "car_id" field.
func CarIDNEQ(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldCarID, v))
}

// CarIDIn applies the In predicate on the "car_id" field.
func CarIDIn(vs ...int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldCarID, vs...))
}

// CarIDNotIn applies the NotIn predicate on the "car_id" field.
func CarIDNotIn(vs ...int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldCarID, vs...))
}

// CarIDGT applies the GT predicate on the "car_id" field.
func CarIDGT(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldCarID, v))
}

// CarIDGTE applies the GTE predicate on the "car_id" field.
func CarIDGTE(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldCarID, v))
}

// CarIDLT applies the LT predicate on the "car_id" field.
func CarIDLT(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldCarID, v))
}

// CarIDLTE applies the LTE predicate on the "car_id" field.
func CarIDLTE(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldCarID, v))
}

// YokeeVehicleIDEQ applies the EQ predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDEQ(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldYokeeVehicleID, v))
}

// YokeeVehicleIDNEQ applies the NEQ predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDNEQ(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldYokeeVehicleID, v))
}

// YokeeVehicleIDIn applies the In predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDIn(vs ...int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldYokeeVehicleID, vs...))
}

// YokeeVehicleIDNotIn applies the NotIn predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDNotIn(vs ...int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldYokeeVehicleID, vs...))
}

// YokeeVehicleIDGT applies the GT predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDGT(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldYokeeVehicleID, v))
}

// YokeeVehicleIDGTE applies the GTE predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDGTE(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldYokeeVehicleID, v))
}

// YokeeVehicleIDLT applies the LT predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDLT(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldYokeeVehicleID, v))
}

// YokeeVehicleIDLTE applies the LTE predicate on the "yokee_vehicle_id" field.
func YokeeVehicleIDLTE(v int) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldYokeeVehicleID, v))
}

// YokeeVehicleNameEQ applies the EQ predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameEQ(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameNEQ applies the NEQ predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameNEQ(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameIn applies the In predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameIn(vs ...string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldYokeeVehicleName, vs...))
}

// YokeeVehicleNameNotIn applies the NotIn predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameNotIn(vs ...string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldYokeeVehicleName, vs...))
}

// YokeeVehicleNameGT applies the GT predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameGT(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameGTE applies the GTE predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameGTE(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameLT applies the LT predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameLT(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameLTE applies the LTE predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameLTE(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameContains applies the Contains predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameContains(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldContains(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameHasPrefix applies the HasPrefix predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameHasPrefix(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldHasPrefix(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameHasSuffix applies the HasSuffix predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameHasSuffix(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldHasSuffix(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameEqualFold applies the EqualFold predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameEqualFold(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEqualFold(FieldYokeeVehicleName, v))
}

// YokeeVehicleNameContainsFold applies the ContainsFold predicate on the "yokee_vehicle_name" field.
func YokeeVehicleNameContainsFold(v string) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldContainsFold(FieldYokeeVehicleName, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CarExtendYokee) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CarExtendYokee) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CarExtendYokee) predicate.CarExtendYokee {
	return predicate.CarExtendYokee(sql.NotPredicates(p))
}
