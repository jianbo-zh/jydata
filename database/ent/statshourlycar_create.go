// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"github.com/jianbo-zh/jydata/database/ent/car"
	"github.com/jianbo-zh/jydata/database/ent/scenicarea"
	"github.com/jianbo-zh/jydata/database/ent/statshourlycar"
	"time"

	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// StatsHourlyCarCreate is the builder for creating a StatsHourlyCar entity.
type StatsHourlyCarCreate struct {
	config
	mutation *StatsHourlyCarMutation
	hooks    []Hook
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (shcc *StatsHourlyCarCreate) SetScenicAreaID(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetScenicAreaID(i)
	return shcc
}

// SetCarID sets the "car_id" field.
func (shcc *StatsHourlyCarCreate) SetCarID(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetCarID(i)
	return shcc
}

// SetY sets the "y" field.
func (shcc *StatsHourlyCarCreate) SetY(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetY(i)
	return shcc
}

// SetM sets the "m" field.
func (shcc *StatsHourlyCarCreate) SetM(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetM(i)
	return shcc
}

// SetD sets the "d" field.
func (shcc *StatsHourlyCarCreate) SetD(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetD(i)
	return shcc
}

// SetH sets the "h" field.
func (shcc *StatsHourlyCarCreate) SetH(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetH(i)
	return shcc
}

// SetWeek sets the "week" field.
func (shcc *StatsHourlyCarCreate) SetWeek(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetWeek(i)
	return shcc
}

// SetWeekday sets the "weekday" field.
func (shcc *StatsHourlyCarCreate) SetWeekday(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetWeekday(i)
	return shcc
}

// SetPeriod sets the "period" field.
func (shcc *StatsHourlyCarCreate) SetPeriod(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetPeriod(i)
	return shcc
}

// SetOrderCountCreate sets the "order_count_create" field.
func (shcc *StatsHourlyCarCreate) SetOrderCountCreate(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderCountCreate(i)
	return shcc
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderCountCreate(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderCountCreate(*i)
	}
	return shcc
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (shcc *StatsHourlyCarCreate) SetOrderCountFinish(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderCountFinish(i)
	return shcc
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderCountFinish(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderCountFinish(*i)
	}
	return shcc
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (shcc *StatsHourlyCarCreate) SetOrderCountCancel(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderCountCancel(i)
	return shcc
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderCountCancel(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderCountCancel(*i)
	}
	return shcc
}

// SetOrderAmount sets the "order_amount" field.
func (shcc *StatsHourlyCarCreate) SetOrderAmount(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderAmount(i)
	return shcc
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderAmount(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderAmount(*i)
	}
	return shcc
}

// SetOrderDuration sets the "order_duration" field.
func (shcc *StatsHourlyCarCreate) SetOrderDuration(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderDuration(i)
	return shcc
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderDuration(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderDuration(*i)
	}
	return shcc
}

// SetOrderMileage sets the "order_mileage" field.
func (shcc *StatsHourlyCarCreate) SetOrderMileage(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderMileage(i)
	return shcc
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderMileage(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderMileage(*i)
	}
	return shcc
}

// SetOrderScore sets the "order_score" field.
func (shcc *StatsHourlyCarCreate) SetOrderScore(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetOrderScore(i)
	return shcc
}

// SetNillableOrderScore sets the "order_score" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOrderScore(i *int) *StatsHourlyCarCreate {
	if i != nil {
		shcc.SetOrderScore(*i)
	}
	return shcc
}

// SetCumulativeOperationLockDuration sets the "cumulative_operation_lock_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationLockDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationLockDuration(f)
	return shcc
}

// SetNillableCumulativeOperationLockDuration sets the "cumulative_operation_lock_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationLockDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeOperationLockDuration(*f)
	}
	return shcc
}

// SetCumulativeOperationManualDuration sets the "cumulative_operation_manual_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationManualDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationManualDuration(f)
	return shcc
}

// SetNillableCumulativeOperationManualDuration sets the "cumulative_operation_manual_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationManualDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeOperationManualDuration(*f)
	}
	return shcc
}

// SetCumulativeOperationAutoDuration sets the "cumulative_operation_auto_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationAutoDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationAutoDuration(f)
	return shcc
}

// SetNillableCumulativeOperationAutoDuration sets the "cumulative_operation_auto_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationAutoDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeOperationAutoDuration(*f)
	}
	return shcc
}

// SetCumulativeOperationFaultDuration sets the "cumulative_operation_fault_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationFaultDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationFaultDuration(f)
	return shcc
}

// SetNillableCumulativeOperationFaultDuration sets the "cumulative_operation_fault_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationFaultDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeOperationFaultDuration(*f)
	}
	return shcc
}

// SetCumulativeOperationLockTimes sets the "cumulative_operation_lock_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationLockTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationLockTimes(u)
	return shcc
}

// SetNillableCumulativeOperationLockTimes sets the "cumulative_operation_lock_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationLockTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeOperationLockTimes(*u)
	}
	return shcc
}

// SetCumulativeOperationManualTimes sets the "cumulative_operation_manual_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationManualTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationManualTimes(u)
	return shcc
}

// SetNillableCumulativeOperationManualTimes sets the "cumulative_operation_manual_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationManualTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeOperationManualTimes(*u)
	}
	return shcc
}

// SetCumulativeOperationAutoTimes sets the "cumulative_operation_auto_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationAutoTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationAutoTimes(u)
	return shcc
}

// SetNillableCumulativeOperationAutoTimes sets the "cumulative_operation_auto_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationAutoTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeOperationAutoTimes(*u)
	}
	return shcc
}

// SetCumulativeOperationFaultTimes sets the "cumulative_operation_fault_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationFaultTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationFaultTimes(u)
	return shcc
}

// SetNillableCumulativeOperationFaultTimes sets the "cumulative_operation_fault_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationFaultTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeOperationFaultTimes(*u)
	}
	return shcc
}

// SetCumulativeOperationManualMileage sets the "cumulative_operation_manual_mileage" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationManualMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationManualMileage(f)
	return shcc
}

// SetNillableCumulativeOperationManualMileage sets the "cumulative_operation_manual_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationManualMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeOperationManualMileage(*f)
	}
	return shcc
}

// SetCumulativeOperationAutoMileage sets the "cumulative_operation_auto_mileage" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeOperationAutoMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeOperationAutoMileage(f)
	return shcc
}

// SetNillableCumulativeOperationAutoMileage sets the "cumulative_operation_auto_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeOperationAutoMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeOperationAutoMileage(*f)
	}
	return shcc
}

// SetCumulativeMaintainLockDuration sets the "cumulative_maintain_lock_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainLockDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainLockDuration(f)
	return shcc
}

// SetNillableCumulativeMaintainLockDuration sets the "cumulative_maintain_lock_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainLockDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainLockDuration(*f)
	}
	return shcc
}

// SetCumulativeMaintainManualDuration sets the "cumulative_maintain_manual_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainManualDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainManualDuration(f)
	return shcc
}

// SetNillableCumulativeMaintainManualDuration sets the "cumulative_maintain_manual_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainManualDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainManualDuration(*f)
	}
	return shcc
}

// SetCumulativeMaintainAutoDuration sets the "cumulative_maintain_auto_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainAutoDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainAutoDuration(f)
	return shcc
}

// SetNillableCumulativeMaintainAutoDuration sets the "cumulative_maintain_auto_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainAutoDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainAutoDuration(*f)
	}
	return shcc
}

// SetCumulativeMaintainRemoteDuration sets the "cumulative_maintain_remote_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainRemoteDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainRemoteDuration(f)
	return shcc
}

// SetNillableCumulativeMaintainRemoteDuration sets the "cumulative_maintain_remote_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainRemoteDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainRemoteDuration(*f)
	}
	return shcc
}

// SetCumulativeMaintainFaultDuration sets the "cumulative_maintain_fault_duration" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainFaultDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainFaultDuration(f)
	return shcc
}

// SetNillableCumulativeMaintainFaultDuration sets the "cumulative_maintain_fault_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainFaultDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainFaultDuration(*f)
	}
	return shcc
}

// SetCumulativeMaintainLockTimes sets the "cumulative_maintain_lock_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainLockTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainLockTimes(u)
	return shcc
}

// SetNillableCumulativeMaintainLockTimes sets the "cumulative_maintain_lock_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainLockTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeMaintainLockTimes(*u)
	}
	return shcc
}

// SetCumulativeMaintainManualTimes sets the "cumulative_maintain_manual_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainManualTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainManualTimes(u)
	return shcc
}

// SetNillableCumulativeMaintainManualTimes sets the "cumulative_maintain_manual_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainManualTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeMaintainManualTimes(*u)
	}
	return shcc
}

// SetCumulativeMaintainAutoTimes sets the "cumulative_maintain_auto_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainAutoTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainAutoTimes(u)
	return shcc
}

// SetNillableCumulativeMaintainAutoTimes sets the "cumulative_maintain_auto_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainAutoTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeMaintainAutoTimes(*u)
	}
	return shcc
}

// SetCumulativeMaintainRemoteTimes sets the "cumulative_maintain_remote_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainRemoteTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainRemoteTimes(u)
	return shcc
}

// SetNillableCumulativeMaintainRemoteTimes sets the "cumulative_maintain_remote_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainRemoteTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeMaintainRemoteTimes(*u)
	}
	return shcc
}

// SetCumulativeMaintainFaultTimes sets the "cumulative_maintain_fault_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainFaultTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainFaultTimes(u)
	return shcc
}

// SetNillableCumulativeMaintainFaultTimes sets the "cumulative_maintain_fault_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainFaultTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeMaintainFaultTimes(*u)
	}
	return shcc
}

// SetCumulativeMaintainManualMileage sets the "cumulative_maintain_manual_mileage" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainManualMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainManualMileage(f)
	return shcc
}

// SetNillableCumulativeMaintainManualMileage sets the "cumulative_maintain_manual_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainManualMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainManualMileage(*f)
	}
	return shcc
}

// SetCumulativeMaintainAutoMileage sets the "cumulative_maintain_auto_mileage" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainAutoMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainAutoMileage(f)
	return shcc
}

// SetNillableCumulativeMaintainAutoMileage sets the "cumulative_maintain_auto_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainAutoMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainAutoMileage(*f)
	}
	return shcc
}

// SetCumulativeMaintainRemoteMileage sets the "cumulative_maintain_remote_mileage" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeMaintainRemoteMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeMaintainRemoteMileage(f)
	return shcc
}

// SetNillableCumulativeMaintainRemoteMileage sets the "cumulative_maintain_remote_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeMaintainRemoteMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetCumulativeMaintainRemoteMileage(*f)
	}
	return shcc
}

// SetCumulativeAlarmTimes sets the "cumulative_alarm_times" field.
func (shcc *StatsHourlyCarCreate) SetCumulativeAlarmTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetCumulativeAlarmTimes(u)
	return shcc
}

// SetNillableCumulativeAlarmTimes sets the "cumulative_alarm_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCumulativeAlarmTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetCumulativeAlarmTimes(*u)
	}
	return shcc
}

// SetOperationLockDuration sets the "operation_lock_duration" field.
func (shcc *StatsHourlyCarCreate) SetOperationLockDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationLockDuration(f)
	return shcc
}

// SetNillableOperationLockDuration sets the "operation_lock_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationLockDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetOperationLockDuration(*f)
	}
	return shcc
}

// SetOperationManualDuration sets the "operation_manual_duration" field.
func (shcc *StatsHourlyCarCreate) SetOperationManualDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationManualDuration(f)
	return shcc
}

// SetNillableOperationManualDuration sets the "operation_manual_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationManualDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetOperationManualDuration(*f)
	}
	return shcc
}

// SetOperationAutoDuration sets the "operation_auto_duration" field.
func (shcc *StatsHourlyCarCreate) SetOperationAutoDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationAutoDuration(f)
	return shcc
}

// SetNillableOperationAutoDuration sets the "operation_auto_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationAutoDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetOperationAutoDuration(*f)
	}
	return shcc
}

// SetOperationFaultDuration sets the "operation_fault_duration" field.
func (shcc *StatsHourlyCarCreate) SetOperationFaultDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationFaultDuration(f)
	return shcc
}

// SetNillableOperationFaultDuration sets the "operation_fault_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationFaultDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetOperationFaultDuration(*f)
	}
	return shcc
}

// SetOperationLockTimes sets the "operation_lock_times" field.
func (shcc *StatsHourlyCarCreate) SetOperationLockTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationLockTimes(u)
	return shcc
}

// SetNillableOperationLockTimes sets the "operation_lock_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationLockTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetOperationLockTimes(*u)
	}
	return shcc
}

// SetOperationManualTimes sets the "operation_manual_times" field.
func (shcc *StatsHourlyCarCreate) SetOperationManualTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationManualTimes(u)
	return shcc
}

// SetNillableOperationManualTimes sets the "operation_manual_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationManualTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetOperationManualTimes(*u)
	}
	return shcc
}

// SetOperationAutoTimes sets the "operation_auto_times" field.
func (shcc *StatsHourlyCarCreate) SetOperationAutoTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationAutoTimes(u)
	return shcc
}

// SetNillableOperationAutoTimes sets the "operation_auto_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationAutoTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetOperationAutoTimes(*u)
	}
	return shcc
}

// SetOperationFaultTimes sets the "operation_fault_times" field.
func (shcc *StatsHourlyCarCreate) SetOperationFaultTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationFaultTimes(u)
	return shcc
}

// SetNillableOperationFaultTimes sets the "operation_fault_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationFaultTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetOperationFaultTimes(*u)
	}
	return shcc
}

// SetOperationManualMileage sets the "operation_manual_mileage" field.
func (shcc *StatsHourlyCarCreate) SetOperationManualMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationManualMileage(f)
	return shcc
}

// SetNillableOperationManualMileage sets the "operation_manual_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationManualMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetOperationManualMileage(*f)
	}
	return shcc
}

// SetOperationAutoMileage sets the "operation_auto_mileage" field.
func (shcc *StatsHourlyCarCreate) SetOperationAutoMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetOperationAutoMileage(f)
	return shcc
}

// SetNillableOperationAutoMileage sets the "operation_auto_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableOperationAutoMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetOperationAutoMileage(*f)
	}
	return shcc
}

// SetMaintainLockDuration sets the "maintain_lock_duration" field.
func (shcc *StatsHourlyCarCreate) SetMaintainLockDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainLockDuration(f)
	return shcc
}

// SetNillableMaintainLockDuration sets the "maintain_lock_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainLockDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainLockDuration(*f)
	}
	return shcc
}

// SetMaintainManualDuration sets the "maintain_manual_duration" field.
func (shcc *StatsHourlyCarCreate) SetMaintainManualDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainManualDuration(f)
	return shcc
}

// SetNillableMaintainManualDuration sets the "maintain_manual_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainManualDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainManualDuration(*f)
	}
	return shcc
}

// SetMaintainAutoDuration sets the "maintain_auto_duration" field.
func (shcc *StatsHourlyCarCreate) SetMaintainAutoDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainAutoDuration(f)
	return shcc
}

// SetNillableMaintainAutoDuration sets the "maintain_auto_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainAutoDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainAutoDuration(*f)
	}
	return shcc
}

// SetMaintainRemoteDuration sets the "maintain_remote_duration" field.
func (shcc *StatsHourlyCarCreate) SetMaintainRemoteDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainRemoteDuration(f)
	return shcc
}

// SetNillableMaintainRemoteDuration sets the "maintain_remote_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainRemoteDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainRemoteDuration(*f)
	}
	return shcc
}

// SetMaintainFaultDuration sets the "maintain_fault_duration" field.
func (shcc *StatsHourlyCarCreate) SetMaintainFaultDuration(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainFaultDuration(f)
	return shcc
}

// SetNillableMaintainFaultDuration sets the "maintain_fault_duration" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainFaultDuration(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainFaultDuration(*f)
	}
	return shcc
}

// SetMaintainLockTimes sets the "maintain_lock_times" field.
func (shcc *StatsHourlyCarCreate) SetMaintainLockTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainLockTimes(u)
	return shcc
}

// SetNillableMaintainLockTimes sets the "maintain_lock_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainLockTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetMaintainLockTimes(*u)
	}
	return shcc
}

// SetMaintainManualTimes sets the "maintain_manual_times" field.
func (shcc *StatsHourlyCarCreate) SetMaintainManualTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainManualTimes(u)
	return shcc
}

// SetNillableMaintainManualTimes sets the "maintain_manual_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainManualTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetMaintainManualTimes(*u)
	}
	return shcc
}

// SetMaintainAutoTimes sets the "maintain_auto_times" field.
func (shcc *StatsHourlyCarCreate) SetMaintainAutoTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainAutoTimes(u)
	return shcc
}

// SetNillableMaintainAutoTimes sets the "maintain_auto_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainAutoTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetMaintainAutoTimes(*u)
	}
	return shcc
}

// SetMaintainRemoteTimes sets the "maintain_remote_times" field.
func (shcc *StatsHourlyCarCreate) SetMaintainRemoteTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainRemoteTimes(u)
	return shcc
}

// SetNillableMaintainRemoteTimes sets the "maintain_remote_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainRemoteTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetMaintainRemoteTimes(*u)
	}
	return shcc
}

// SetMaintainFaultTimes sets the "maintain_fault_times" field.
func (shcc *StatsHourlyCarCreate) SetMaintainFaultTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainFaultTimes(u)
	return shcc
}

// SetNillableMaintainFaultTimes sets the "maintain_fault_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainFaultTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetMaintainFaultTimes(*u)
	}
	return shcc
}

// SetMaintainManualMileage sets the "maintain_manual_mileage" field.
func (shcc *StatsHourlyCarCreate) SetMaintainManualMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainManualMileage(f)
	return shcc
}

// SetNillableMaintainManualMileage sets the "maintain_manual_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainManualMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainManualMileage(*f)
	}
	return shcc
}

// SetMaintainAutoMileage sets the "maintain_auto_mileage" field.
func (shcc *StatsHourlyCarCreate) SetMaintainAutoMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainAutoMileage(f)
	return shcc
}

// SetNillableMaintainAutoMileage sets the "maintain_auto_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainAutoMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainAutoMileage(*f)
	}
	return shcc
}

// SetMaintainRemoteMileage sets the "maintain_remote_mileage" field.
func (shcc *StatsHourlyCarCreate) SetMaintainRemoteMileage(f float32) *StatsHourlyCarCreate {
	shcc.mutation.SetMaintainRemoteMileage(f)
	return shcc
}

// SetNillableMaintainRemoteMileage sets the "maintain_remote_mileage" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableMaintainRemoteMileage(f *float32) *StatsHourlyCarCreate {
	if f != nil {
		shcc.SetMaintainRemoteMileage(*f)
	}
	return shcc
}

// SetAlarmTimes sets the "alarm_times" field.
func (shcc *StatsHourlyCarCreate) SetAlarmTimes(u uint32) *StatsHourlyCarCreate {
	shcc.mutation.SetAlarmTimes(u)
	return shcc
}

// SetNillableAlarmTimes sets the "alarm_times" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableAlarmTimes(u *uint32) *StatsHourlyCarCreate {
	if u != nil {
		shcc.SetAlarmTimes(*u)
	}
	return shcc
}

// SetStatsTime sets the "stats_time" field.
func (shcc *StatsHourlyCarCreate) SetStatsTime(t time.Time) *StatsHourlyCarCreate {
	shcc.mutation.SetStatsTime(t)
	return shcc
}

// SetCreateTime sets the "create_time" field.
func (shcc *StatsHourlyCarCreate) SetCreateTime(t time.Time) *StatsHourlyCarCreate {
	shcc.mutation.SetCreateTime(t)
	return shcc
}

// SetNillableCreateTime sets the "create_time" field if the given value is not nil.
func (shcc *StatsHourlyCarCreate) SetNillableCreateTime(t *time.Time) *StatsHourlyCarCreate {
	if t != nil {
		shcc.SetCreateTime(*t)
	}
	return shcc
}

// SetID sets the "id" field.
func (shcc *StatsHourlyCarCreate) SetID(i int) *StatsHourlyCarCreate {
	shcc.mutation.SetID(i)
	return shcc
}

// SetBackgroundScenicAreaID sets the "background_scenic_area" edge to the ScenicArea entity by ID.
func (shcc *StatsHourlyCarCreate) SetBackgroundScenicAreaID(id int) *StatsHourlyCarCreate {
	shcc.mutation.SetBackgroundScenicAreaID(id)
	return shcc
}

// SetBackgroundScenicArea sets the "background_scenic_area" edge to the ScenicArea entity.
func (shcc *StatsHourlyCarCreate) SetBackgroundScenicArea(s *ScenicArea) *StatsHourlyCarCreate {
	return shcc.SetBackgroundScenicAreaID(s.ID)
}

// SetCar sets the "car" edge to the Car entity.
func (shcc *StatsHourlyCarCreate) SetCar(c *Car) *StatsHourlyCarCreate {
	return shcc.SetCarID(c.ID)
}

// Mutation returns the StatsHourlyCarMutation object of the builder.
func (shcc *StatsHourlyCarCreate) Mutation() *StatsHourlyCarMutation {
	return shcc.mutation
}

// Save creates the StatsHourlyCar in the database.
func (shcc *StatsHourlyCarCreate) Save(ctx context.Context) (*StatsHourlyCar, error) {
	shcc.defaults()
	return withHooks(ctx, shcc.sqlSave, shcc.mutation, shcc.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (shcc *StatsHourlyCarCreate) SaveX(ctx context.Context) *StatsHourlyCar {
	v, err := shcc.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (shcc *StatsHourlyCarCreate) Exec(ctx context.Context) error {
	_, err := shcc.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (shcc *StatsHourlyCarCreate) ExecX(ctx context.Context) {
	if err := shcc.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (shcc *StatsHourlyCarCreate) defaults() {
	if _, ok := shcc.mutation.OrderCountCreate(); !ok {
		v := statshourlycar.DefaultOrderCountCreate
		shcc.mutation.SetOrderCountCreate(v)
	}
	if _, ok := shcc.mutation.OrderCountFinish(); !ok {
		v := statshourlycar.DefaultOrderCountFinish
		shcc.mutation.SetOrderCountFinish(v)
	}
	if _, ok := shcc.mutation.OrderCountCancel(); !ok {
		v := statshourlycar.DefaultOrderCountCancel
		shcc.mutation.SetOrderCountCancel(v)
	}
	if _, ok := shcc.mutation.OrderAmount(); !ok {
		v := statshourlycar.DefaultOrderAmount
		shcc.mutation.SetOrderAmount(v)
	}
	if _, ok := shcc.mutation.OrderDuration(); !ok {
		v := statshourlycar.DefaultOrderDuration
		shcc.mutation.SetOrderDuration(v)
	}
	if _, ok := shcc.mutation.OrderMileage(); !ok {
		v := statshourlycar.DefaultOrderMileage
		shcc.mutation.SetOrderMileage(v)
	}
	if _, ok := shcc.mutation.OrderScore(); !ok {
		v := statshourlycar.DefaultOrderScore
		shcc.mutation.SetOrderScore(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationLockDuration(); !ok {
		v := statshourlycar.DefaultCumulativeOperationLockDuration
		shcc.mutation.SetCumulativeOperationLockDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationManualDuration(); !ok {
		v := statshourlycar.DefaultCumulativeOperationManualDuration
		shcc.mutation.SetCumulativeOperationManualDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationAutoDuration(); !ok {
		v := statshourlycar.DefaultCumulativeOperationAutoDuration
		shcc.mutation.SetCumulativeOperationAutoDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationFaultDuration(); !ok {
		v := statshourlycar.DefaultCumulativeOperationFaultDuration
		shcc.mutation.SetCumulativeOperationFaultDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationLockTimes(); !ok {
		v := statshourlycar.DefaultCumulativeOperationLockTimes
		shcc.mutation.SetCumulativeOperationLockTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationManualTimes(); !ok {
		v := statshourlycar.DefaultCumulativeOperationManualTimes
		shcc.mutation.SetCumulativeOperationManualTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationAutoTimes(); !ok {
		v := statshourlycar.DefaultCumulativeOperationAutoTimes
		shcc.mutation.SetCumulativeOperationAutoTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationFaultTimes(); !ok {
		v := statshourlycar.DefaultCumulativeOperationFaultTimes
		shcc.mutation.SetCumulativeOperationFaultTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationManualMileage(); !ok {
		v := statshourlycar.DefaultCumulativeOperationManualMileage
		shcc.mutation.SetCumulativeOperationManualMileage(v)
	}
	if _, ok := shcc.mutation.CumulativeOperationAutoMileage(); !ok {
		v := statshourlycar.DefaultCumulativeOperationAutoMileage
		shcc.mutation.SetCumulativeOperationAutoMileage(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainLockDuration(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainLockDuration
		shcc.mutation.SetCumulativeMaintainLockDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainManualDuration(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainManualDuration
		shcc.mutation.SetCumulativeMaintainManualDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainAutoDuration(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainAutoDuration
		shcc.mutation.SetCumulativeMaintainAutoDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainRemoteDuration(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainRemoteDuration
		shcc.mutation.SetCumulativeMaintainRemoteDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainFaultDuration(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainFaultDuration
		shcc.mutation.SetCumulativeMaintainFaultDuration(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainLockTimes(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainLockTimes
		shcc.mutation.SetCumulativeMaintainLockTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainManualTimes(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainManualTimes
		shcc.mutation.SetCumulativeMaintainManualTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainAutoTimes(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainAutoTimes
		shcc.mutation.SetCumulativeMaintainAutoTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainRemoteTimes(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainRemoteTimes
		shcc.mutation.SetCumulativeMaintainRemoteTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainFaultTimes(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainFaultTimes
		shcc.mutation.SetCumulativeMaintainFaultTimes(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainManualMileage(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainManualMileage
		shcc.mutation.SetCumulativeMaintainManualMileage(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainAutoMileage(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainAutoMileage
		shcc.mutation.SetCumulativeMaintainAutoMileage(v)
	}
	if _, ok := shcc.mutation.CumulativeMaintainRemoteMileage(); !ok {
		v := statshourlycar.DefaultCumulativeMaintainRemoteMileage
		shcc.mutation.SetCumulativeMaintainRemoteMileage(v)
	}
	if _, ok := shcc.mutation.CumulativeAlarmTimes(); !ok {
		v := statshourlycar.DefaultCumulativeAlarmTimes
		shcc.mutation.SetCumulativeAlarmTimes(v)
	}
	if _, ok := shcc.mutation.OperationLockDuration(); !ok {
		v := statshourlycar.DefaultOperationLockDuration
		shcc.mutation.SetOperationLockDuration(v)
	}
	if _, ok := shcc.mutation.OperationManualDuration(); !ok {
		v := statshourlycar.DefaultOperationManualDuration
		shcc.mutation.SetOperationManualDuration(v)
	}
	if _, ok := shcc.mutation.OperationAutoDuration(); !ok {
		v := statshourlycar.DefaultOperationAutoDuration
		shcc.mutation.SetOperationAutoDuration(v)
	}
	if _, ok := shcc.mutation.OperationFaultDuration(); !ok {
		v := statshourlycar.DefaultOperationFaultDuration
		shcc.mutation.SetOperationFaultDuration(v)
	}
	if _, ok := shcc.mutation.OperationLockTimes(); !ok {
		v := statshourlycar.DefaultOperationLockTimes
		shcc.mutation.SetOperationLockTimes(v)
	}
	if _, ok := shcc.mutation.OperationManualTimes(); !ok {
		v := statshourlycar.DefaultOperationManualTimes
		shcc.mutation.SetOperationManualTimes(v)
	}
	if _, ok := shcc.mutation.OperationAutoTimes(); !ok {
		v := statshourlycar.DefaultOperationAutoTimes
		shcc.mutation.SetOperationAutoTimes(v)
	}
	if _, ok := shcc.mutation.OperationFaultTimes(); !ok {
		v := statshourlycar.DefaultOperationFaultTimes
		shcc.mutation.SetOperationFaultTimes(v)
	}
	if _, ok := shcc.mutation.OperationManualMileage(); !ok {
		v := statshourlycar.DefaultOperationManualMileage
		shcc.mutation.SetOperationManualMileage(v)
	}
	if _, ok := shcc.mutation.OperationAutoMileage(); !ok {
		v := statshourlycar.DefaultOperationAutoMileage
		shcc.mutation.SetOperationAutoMileage(v)
	}
	if _, ok := shcc.mutation.MaintainLockDuration(); !ok {
		v := statshourlycar.DefaultMaintainLockDuration
		shcc.mutation.SetMaintainLockDuration(v)
	}
	if _, ok := shcc.mutation.MaintainManualDuration(); !ok {
		v := statshourlycar.DefaultMaintainManualDuration
		shcc.mutation.SetMaintainManualDuration(v)
	}
	if _, ok := shcc.mutation.MaintainAutoDuration(); !ok {
		v := statshourlycar.DefaultMaintainAutoDuration
		shcc.mutation.SetMaintainAutoDuration(v)
	}
	if _, ok := shcc.mutation.MaintainRemoteDuration(); !ok {
		v := statshourlycar.DefaultMaintainRemoteDuration
		shcc.mutation.SetMaintainRemoteDuration(v)
	}
	if _, ok := shcc.mutation.MaintainFaultDuration(); !ok {
		v := statshourlycar.DefaultMaintainFaultDuration
		shcc.mutation.SetMaintainFaultDuration(v)
	}
	if _, ok := shcc.mutation.MaintainLockTimes(); !ok {
		v := statshourlycar.DefaultMaintainLockTimes
		shcc.mutation.SetMaintainLockTimes(v)
	}
	if _, ok := shcc.mutation.MaintainManualTimes(); !ok {
		v := statshourlycar.DefaultMaintainManualTimes
		shcc.mutation.SetMaintainManualTimes(v)
	}
	if _, ok := shcc.mutation.MaintainAutoTimes(); !ok {
		v := statshourlycar.DefaultMaintainAutoTimes
		shcc.mutation.SetMaintainAutoTimes(v)
	}
	if _, ok := shcc.mutation.MaintainRemoteTimes(); !ok {
		v := statshourlycar.DefaultMaintainRemoteTimes
		shcc.mutation.SetMaintainRemoteTimes(v)
	}
	if _, ok := shcc.mutation.MaintainFaultTimes(); !ok {
		v := statshourlycar.DefaultMaintainFaultTimes
		shcc.mutation.SetMaintainFaultTimes(v)
	}
	if _, ok := shcc.mutation.MaintainManualMileage(); !ok {
		v := statshourlycar.DefaultMaintainManualMileage
		shcc.mutation.SetMaintainManualMileage(v)
	}
	if _, ok := shcc.mutation.MaintainAutoMileage(); !ok {
		v := statshourlycar.DefaultMaintainAutoMileage
		shcc.mutation.SetMaintainAutoMileage(v)
	}
	if _, ok := shcc.mutation.MaintainRemoteMileage(); !ok {
		v := statshourlycar.DefaultMaintainRemoteMileage
		shcc.mutation.SetMaintainRemoteMileage(v)
	}
	if _, ok := shcc.mutation.AlarmTimes(); !ok {
		v := statshourlycar.DefaultAlarmTimes
		shcc.mutation.SetAlarmTimes(v)
	}
	if _, ok := shcc.mutation.CreateTime(); !ok {
		v := statshourlycar.DefaultCreateTime()
		shcc.mutation.SetCreateTime(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (shcc *StatsHourlyCarCreate) check() error {
	if _, ok := shcc.mutation.ScenicAreaID(); !ok {
		return &ValidationError{Name: "scenic_area_id", err: errors.New(`ent: missing required field "StatsHourlyCar.scenic_area_id"`)}
	}
	if _, ok := shcc.mutation.CarID(); !ok {
		return &ValidationError{Name: "car_id", err: errors.New(`ent: missing required field "StatsHourlyCar.car_id"`)}
	}
	if _, ok := shcc.mutation.Y(); !ok {
		return &ValidationError{Name: "y", err: errors.New(`ent: missing required field "StatsHourlyCar.y"`)}
	}
	if _, ok := shcc.mutation.M(); !ok {
		return &ValidationError{Name: "m", err: errors.New(`ent: missing required field "StatsHourlyCar.m"`)}
	}
	if _, ok := shcc.mutation.D(); !ok {
		return &ValidationError{Name: "d", err: errors.New(`ent: missing required field "StatsHourlyCar.d"`)}
	}
	if _, ok := shcc.mutation.H(); !ok {
		return &ValidationError{Name: "h", err: errors.New(`ent: missing required field "StatsHourlyCar.h"`)}
	}
	if _, ok := shcc.mutation.Week(); !ok {
		return &ValidationError{Name: "week", err: errors.New(`ent: missing required field "StatsHourlyCar.week"`)}
	}
	if _, ok := shcc.mutation.Weekday(); !ok {
		return &ValidationError{Name: "weekday", err: errors.New(`ent: missing required field "StatsHourlyCar.weekday"`)}
	}
	if _, ok := shcc.mutation.Period(); !ok {
		return &ValidationError{Name: "period", err: errors.New(`ent: missing required field "StatsHourlyCar.period"`)}
	}
	if _, ok := shcc.mutation.OrderCountCreate(); !ok {
		return &ValidationError{Name: "order_count_create", err: errors.New(`ent: missing required field "StatsHourlyCar.order_count_create"`)}
	}
	if _, ok := shcc.mutation.OrderCountFinish(); !ok {
		return &ValidationError{Name: "order_count_finish", err: errors.New(`ent: missing required field "StatsHourlyCar.order_count_finish"`)}
	}
	if _, ok := shcc.mutation.OrderCountCancel(); !ok {
		return &ValidationError{Name: "order_count_cancel", err: errors.New(`ent: missing required field "StatsHourlyCar.order_count_cancel"`)}
	}
	if _, ok := shcc.mutation.OrderAmount(); !ok {
		return &ValidationError{Name: "order_amount", err: errors.New(`ent: missing required field "StatsHourlyCar.order_amount"`)}
	}
	if _, ok := shcc.mutation.OrderDuration(); !ok {
		return &ValidationError{Name: "order_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.order_duration"`)}
	}
	if _, ok := shcc.mutation.OrderMileage(); !ok {
		return &ValidationError{Name: "order_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.order_mileage"`)}
	}
	if _, ok := shcc.mutation.OrderScore(); !ok {
		return &ValidationError{Name: "order_score", err: errors.New(`ent: missing required field "StatsHourlyCar.order_score"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationLockDuration(); !ok {
		return &ValidationError{Name: "cumulative_operation_lock_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_lock_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationManualDuration(); !ok {
		return &ValidationError{Name: "cumulative_operation_manual_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_manual_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationAutoDuration(); !ok {
		return &ValidationError{Name: "cumulative_operation_auto_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_auto_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationFaultDuration(); !ok {
		return &ValidationError{Name: "cumulative_operation_fault_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_fault_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationLockTimes(); !ok {
		return &ValidationError{Name: "cumulative_operation_lock_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_lock_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationManualTimes(); !ok {
		return &ValidationError{Name: "cumulative_operation_manual_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_manual_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationAutoTimes(); !ok {
		return &ValidationError{Name: "cumulative_operation_auto_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_auto_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationFaultTimes(); !ok {
		return &ValidationError{Name: "cumulative_operation_fault_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_fault_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationManualMileage(); !ok {
		return &ValidationError{Name: "cumulative_operation_manual_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_manual_mileage"`)}
	}
	if _, ok := shcc.mutation.CumulativeOperationAutoMileage(); !ok {
		return &ValidationError{Name: "cumulative_operation_auto_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_operation_auto_mileage"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainLockDuration(); !ok {
		return &ValidationError{Name: "cumulative_maintain_lock_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_lock_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainManualDuration(); !ok {
		return &ValidationError{Name: "cumulative_maintain_manual_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_manual_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainAutoDuration(); !ok {
		return &ValidationError{Name: "cumulative_maintain_auto_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_auto_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainRemoteDuration(); !ok {
		return &ValidationError{Name: "cumulative_maintain_remote_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_remote_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainFaultDuration(); !ok {
		return &ValidationError{Name: "cumulative_maintain_fault_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_fault_duration"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainLockTimes(); !ok {
		return &ValidationError{Name: "cumulative_maintain_lock_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_lock_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainManualTimes(); !ok {
		return &ValidationError{Name: "cumulative_maintain_manual_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_manual_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainAutoTimes(); !ok {
		return &ValidationError{Name: "cumulative_maintain_auto_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_auto_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainRemoteTimes(); !ok {
		return &ValidationError{Name: "cumulative_maintain_remote_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_remote_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainFaultTimes(); !ok {
		return &ValidationError{Name: "cumulative_maintain_fault_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_fault_times"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainManualMileage(); !ok {
		return &ValidationError{Name: "cumulative_maintain_manual_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_manual_mileage"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainAutoMileage(); !ok {
		return &ValidationError{Name: "cumulative_maintain_auto_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_auto_mileage"`)}
	}
	if _, ok := shcc.mutation.CumulativeMaintainRemoteMileage(); !ok {
		return &ValidationError{Name: "cumulative_maintain_remote_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_maintain_remote_mileage"`)}
	}
	if _, ok := shcc.mutation.CumulativeAlarmTimes(); !ok {
		return &ValidationError{Name: "cumulative_alarm_times", err: errors.New(`ent: missing required field "StatsHourlyCar.cumulative_alarm_times"`)}
	}
	if _, ok := shcc.mutation.OperationLockDuration(); !ok {
		return &ValidationError{Name: "operation_lock_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_lock_duration"`)}
	}
	if _, ok := shcc.mutation.OperationManualDuration(); !ok {
		return &ValidationError{Name: "operation_manual_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_manual_duration"`)}
	}
	if _, ok := shcc.mutation.OperationAutoDuration(); !ok {
		return &ValidationError{Name: "operation_auto_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_auto_duration"`)}
	}
	if _, ok := shcc.mutation.OperationFaultDuration(); !ok {
		return &ValidationError{Name: "operation_fault_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_fault_duration"`)}
	}
	if _, ok := shcc.mutation.OperationLockTimes(); !ok {
		return &ValidationError{Name: "operation_lock_times", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_lock_times"`)}
	}
	if _, ok := shcc.mutation.OperationManualTimes(); !ok {
		return &ValidationError{Name: "operation_manual_times", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_manual_times"`)}
	}
	if _, ok := shcc.mutation.OperationAutoTimes(); !ok {
		return &ValidationError{Name: "operation_auto_times", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_auto_times"`)}
	}
	if _, ok := shcc.mutation.OperationFaultTimes(); !ok {
		return &ValidationError{Name: "operation_fault_times", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_fault_times"`)}
	}
	if _, ok := shcc.mutation.OperationManualMileage(); !ok {
		return &ValidationError{Name: "operation_manual_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_manual_mileage"`)}
	}
	if _, ok := shcc.mutation.OperationAutoMileage(); !ok {
		return &ValidationError{Name: "operation_auto_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.operation_auto_mileage"`)}
	}
	if _, ok := shcc.mutation.MaintainLockDuration(); !ok {
		return &ValidationError{Name: "maintain_lock_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_lock_duration"`)}
	}
	if _, ok := shcc.mutation.MaintainManualDuration(); !ok {
		return &ValidationError{Name: "maintain_manual_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_manual_duration"`)}
	}
	if _, ok := shcc.mutation.MaintainAutoDuration(); !ok {
		return &ValidationError{Name: "maintain_auto_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_auto_duration"`)}
	}
	if _, ok := shcc.mutation.MaintainRemoteDuration(); !ok {
		return &ValidationError{Name: "maintain_remote_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_remote_duration"`)}
	}
	if _, ok := shcc.mutation.MaintainFaultDuration(); !ok {
		return &ValidationError{Name: "maintain_fault_duration", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_fault_duration"`)}
	}
	if _, ok := shcc.mutation.MaintainLockTimes(); !ok {
		return &ValidationError{Name: "maintain_lock_times", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_lock_times"`)}
	}
	if _, ok := shcc.mutation.MaintainManualTimes(); !ok {
		return &ValidationError{Name: "maintain_manual_times", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_manual_times"`)}
	}
	if _, ok := shcc.mutation.MaintainAutoTimes(); !ok {
		return &ValidationError{Name: "maintain_auto_times", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_auto_times"`)}
	}
	if _, ok := shcc.mutation.MaintainRemoteTimes(); !ok {
		return &ValidationError{Name: "maintain_remote_times", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_remote_times"`)}
	}
	if _, ok := shcc.mutation.MaintainFaultTimes(); !ok {
		return &ValidationError{Name: "maintain_fault_times", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_fault_times"`)}
	}
	if _, ok := shcc.mutation.MaintainManualMileage(); !ok {
		return &ValidationError{Name: "maintain_manual_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_manual_mileage"`)}
	}
	if _, ok := shcc.mutation.MaintainAutoMileage(); !ok {
		return &ValidationError{Name: "maintain_auto_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_auto_mileage"`)}
	}
	if _, ok := shcc.mutation.MaintainRemoteMileage(); !ok {
		return &ValidationError{Name: "maintain_remote_mileage", err: errors.New(`ent: missing required field "StatsHourlyCar.maintain_remote_mileage"`)}
	}
	if _, ok := shcc.mutation.AlarmTimes(); !ok {
		return &ValidationError{Name: "alarm_times", err: errors.New(`ent: missing required field "StatsHourlyCar.alarm_times"`)}
	}
	if _, ok := shcc.mutation.StatsTime(); !ok {
		return &ValidationError{Name: "stats_time", err: errors.New(`ent: missing required field "StatsHourlyCar.stats_time"`)}
	}
	if _, ok := shcc.mutation.CreateTime(); !ok {
		return &ValidationError{Name: "create_time", err: errors.New(`ent: missing required field "StatsHourlyCar.create_time"`)}
	}
	if len(shcc.mutation.BackgroundScenicAreaIDs()) == 0 {
		return &ValidationError{Name: "background_scenic_area", err: errors.New(`ent: missing required edge "StatsHourlyCar.background_scenic_area"`)}
	}
	if len(shcc.mutation.CarIDs()) == 0 {
		return &ValidationError{Name: "car", err: errors.New(`ent: missing required edge "StatsHourlyCar.car"`)}
	}
	return nil
}

func (shcc *StatsHourlyCarCreate) sqlSave(ctx context.Context) (*StatsHourlyCar, error) {
	if err := shcc.check(); err != nil {
		return nil, err
	}
	_node, _spec := shcc.createSpec()
	if err := sqlgraph.CreateNode(ctx, shcc.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != _node.ID {
		id := _spec.ID.Value.(int64)
		_node.ID = int(id)
	}
	shcc.mutation.id = &_node.ID
	shcc.mutation.done = true
	return _node, nil
}

func (shcc *StatsHourlyCarCreate) createSpec() (*StatsHourlyCar, *sqlgraph.CreateSpec) {
	var (
		_node = &StatsHourlyCar{config: shcc.config}
		_spec = sqlgraph.NewCreateSpec(statshourlycar.Table, sqlgraph.NewFieldSpec(statshourlycar.FieldID, field.TypeInt))
	)
	if id, ok := shcc.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = id
	}
	if value, ok := shcc.mutation.Y(); ok {
		_spec.SetField(statshourlycar.FieldY, field.TypeInt, value)
		_node.Y = value
	}
	if value, ok := shcc.mutation.M(); ok {
		_spec.SetField(statshourlycar.FieldM, field.TypeInt, value)
		_node.M = value
	}
	if value, ok := shcc.mutation.D(); ok {
		_spec.SetField(statshourlycar.FieldD, field.TypeInt, value)
		_node.D = value
	}
	if value, ok := shcc.mutation.H(); ok {
		_spec.SetField(statshourlycar.FieldH, field.TypeInt, value)
		_node.H = value
	}
	if value, ok := shcc.mutation.Week(); ok {
		_spec.SetField(statshourlycar.FieldWeek, field.TypeInt, value)
		_node.Week = value
	}
	if value, ok := shcc.mutation.Weekday(); ok {
		_spec.SetField(statshourlycar.FieldWeekday, field.TypeInt, value)
		_node.Weekday = value
	}
	if value, ok := shcc.mutation.Period(); ok {
		_spec.SetField(statshourlycar.FieldPeriod, field.TypeInt, value)
		_node.Period = value
	}
	if value, ok := shcc.mutation.OrderCountCreate(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountCreate, field.TypeInt, value)
		_node.OrderCountCreate = value
	}
	if value, ok := shcc.mutation.OrderCountFinish(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountFinish, field.TypeInt, value)
		_node.OrderCountFinish = value
	}
	if value, ok := shcc.mutation.OrderCountCancel(); ok {
		_spec.SetField(statshourlycar.FieldOrderCountCancel, field.TypeInt, value)
		_node.OrderCountCancel = value
	}
	if value, ok := shcc.mutation.OrderAmount(); ok {
		_spec.SetField(statshourlycar.FieldOrderAmount, field.TypeInt, value)
		_node.OrderAmount = value
	}
	if value, ok := shcc.mutation.OrderDuration(); ok {
		_spec.SetField(statshourlycar.FieldOrderDuration, field.TypeInt, value)
		_node.OrderDuration = value
	}
	if value, ok := shcc.mutation.OrderMileage(); ok {
		_spec.SetField(statshourlycar.FieldOrderMileage, field.TypeInt, value)
		_node.OrderMileage = value
	}
	if value, ok := shcc.mutation.OrderScore(); ok {
		_spec.SetField(statshourlycar.FieldOrderScore, field.TypeInt, value)
		_node.OrderScore = value
	}
	if value, ok := shcc.mutation.CumulativeOperationLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationLockDuration, field.TypeFloat32, value)
		_node.CumulativeOperationLockDuration = value
	}
	if value, ok := shcc.mutation.CumulativeOperationManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualDuration, field.TypeFloat32, value)
		_node.CumulativeOperationManualDuration = value
	}
	if value, ok := shcc.mutation.CumulativeOperationAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoDuration, field.TypeFloat32, value)
		_node.CumulativeOperationAutoDuration = value
	}
	if value, ok := shcc.mutation.CumulativeOperationFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationFaultDuration, field.TypeFloat32, value)
		_node.CumulativeOperationFaultDuration = value
	}
	if value, ok := shcc.mutation.CumulativeOperationLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationLockTimes, field.TypeUint32, value)
		_node.CumulativeOperationLockTimes = value
	}
	if value, ok := shcc.mutation.CumulativeOperationManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualTimes, field.TypeUint32, value)
		_node.CumulativeOperationManualTimes = value
	}
	if value, ok := shcc.mutation.CumulativeOperationAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoTimes, field.TypeUint32, value)
		_node.CumulativeOperationAutoTimes = value
	}
	if value, ok := shcc.mutation.CumulativeOperationFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationFaultTimes, field.TypeUint32, value)
		_node.CumulativeOperationFaultTimes = value
	}
	if value, ok := shcc.mutation.CumulativeOperationManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationManualMileage, field.TypeFloat32, value)
		_node.CumulativeOperationManualMileage = value
	}
	if value, ok := shcc.mutation.CumulativeOperationAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeOperationAutoMileage, field.TypeFloat32, value)
		_node.CumulativeOperationAutoMileage = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainLockDuration, field.TypeFloat32, value)
		_node.CumulativeMaintainLockDuration = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualDuration, field.TypeFloat32, value)
		_node.CumulativeMaintainManualDuration = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoDuration, field.TypeFloat32, value)
		_node.CumulativeMaintainAutoDuration = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainRemoteDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteDuration, field.TypeFloat32, value)
		_node.CumulativeMaintainRemoteDuration = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainFaultDuration, field.TypeFloat32, value)
		_node.CumulativeMaintainFaultDuration = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainLockTimes, field.TypeUint32, value)
		_node.CumulativeMaintainLockTimes = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualTimes, field.TypeUint32, value)
		_node.CumulativeMaintainManualTimes = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoTimes, field.TypeUint32, value)
		_node.CumulativeMaintainAutoTimes = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainRemoteTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteTimes, field.TypeUint32, value)
		_node.CumulativeMaintainRemoteTimes = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainFaultTimes, field.TypeUint32, value)
		_node.CumulativeMaintainFaultTimes = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainManualMileage, field.TypeFloat32, value)
		_node.CumulativeMaintainManualMileage = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainAutoMileage, field.TypeFloat32, value)
		_node.CumulativeMaintainAutoMileage = value
	}
	if value, ok := shcc.mutation.CumulativeMaintainRemoteMileage(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeMaintainRemoteMileage, field.TypeFloat32, value)
		_node.CumulativeMaintainRemoteMileage = value
	}
	if value, ok := shcc.mutation.CumulativeAlarmTimes(); ok {
		_spec.SetField(statshourlycar.FieldCumulativeAlarmTimes, field.TypeUint32, value)
		_node.CumulativeAlarmTimes = value
	}
	if value, ok := shcc.mutation.OperationLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationLockDuration, field.TypeFloat32, value)
		_node.OperationLockDuration = value
	}
	if value, ok := shcc.mutation.OperationManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualDuration, field.TypeFloat32, value)
		_node.OperationManualDuration = value
	}
	if value, ok := shcc.mutation.OperationAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoDuration, field.TypeFloat32, value)
		_node.OperationAutoDuration = value
	}
	if value, ok := shcc.mutation.OperationFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldOperationFaultDuration, field.TypeFloat32, value)
		_node.OperationFaultDuration = value
	}
	if value, ok := shcc.mutation.OperationLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationLockTimes, field.TypeUint32, value)
		_node.OperationLockTimes = value
	}
	if value, ok := shcc.mutation.OperationManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualTimes, field.TypeUint32, value)
		_node.OperationManualTimes = value
	}
	if value, ok := shcc.mutation.OperationAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoTimes, field.TypeUint32, value)
		_node.OperationAutoTimes = value
	}
	if value, ok := shcc.mutation.OperationFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldOperationFaultTimes, field.TypeUint32, value)
		_node.OperationFaultTimes = value
	}
	if value, ok := shcc.mutation.OperationManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldOperationManualMileage, field.TypeFloat32, value)
		_node.OperationManualMileage = value
	}
	if value, ok := shcc.mutation.OperationAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldOperationAutoMileage, field.TypeFloat32, value)
		_node.OperationAutoMileage = value
	}
	if value, ok := shcc.mutation.MaintainLockDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainLockDuration, field.TypeFloat32, value)
		_node.MaintainLockDuration = value
	}
	if value, ok := shcc.mutation.MaintainManualDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualDuration, field.TypeFloat32, value)
		_node.MaintainManualDuration = value
	}
	if value, ok := shcc.mutation.MaintainAutoDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoDuration, field.TypeFloat32, value)
		_node.MaintainAutoDuration = value
	}
	if value, ok := shcc.mutation.MaintainRemoteDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteDuration, field.TypeFloat32, value)
		_node.MaintainRemoteDuration = value
	}
	if value, ok := shcc.mutation.MaintainFaultDuration(); ok {
		_spec.SetField(statshourlycar.FieldMaintainFaultDuration, field.TypeFloat32, value)
		_node.MaintainFaultDuration = value
	}
	if value, ok := shcc.mutation.MaintainLockTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainLockTimes, field.TypeUint32, value)
		_node.MaintainLockTimes = value
	}
	if value, ok := shcc.mutation.MaintainManualTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualTimes, field.TypeUint32, value)
		_node.MaintainManualTimes = value
	}
	if value, ok := shcc.mutation.MaintainAutoTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoTimes, field.TypeUint32, value)
		_node.MaintainAutoTimes = value
	}
	if value, ok := shcc.mutation.MaintainRemoteTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteTimes, field.TypeUint32, value)
		_node.MaintainRemoteTimes = value
	}
	if value, ok := shcc.mutation.MaintainFaultTimes(); ok {
		_spec.SetField(statshourlycar.FieldMaintainFaultTimes, field.TypeUint32, value)
		_node.MaintainFaultTimes = value
	}
	if value, ok := shcc.mutation.MaintainManualMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainManualMileage, field.TypeFloat32, value)
		_node.MaintainManualMileage = value
	}
	if value, ok := shcc.mutation.MaintainAutoMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainAutoMileage, field.TypeFloat32, value)
		_node.MaintainAutoMileage = value
	}
	if value, ok := shcc.mutation.MaintainRemoteMileage(); ok {
		_spec.SetField(statshourlycar.FieldMaintainRemoteMileage, field.TypeFloat32, value)
		_node.MaintainRemoteMileage = value
	}
	if value, ok := shcc.mutation.AlarmTimes(); ok {
		_spec.SetField(statshourlycar.FieldAlarmTimes, field.TypeUint32, value)
		_node.AlarmTimes = value
	}
	if value, ok := shcc.mutation.StatsTime(); ok {
		_spec.SetField(statshourlycar.FieldStatsTime, field.TypeTime, value)
		_node.StatsTime = value
	}
	if value, ok := shcc.mutation.CreateTime(); ok {
		_spec.SetField(statshourlycar.FieldCreateTime, field.TypeTime, value)
		_node.CreateTime = value
	}
	if nodes := shcc.mutation.BackgroundScenicAreaIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.BackgroundScenicAreaTable,
			Columns: []string{statshourlycar.BackgroundScenicAreaColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(scenicarea.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.ScenicAreaID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := shcc.mutation.CarIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   statshourlycar.CarTable,
			Columns: []string{statshourlycar.CarColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(car.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.CarID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// StatsHourlyCarCreateBulk is the builder for creating many StatsHourlyCar entities in bulk.
type StatsHourlyCarCreateBulk struct {
	config
	err      error
	builders []*StatsHourlyCarCreate
}

// Save creates the StatsHourlyCar entities in the database.
func (shccb *StatsHourlyCarCreateBulk) Save(ctx context.Context) ([]*StatsHourlyCar, error) {
	if shccb.err != nil {
		return nil, shccb.err
	}
	specs := make([]*sqlgraph.CreateSpec, len(shccb.builders))
	nodes := make([]*StatsHourlyCar, len(shccb.builders))
	mutators := make([]Mutator, len(shccb.builders))
	for i := range shccb.builders {
		func(i int, root context.Context) {
			builder := shccb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*StatsHourlyCarMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, shccb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, shccb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				if specs[i].ID.Value != nil && nodes[i].ID == 0 {
					id := specs[i].ID.Value.(int64)
					nodes[i].ID = int(id)
				}
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, shccb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (shccb *StatsHourlyCarCreateBulk) SaveX(ctx context.Context) []*StatsHourlyCar {
	v, err := shccb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (shccb *StatsHourlyCarCreateBulk) Exec(ctx context.Context) error {
	_, err := shccb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (shccb *StatsHourlyCarCreateBulk) ExecX(ctx context.Context) {
	if err := shccb.Exec(ctx); err != nil {
		panic(err)
	}
}
