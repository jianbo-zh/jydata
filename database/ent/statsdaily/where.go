// Code generated by ent, DO NOT EDIT.

package statsdaily

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldID, id))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldScenicAreaID, v))
}

// Y applies equality check predicate on the "y" field. It's identical to YEQ.
func Y(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldY, v))
}

// Ym applies equality check predicate on the "ym" field. It's identical to YmEQ.
func Ym(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldYm, v))
}

// Ymd applies equality check predicate on the "ymd" field. It's identical to YmdEQ.
func Ymd(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldYmd, v))
}

// OrderAmount applies equality check predicate on the "order_amount" field. It's identical to OrderAmountEQ.
func OrderAmount(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderAmount, v))
}

// OrderCount applies equality check predicate on the "order_count" field. It's identical to OrderCountEQ.
func OrderCount(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderCount, v))
}

// OrderDuration applies equality check predicate on the "order_duration" field. It's identical to OrderDurationEQ.
func OrderDuration(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderDuration, v))
}

// OrderDistance applies equality check predicate on the "order_distance" field. It's identical to OrderDistanceEQ.
func OrderDistance(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderDistance, v))
}

// RegisterUserCount applies equality check predicate on the "register_user_count" field. It's identical to RegisterUserCountEQ.
func RegisterUserCount(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldRegisterUserCount, v))
}

// OrderUserCount applies equality check predicate on the "order_user_count" field. It's identical to OrderUserCountEQ.
func OrderUserCount(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderUserCount, v))
}

// OperationCarCount applies equality check predicate on the "operation_car_count" field. It's identical to OperationCarCountEQ.
func OperationCarCount(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOperationCarCount, v))
}

// OperationCarDuration applies equality check predicate on the "operation_car_duration" field. It's identical to OperationCarDurationEQ.
func OperationCarDuration(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOperationCarDuration, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldCreateTime, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDGT applies the GT predicate on the "scenic_area_id" field.
func ScenicAreaIDGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldScenicAreaID, v))
}

// ScenicAreaIDGTE applies the GTE predicate on the "scenic_area_id" field.
func ScenicAreaIDGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldScenicAreaID, v))
}

// ScenicAreaIDLT applies the LT predicate on the "scenic_area_id" field.
func ScenicAreaIDLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldScenicAreaID, v))
}

// ScenicAreaIDLTE applies the LTE predicate on the "scenic_area_id" field.
func ScenicAreaIDLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldScenicAreaID, v))
}

// YEQ applies the EQ predicate on the "y" field.
func YEQ(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldY, v))
}

// YNEQ applies the NEQ predicate on the "y" field.
func YNEQ(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldY, v))
}

// YIn applies the In predicate on the "y" field.
func YIn(vs ...string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldY, vs...))
}

// YNotIn applies the NotIn predicate on the "y" field.
func YNotIn(vs ...string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldY, vs...))
}

// YGT applies the GT predicate on the "y" field.
func YGT(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldY, v))
}

// YGTE applies the GTE predicate on the "y" field.
func YGTE(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldY, v))
}

// YLT applies the LT predicate on the "y" field.
func YLT(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldY, v))
}

// YLTE applies the LTE predicate on the "y" field.
func YLTE(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldY, v))
}

// YContains applies the Contains predicate on the "y" field.
func YContains(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldContains(FieldY, v))
}

// YHasPrefix applies the HasPrefix predicate on the "y" field.
func YHasPrefix(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldHasPrefix(FieldY, v))
}

// YHasSuffix applies the HasSuffix predicate on the "y" field.
func YHasSuffix(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldHasSuffix(FieldY, v))
}

// YEqualFold applies the EqualFold predicate on the "y" field.
func YEqualFold(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEqualFold(FieldY, v))
}

// YContainsFold applies the ContainsFold predicate on the "y" field.
func YContainsFold(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldContainsFold(FieldY, v))
}

// YmEQ applies the EQ predicate on the "ym" field.
func YmEQ(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldYm, v))
}

// YmNEQ applies the NEQ predicate on the "ym" field.
func YmNEQ(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldYm, v))
}

// YmIn applies the In predicate on the "ym" field.
func YmIn(vs ...string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldYm, vs...))
}

// YmNotIn applies the NotIn predicate on the "ym" field.
func YmNotIn(vs ...string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldYm, vs...))
}

// YmGT applies the GT predicate on the "ym" field.
func YmGT(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldYm, v))
}

// YmGTE applies the GTE predicate on the "ym" field.
func YmGTE(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldYm, v))
}

// YmLT applies the LT predicate on the "ym" field.
func YmLT(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldYm, v))
}

// YmLTE applies the LTE predicate on the "ym" field.
func YmLTE(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldYm, v))
}

// YmContains applies the Contains predicate on the "ym" field.
func YmContains(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldContains(FieldYm, v))
}

// YmHasPrefix applies the HasPrefix predicate on the "ym" field.
func YmHasPrefix(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldHasPrefix(FieldYm, v))
}

// YmHasSuffix applies the HasSuffix predicate on the "ym" field.
func YmHasSuffix(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldHasSuffix(FieldYm, v))
}

// YmEqualFold applies the EqualFold predicate on the "ym" field.
func YmEqualFold(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEqualFold(FieldYm, v))
}

// YmContainsFold applies the ContainsFold predicate on the "ym" field.
func YmContainsFold(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldContainsFold(FieldYm, v))
}

// YmdEQ applies the EQ predicate on the "ymd" field.
func YmdEQ(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldYmd, v))
}

// YmdNEQ applies the NEQ predicate on the "ymd" field.
func YmdNEQ(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldYmd, v))
}

// YmdIn applies the In predicate on the "ymd" field.
func YmdIn(vs ...string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldYmd, vs...))
}

// YmdNotIn applies the NotIn predicate on the "ymd" field.
func YmdNotIn(vs ...string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldYmd, vs...))
}

// YmdGT applies the GT predicate on the "ymd" field.
func YmdGT(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldYmd, v))
}

// YmdGTE applies the GTE predicate on the "ymd" field.
func YmdGTE(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldYmd, v))
}

// YmdLT applies the LT predicate on the "ymd" field.
func YmdLT(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldYmd, v))
}

// YmdLTE applies the LTE predicate on the "ymd" field.
func YmdLTE(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldYmd, v))
}

// YmdContains applies the Contains predicate on the "ymd" field.
func YmdContains(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldContains(FieldYmd, v))
}

// YmdHasPrefix applies the HasPrefix predicate on the "ymd" field.
func YmdHasPrefix(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldHasPrefix(FieldYmd, v))
}

// YmdHasSuffix applies the HasSuffix predicate on the "ymd" field.
func YmdHasSuffix(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldHasSuffix(FieldYmd, v))
}

// YmdEqualFold applies the EqualFold predicate on the "ymd" field.
func YmdEqualFold(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEqualFold(FieldYmd, v))
}

// YmdContainsFold applies the ContainsFold predicate on the "ymd" field.
func YmdContainsFold(v string) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldContainsFold(FieldYmd, v))
}

// OrderAmountEQ applies the EQ predicate on the "order_amount" field.
func OrderAmountEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderAmount, v))
}

// OrderAmountNEQ applies the NEQ predicate on the "order_amount" field.
func OrderAmountNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOrderAmount, v))
}

// OrderAmountIn applies the In predicate on the "order_amount" field.
func OrderAmountIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOrderAmount, vs...))
}

// OrderAmountNotIn applies the NotIn predicate on the "order_amount" field.
func OrderAmountNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOrderAmount, vs...))
}

// OrderAmountGT applies the GT predicate on the "order_amount" field.
func OrderAmountGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOrderAmount, v))
}

// OrderAmountGTE applies the GTE predicate on the "order_amount" field.
func OrderAmountGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOrderAmount, v))
}

// OrderAmountLT applies the LT predicate on the "order_amount" field.
func OrderAmountLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOrderAmount, v))
}

// OrderAmountLTE applies the LTE predicate on the "order_amount" field.
func OrderAmountLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOrderAmount, v))
}

// OrderCountEQ applies the EQ predicate on the "order_count" field.
func OrderCountEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderCount, v))
}

// OrderCountNEQ applies the NEQ predicate on the "order_count" field.
func OrderCountNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOrderCount, v))
}

// OrderCountIn applies the In predicate on the "order_count" field.
func OrderCountIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOrderCount, vs...))
}

// OrderCountNotIn applies the NotIn predicate on the "order_count" field.
func OrderCountNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOrderCount, vs...))
}

// OrderCountGT applies the GT predicate on the "order_count" field.
func OrderCountGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOrderCount, v))
}

// OrderCountGTE applies the GTE predicate on the "order_count" field.
func OrderCountGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOrderCount, v))
}

// OrderCountLT applies the LT predicate on the "order_count" field.
func OrderCountLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOrderCount, v))
}

// OrderCountLTE applies the LTE predicate on the "order_count" field.
func OrderCountLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOrderCount, v))
}

// OrderDurationEQ applies the EQ predicate on the "order_duration" field.
func OrderDurationEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderDuration, v))
}

// OrderDurationNEQ applies the NEQ predicate on the "order_duration" field.
func OrderDurationNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOrderDuration, v))
}

// OrderDurationIn applies the In predicate on the "order_duration" field.
func OrderDurationIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOrderDuration, vs...))
}

// OrderDurationNotIn applies the NotIn predicate on the "order_duration" field.
func OrderDurationNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOrderDuration, vs...))
}

// OrderDurationGT applies the GT predicate on the "order_duration" field.
func OrderDurationGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOrderDuration, v))
}

// OrderDurationGTE applies the GTE predicate on the "order_duration" field.
func OrderDurationGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOrderDuration, v))
}

// OrderDurationLT applies the LT predicate on the "order_duration" field.
func OrderDurationLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOrderDuration, v))
}

// OrderDurationLTE applies the LTE predicate on the "order_duration" field.
func OrderDurationLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOrderDuration, v))
}

// OrderDistanceEQ applies the EQ predicate on the "order_distance" field.
func OrderDistanceEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderDistance, v))
}

// OrderDistanceNEQ applies the NEQ predicate on the "order_distance" field.
func OrderDistanceNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOrderDistance, v))
}

// OrderDistanceIn applies the In predicate on the "order_distance" field.
func OrderDistanceIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOrderDistance, vs...))
}

// OrderDistanceNotIn applies the NotIn predicate on the "order_distance" field.
func OrderDistanceNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOrderDistance, vs...))
}

// OrderDistanceGT applies the GT predicate on the "order_distance" field.
func OrderDistanceGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOrderDistance, v))
}

// OrderDistanceGTE applies the GTE predicate on the "order_distance" field.
func OrderDistanceGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOrderDistance, v))
}

// OrderDistanceLT applies the LT predicate on the "order_distance" field.
func OrderDistanceLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOrderDistance, v))
}

// OrderDistanceLTE applies the LTE predicate on the "order_distance" field.
func OrderDistanceLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOrderDistance, v))
}

// RegisterUserCountEQ applies the EQ predicate on the "register_user_count" field.
func RegisterUserCountEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldRegisterUserCount, v))
}

// RegisterUserCountNEQ applies the NEQ predicate on the "register_user_count" field.
func RegisterUserCountNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldRegisterUserCount, v))
}

// RegisterUserCountIn applies the In predicate on the "register_user_count" field.
func RegisterUserCountIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldRegisterUserCount, vs...))
}

// RegisterUserCountNotIn applies the NotIn predicate on the "register_user_count" field.
func RegisterUserCountNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldRegisterUserCount, vs...))
}

// RegisterUserCountGT applies the GT predicate on the "register_user_count" field.
func RegisterUserCountGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldRegisterUserCount, v))
}

// RegisterUserCountGTE applies the GTE predicate on the "register_user_count" field.
func RegisterUserCountGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldRegisterUserCount, v))
}

// RegisterUserCountLT applies the LT predicate on the "register_user_count" field.
func RegisterUserCountLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldRegisterUserCount, v))
}

// RegisterUserCountLTE applies the LTE predicate on the "register_user_count" field.
func RegisterUserCountLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldRegisterUserCount, v))
}

// OrderUserCountEQ applies the EQ predicate on the "order_user_count" field.
func OrderUserCountEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOrderUserCount, v))
}

// OrderUserCountNEQ applies the NEQ predicate on the "order_user_count" field.
func OrderUserCountNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOrderUserCount, v))
}

// OrderUserCountIn applies the In predicate on the "order_user_count" field.
func OrderUserCountIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOrderUserCount, vs...))
}

// OrderUserCountNotIn applies the NotIn predicate on the "order_user_count" field.
func OrderUserCountNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOrderUserCount, vs...))
}

// OrderUserCountGT applies the GT predicate on the "order_user_count" field.
func OrderUserCountGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOrderUserCount, v))
}

// OrderUserCountGTE applies the GTE predicate on the "order_user_count" field.
func OrderUserCountGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOrderUserCount, v))
}

// OrderUserCountLT applies the LT predicate on the "order_user_count" field.
func OrderUserCountLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOrderUserCount, v))
}

// OrderUserCountLTE applies the LTE predicate on the "order_user_count" field.
func OrderUserCountLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOrderUserCount, v))
}

// OperationCarCountEQ applies the EQ predicate on the "operation_car_count" field.
func OperationCarCountEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOperationCarCount, v))
}

// OperationCarCountNEQ applies the NEQ predicate on the "operation_car_count" field.
func OperationCarCountNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOperationCarCount, v))
}

// OperationCarCountIn applies the In predicate on the "operation_car_count" field.
func OperationCarCountIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOperationCarCount, vs...))
}

// OperationCarCountNotIn applies the NotIn predicate on the "operation_car_count" field.
func OperationCarCountNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOperationCarCount, vs...))
}

// OperationCarCountGT applies the GT predicate on the "operation_car_count" field.
func OperationCarCountGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOperationCarCount, v))
}

// OperationCarCountGTE applies the GTE predicate on the "operation_car_count" field.
func OperationCarCountGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOperationCarCount, v))
}

// OperationCarCountLT applies the LT predicate on the "operation_car_count" field.
func OperationCarCountLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOperationCarCount, v))
}

// OperationCarCountLTE applies the LTE predicate on the "operation_car_count" field.
func OperationCarCountLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOperationCarCount, v))
}

// OperationCarDurationEQ applies the EQ predicate on the "operation_car_duration" field.
func OperationCarDurationEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldOperationCarDuration, v))
}

// OperationCarDurationNEQ applies the NEQ predicate on the "operation_car_duration" field.
func OperationCarDurationNEQ(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldOperationCarDuration, v))
}

// OperationCarDurationIn applies the In predicate on the "operation_car_duration" field.
func OperationCarDurationIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldOperationCarDuration, vs...))
}

// OperationCarDurationNotIn applies the NotIn predicate on the "operation_car_duration" field.
func OperationCarDurationNotIn(vs ...int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldOperationCarDuration, vs...))
}

// OperationCarDurationGT applies the GT predicate on the "operation_car_duration" field.
func OperationCarDurationGT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldOperationCarDuration, v))
}

// OperationCarDurationGTE applies the GTE predicate on the "operation_car_duration" field.
func OperationCarDurationGTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldOperationCarDuration, v))
}

// OperationCarDurationLT applies the LT predicate on the "operation_car_duration" field.
func OperationCarDurationLT(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldOperationCarDuration, v))
}

// OperationCarDurationLTE applies the LTE predicate on the "operation_car_duration" field.
func OperationCarDurationLTE(v int) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldOperationCarDuration, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.StatsDaily {
	return predicate.StatsDaily(sql.FieldLTE(FieldCreateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.StatsDaily) predicate.StatsDaily {
	return predicate.StatsDaily(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.StatsDaily) predicate.StatsDaily {
	return predicate.StatsDaily(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.StatsDaily) predicate.StatsDaily {
	return predicate.StatsDaily(sql.NotPredicates(p))
}
