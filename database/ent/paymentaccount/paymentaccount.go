// Code generated by ent, DO NOT EDIT.

package paymentaccount

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the paymentaccount type in the database.
	Label = "payment_account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMchName holds the string denoting the mch_name field in the database.
	FieldMchName = "mch_name"
	// FieldMchID holds the string denoting the mch_id field in the database.
	FieldMchID = "mch_id"
	// FieldMchCertSn holds the string denoting the mch_cert_sn field in the database.
	FieldMchCertSn = "mch_cert_sn"
	// FieldMchApiv3Key holds the string denoting the mch_apiv3_key field in the database.
	FieldMchApiv3Key = "mch_apiv3_key"
	// FieldMchPrivateKey holds the string denoting the mch_private_key field in the database.
	FieldMchPrivateKey = "mch_private_key"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the paymentaccount in the database.
	Table = "payment_accounts"
)

// Columns holds all SQL columns for paymentaccount fields.
var Columns = []string{
	FieldID,
	FieldMchName,
	FieldMchID,
	FieldMchCertSn,
	FieldMchApiv3Key,
	FieldMchPrivateKey,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)

// OrderOption defines the ordering options for the PaymentAccount queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMchName orders the results by the mch_name field.
func ByMchName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMchName, opts...).ToFunc()
}

// ByMchID orders the results by the mch_id field.
func ByMchID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMchID, opts...).ToFunc()
}

// ByMchCertSn orders the results by the mch_cert_sn field.
func ByMchCertSn(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMchCertSn, opts...).ToFunc()
}

// ByMchApiv3Key orders the results by the mch_apiv3_key field.
func ByMchApiv3Key(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMchApiv3Key, opts...).ToFunc()
}

// ByMchPrivateKey orders the results by the mch_private_key field.
func ByMchPrivateKey(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMchPrivateKey, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByUpdateTime orders the results by the update_time field.
func ByUpdateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateTime, opts...).ToFunc()
}
