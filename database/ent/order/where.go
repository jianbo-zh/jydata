// Code generated by ent, DO NOT EDIT.

package order

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldID, id))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldType, v))
}

// Period applies equality check predicate on the "period" field. It's identical to PeriodEQ.
func Period(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPeriod, v))
}

// OrderNo applies equality check predicate on the "order_no" field. It's identical to OrderNoEQ.
func OrderNo(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderNo, v))
}

// WxTxID applies equality check predicate on the "wx_tx_id" field. It's identical to WxTxIDEQ.
func WxTxID(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldWxTxID, v))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldScenicAreaID, v))
}

// MchID applies equality check predicate on the "mch_id" field. It's identical to MchIDEQ.
func MchID(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldMchID, v))
}

// ScenicAreaName applies equality check predicate on the "scenic_area_name" field. It's identical to ScenicAreaNameEQ.
func ScenicAreaName(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldScenicAreaName, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserID, v))
}

// OpenID applies equality check predicate on the "open_id" field. It's identical to OpenIDEQ.
func OpenID(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOpenID, v))
}

// Nickname applies equality check predicate on the "nickname" field. It's identical to NicknameEQ.
func Nickname(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNickname, v))
}

// Phone applies equality check predicate on the "phone" field. It's identical to PhoneEQ.
func Phone(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPhone, v))
}

// CarID applies equality check predicate on the "car_id" field. It's identical to CarIDEQ.
func CarID(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCarID, v))
}

// DeviceID applies equality check predicate on the "device_id" field. It's identical to DeviceIDEQ.
func DeviceID(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDeviceID, v))
}

// CarName applies equality check predicate on the "car_name" field. It's identical to CarNameEQ.
func CarName(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCarName, v))
}

// CarLicensePlate applies equality check predicate on the "car_license_plate" field. It's identical to CarLicensePlateEQ.
func CarLicensePlate(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCarLicensePlate, v))
}

// ModelID applies equality check predicate on the "model_id" field. It's identical to ModelIDEQ.
func ModelID(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldModelID, v))
}

// ModelName applies equality check predicate on the "model_name" field. It's identical to ModelNameEQ.
func ModelName(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldModelName, v))
}

// CouponID applies equality check predicate on the "coupon_id" field. It's identical to CouponIDEQ.
func CouponID(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCouponID, v))
}

// CouponName applies equality check predicate on the "coupon_name" field. It's identical to CouponNameEQ.
func CouponName(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCouponName, v))
}

// UseMileageMeter applies equality check predicate on the "use_mileage_meter" field. It's identical to UseMileageMeterEQ.
func UseMileageMeter(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUseMileageMeter, v))
}

// UseTimeSecond applies equality check predicate on the "use_time_second" field. It's identical to UseTimeSecondEQ.
func UseTimeSecond(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUseTimeSecond, v))
}

// DepositAmount applies equality check predicate on the "deposit_amount" field. It's identical to DepositAmountEQ.
func DepositAmount(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDepositAmount, v))
}

// OrderAmount applies equality check predicate on the "order_amount" field. It's identical to OrderAmountEQ.
func OrderAmount(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderAmount, v))
}

// RefundedAmount applies equality check predicate on the "refunded_amount" field. It's identical to RefundedAmountEQ.
func RefundedAmount(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldRefundedAmount, v))
}

// CouponAmount applies equality check predicate on the "coupon_amount" field. It's identical to CouponAmountEQ.
func CouponAmount(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCouponAmount, v))
}

// OrderState applies equality check predicate on the "order_state" field. It's identical to OrderStateEQ.
func OrderState(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderState, v))
}

// DepositState applies equality check predicate on the "deposit_state" field. It's identical to DepositStateEQ.
func DepositState(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDepositState, v))
}

// EmergencyState applies equality check predicate on the "emergency_state" field. It's identical to EmergencyStateEQ.
func EmergencyState(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldEmergencyState, v))
}

// IsTestOrder applies equality check predicate on the "is_test_order" field. It's identical to IsTestOrderEQ.
func IsTestOrder(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldIsTestOrder, v))
}

// IsCancel applies equality check predicate on the "is_cancel" field. It's identical to IsCancelEQ.
func IsCancel(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldIsCancel, v))
}

// IsProfitSharing applies equality check predicate on the "is_profit_sharing" field. It's identical to IsProfitSharingEQ.
func IsProfitSharing(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldIsProfitSharing, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldRemark, v))
}

// UserScore applies equality check predicate on the "user_score" field. It's identical to UserScoreEQ.
func UserScore(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserScore, v))
}

// UserComment applies equality check predicate on the "user_comment" field. It's identical to UserCommentEQ.
func UserComment(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserComment, v))
}

// DepositTime applies equality check predicate on the "deposit_time" field. It's identical to DepositTimeEQ.
func DepositTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDepositTime, v))
}

// FinishTime applies equality check predicate on the "finish_time" field. It's identical to FinishTimeEQ.
func FinishTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldFinishTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdateTime, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldType, v))
}

// PeriodEQ applies the EQ predicate on the "period" field.
func PeriodEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPeriod, v))
}

// PeriodNEQ applies the NEQ predicate on the "period" field.
func PeriodNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPeriod, v))
}

// PeriodIn applies the In predicate on the "period" field.
func PeriodIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPeriod, vs...))
}

// PeriodNotIn applies the NotIn predicate on the "period" field.
func PeriodNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPeriod, vs...))
}

// PeriodGT applies the GT predicate on the "period" field.
func PeriodGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPeriod, v))
}

// PeriodGTE applies the GTE predicate on the "period" field.
func PeriodGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPeriod, v))
}

// PeriodLT applies the LT predicate on the "period" field.
func PeriodLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPeriod, v))
}

// PeriodLTE applies the LTE predicate on the "period" field.
func PeriodLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPeriod, v))
}

// OrderNoEQ applies the EQ predicate on the "order_no" field.
func OrderNoEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderNo, v))
}

// OrderNoNEQ applies the NEQ predicate on the "order_no" field.
func OrderNoNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldOrderNo, v))
}

// OrderNoIn applies the In predicate on the "order_no" field.
func OrderNoIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldOrderNo, vs...))
}

// OrderNoNotIn applies the NotIn predicate on the "order_no" field.
func OrderNoNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldOrderNo, vs...))
}

// OrderNoGT applies the GT predicate on the "order_no" field.
func OrderNoGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldOrderNo, v))
}

// OrderNoGTE applies the GTE predicate on the "order_no" field.
func OrderNoGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldOrderNo, v))
}

// OrderNoLT applies the LT predicate on the "order_no" field.
func OrderNoLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldOrderNo, v))
}

// OrderNoLTE applies the LTE predicate on the "order_no" field.
func OrderNoLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldOrderNo, v))
}

// OrderNoContains applies the Contains predicate on the "order_no" field.
func OrderNoContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldOrderNo, v))
}

// OrderNoHasPrefix applies the HasPrefix predicate on the "order_no" field.
func OrderNoHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldOrderNo, v))
}

// OrderNoHasSuffix applies the HasSuffix predicate on the "order_no" field.
func OrderNoHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldOrderNo, v))
}

// OrderNoEqualFold applies the EqualFold predicate on the "order_no" field.
func OrderNoEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldOrderNo, v))
}

// OrderNoContainsFold applies the ContainsFold predicate on the "order_no" field.
func OrderNoContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldOrderNo, v))
}

// WxTxIDEQ applies the EQ predicate on the "wx_tx_id" field.
func WxTxIDEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldWxTxID, v))
}

// WxTxIDNEQ applies the NEQ predicate on the "wx_tx_id" field.
func WxTxIDNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldWxTxID, v))
}

// WxTxIDIn applies the In predicate on the "wx_tx_id" field.
func WxTxIDIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldWxTxID, vs...))
}

// WxTxIDNotIn applies the NotIn predicate on the "wx_tx_id" field.
func WxTxIDNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldWxTxID, vs...))
}

// WxTxIDGT applies the GT predicate on the "wx_tx_id" field.
func WxTxIDGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldWxTxID, v))
}

// WxTxIDGTE applies the GTE predicate on the "wx_tx_id" field.
func WxTxIDGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldWxTxID, v))
}

// WxTxIDLT applies the LT predicate on the "wx_tx_id" field.
func WxTxIDLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldWxTxID, v))
}

// WxTxIDLTE applies the LTE predicate on the "wx_tx_id" field.
func WxTxIDLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldWxTxID, v))
}

// WxTxIDContains applies the Contains predicate on the "wx_tx_id" field.
func WxTxIDContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldWxTxID, v))
}

// WxTxIDHasPrefix applies the HasPrefix predicate on the "wx_tx_id" field.
func WxTxIDHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldWxTxID, v))
}

// WxTxIDHasSuffix applies the HasSuffix predicate on the "wx_tx_id" field.
func WxTxIDHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldWxTxID, v))
}

// WxTxIDEqualFold applies the EqualFold predicate on the "wx_tx_id" field.
func WxTxIDEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldWxTxID, v))
}

// WxTxIDContainsFold applies the ContainsFold predicate on the "wx_tx_id" field.
func WxTxIDContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldWxTxID, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// MchIDEQ applies the EQ predicate on the "mch_id" field.
func MchIDEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldMchID, v))
}

// MchIDNEQ applies the NEQ predicate on the "mch_id" field.
func MchIDNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldMchID, v))
}

// MchIDIn applies the In predicate on the "mch_id" field.
func MchIDIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldMchID, vs...))
}

// MchIDNotIn applies the NotIn predicate on the "mch_id" field.
func MchIDNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldMchID, vs...))
}

// MchIDGT applies the GT predicate on the "mch_id" field.
func MchIDGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldMchID, v))
}

// MchIDGTE applies the GTE predicate on the "mch_id" field.
func MchIDGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldMchID, v))
}

// MchIDLT applies the LT predicate on the "mch_id" field.
func MchIDLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldMchID, v))
}

// MchIDLTE applies the LTE predicate on the "mch_id" field.
func MchIDLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldMchID, v))
}

// MchIDContains applies the Contains predicate on the "mch_id" field.
func MchIDContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldMchID, v))
}

// MchIDHasPrefix applies the HasPrefix predicate on the "mch_id" field.
func MchIDHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldMchID, v))
}

// MchIDHasSuffix applies the HasSuffix predicate on the "mch_id" field.
func MchIDHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldMchID, v))
}

// MchIDEqualFold applies the EqualFold predicate on the "mch_id" field.
func MchIDEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldMchID, v))
}

// MchIDContainsFold applies the ContainsFold predicate on the "mch_id" field.
func MchIDContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldMchID, v))
}

// ScenicAreaNameEQ applies the EQ predicate on the "scenic_area_name" field.
func ScenicAreaNameEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldScenicAreaName, v))
}

// ScenicAreaNameNEQ applies the NEQ predicate on the "scenic_area_name" field.
func ScenicAreaNameNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldScenicAreaName, v))
}

// ScenicAreaNameIn applies the In predicate on the "scenic_area_name" field.
func ScenicAreaNameIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldScenicAreaName, vs...))
}

// ScenicAreaNameNotIn applies the NotIn predicate on the "scenic_area_name" field.
func ScenicAreaNameNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldScenicAreaName, vs...))
}

// ScenicAreaNameGT applies the GT predicate on the "scenic_area_name" field.
func ScenicAreaNameGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldScenicAreaName, v))
}

// ScenicAreaNameGTE applies the GTE predicate on the "scenic_area_name" field.
func ScenicAreaNameGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldScenicAreaName, v))
}

// ScenicAreaNameLT applies the LT predicate on the "scenic_area_name" field.
func ScenicAreaNameLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldScenicAreaName, v))
}

// ScenicAreaNameLTE applies the LTE predicate on the "scenic_area_name" field.
func ScenicAreaNameLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldScenicAreaName, v))
}

// ScenicAreaNameContains applies the Contains predicate on the "scenic_area_name" field.
func ScenicAreaNameContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldScenicAreaName, v))
}

// ScenicAreaNameHasPrefix applies the HasPrefix predicate on the "scenic_area_name" field.
func ScenicAreaNameHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldScenicAreaName, v))
}

// ScenicAreaNameHasSuffix applies the HasSuffix predicate on the "scenic_area_name" field.
func ScenicAreaNameHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldScenicAreaName, v))
}

// ScenicAreaNameEqualFold applies the EqualFold predicate on the "scenic_area_name" field.
func ScenicAreaNameEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldScenicAreaName, v))
}

// ScenicAreaNameContainsFold applies the ContainsFold predicate on the "scenic_area_name" field.
func ScenicAreaNameContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldScenicAreaName, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUserID, v))
}

// OpenIDEQ applies the EQ predicate on the "open_id" field.
func OpenIDEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOpenID, v))
}

// OpenIDNEQ applies the NEQ predicate on the "open_id" field.
func OpenIDNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldOpenID, v))
}

// OpenIDIn applies the In predicate on the "open_id" field.
func OpenIDIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldOpenID, vs...))
}

// OpenIDNotIn applies the NotIn predicate on the "open_id" field.
func OpenIDNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldOpenID, vs...))
}

// OpenIDGT applies the GT predicate on the "open_id" field.
func OpenIDGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldOpenID, v))
}

// OpenIDGTE applies the GTE predicate on the "open_id" field.
func OpenIDGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldOpenID, v))
}

// OpenIDLT applies the LT predicate on the "open_id" field.
func OpenIDLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldOpenID, v))
}

// OpenIDLTE applies the LTE predicate on the "open_id" field.
func OpenIDLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldOpenID, v))
}

// OpenIDContains applies the Contains predicate on the "open_id" field.
func OpenIDContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldOpenID, v))
}

// OpenIDHasPrefix applies the HasPrefix predicate on the "open_id" field.
func OpenIDHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldOpenID, v))
}

// OpenIDHasSuffix applies the HasSuffix predicate on the "open_id" field.
func OpenIDHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldOpenID, v))
}

// OpenIDEqualFold applies the EqualFold predicate on the "open_id" field.
func OpenIDEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldOpenID, v))
}

// OpenIDContainsFold applies the ContainsFold predicate on the "open_id" field.
func OpenIDContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldOpenID, v))
}

// NicknameEQ applies the EQ predicate on the "nickname" field.
func NicknameEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNickname, v))
}

// NicknameNEQ applies the NEQ predicate on the "nickname" field.
func NicknameNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldNickname, v))
}

// NicknameIn applies the In predicate on the "nickname" field.
func NicknameIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldNickname, vs...))
}

// NicknameNotIn applies the NotIn predicate on the "nickname" field.
func NicknameNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldNickname, vs...))
}

// NicknameGT applies the GT predicate on the "nickname" field.
func NicknameGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldNickname, v))
}

// NicknameGTE applies the GTE predicate on the "nickname" field.
func NicknameGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldNickname, v))
}

// NicknameLT applies the LT predicate on the "nickname" field.
func NicknameLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldNickname, v))
}

// NicknameLTE applies the LTE predicate on the "nickname" field.
func NicknameLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldNickname, v))
}

// NicknameContains applies the Contains predicate on the "nickname" field.
func NicknameContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldNickname, v))
}

// NicknameHasPrefix applies the HasPrefix predicate on the "nickname" field.
func NicknameHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldNickname, v))
}

// NicknameHasSuffix applies the HasSuffix predicate on the "nickname" field.
func NicknameHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldNickname, v))
}

// NicknameEqualFold applies the EqualFold predicate on the "nickname" field.
func NicknameEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldNickname, v))
}

// NicknameContainsFold applies the ContainsFold predicate on the "nickname" field.
func NicknameContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldNickname, v))
}

// PhoneEQ applies the EQ predicate on the "phone" field.
func PhoneEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPhone, v))
}

// PhoneNEQ applies the NEQ predicate on the "phone" field.
func PhoneNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPhone, v))
}

// PhoneIn applies the In predicate on the "phone" field.
func PhoneIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPhone, vs...))
}

// PhoneNotIn applies the NotIn predicate on the "phone" field.
func PhoneNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPhone, vs...))
}

// PhoneGT applies the GT predicate on the "phone" field.
func PhoneGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPhone, v))
}

// PhoneGTE applies the GTE predicate on the "phone" field.
func PhoneGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPhone, v))
}

// PhoneLT applies the LT predicate on the "phone" field.
func PhoneLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPhone, v))
}

// PhoneLTE applies the LTE predicate on the "phone" field.
func PhoneLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPhone, v))
}

// PhoneContains applies the Contains predicate on the "phone" field.
func PhoneContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldPhone, v))
}

// PhoneHasPrefix applies the HasPrefix predicate on the "phone" field.
func PhoneHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldPhone, v))
}

// PhoneHasSuffix applies the HasSuffix predicate on the "phone" field.
func PhoneHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldPhone, v))
}

// PhoneEqualFold applies the EqualFold predicate on the "phone" field.
func PhoneEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldPhone, v))
}

// PhoneContainsFold applies the ContainsFold predicate on the "phone" field.
func PhoneContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldPhone, v))
}

// CarIDEQ applies the EQ predicate on the "car_id" field.
func CarIDEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCarID, v))
}

// CarIDNEQ applies the NEQ predicate on the "car_id" field.
func CarIDNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCarID, v))
}

// CarIDIn applies the In predicate on the "car_id" field.
func CarIDIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCarID, vs...))
}

// CarIDNotIn applies the NotIn predicate on the "car_id" field.
func CarIDNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCarID, vs...))
}

// DeviceIDEQ applies the EQ predicate on the "device_id" field.
func DeviceIDEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDeviceID, v))
}

// DeviceIDNEQ applies the NEQ predicate on the "device_id" field.
func DeviceIDNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDeviceID, v))
}

// DeviceIDIn applies the In predicate on the "device_id" field.
func DeviceIDIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDeviceID, vs...))
}

// DeviceIDNotIn applies the NotIn predicate on the "device_id" field.
func DeviceIDNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDeviceID, vs...))
}

// DeviceIDGT applies the GT predicate on the "device_id" field.
func DeviceIDGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDeviceID, v))
}

// DeviceIDGTE applies the GTE predicate on the "device_id" field.
func DeviceIDGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDeviceID, v))
}

// DeviceIDLT applies the LT predicate on the "device_id" field.
func DeviceIDLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDeviceID, v))
}

// DeviceIDLTE applies the LTE predicate on the "device_id" field.
func DeviceIDLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDeviceID, v))
}

// DeviceIDContains applies the Contains predicate on the "device_id" field.
func DeviceIDContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldDeviceID, v))
}

// DeviceIDHasPrefix applies the HasPrefix predicate on the "device_id" field.
func DeviceIDHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldDeviceID, v))
}

// DeviceIDHasSuffix applies the HasSuffix predicate on the "device_id" field.
func DeviceIDHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldDeviceID, v))
}

// DeviceIDEqualFold applies the EqualFold predicate on the "device_id" field.
func DeviceIDEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldDeviceID, v))
}

// DeviceIDContainsFold applies the ContainsFold predicate on the "device_id" field.
func DeviceIDContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldDeviceID, v))
}

// CarNameEQ applies the EQ predicate on the "car_name" field.
func CarNameEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCarName, v))
}

// CarNameNEQ applies the NEQ predicate on the "car_name" field.
func CarNameNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCarName, v))
}

// CarNameIn applies the In predicate on the "car_name" field.
func CarNameIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCarName, vs...))
}

// CarNameNotIn applies the NotIn predicate on the "car_name" field.
func CarNameNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCarName, vs...))
}

// CarNameGT applies the GT predicate on the "car_name" field.
func CarNameGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCarName, v))
}

// CarNameGTE applies the GTE predicate on the "car_name" field.
func CarNameGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCarName, v))
}

// CarNameLT applies the LT predicate on the "car_name" field.
func CarNameLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCarName, v))
}

// CarNameLTE applies the LTE predicate on the "car_name" field.
func CarNameLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCarName, v))
}

// CarNameContains applies the Contains predicate on the "car_name" field.
func CarNameContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldCarName, v))
}

// CarNameHasPrefix applies the HasPrefix predicate on the "car_name" field.
func CarNameHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldCarName, v))
}

// CarNameHasSuffix applies the HasSuffix predicate on the "car_name" field.
func CarNameHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldCarName, v))
}

// CarNameEqualFold applies the EqualFold predicate on the "car_name" field.
func CarNameEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldCarName, v))
}

// CarNameContainsFold applies the ContainsFold predicate on the "car_name" field.
func CarNameContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldCarName, v))
}

// CarLicensePlateEQ applies the EQ predicate on the "car_license_plate" field.
func CarLicensePlateEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCarLicensePlate, v))
}

// CarLicensePlateNEQ applies the NEQ predicate on the "car_license_plate" field.
func CarLicensePlateNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCarLicensePlate, v))
}

// CarLicensePlateIn applies the In predicate on the "car_license_plate" field.
func CarLicensePlateIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCarLicensePlate, vs...))
}

// CarLicensePlateNotIn applies the NotIn predicate on the "car_license_plate" field.
func CarLicensePlateNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCarLicensePlate, vs...))
}

// CarLicensePlateGT applies the GT predicate on the "car_license_plate" field.
func CarLicensePlateGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCarLicensePlate, v))
}

// CarLicensePlateGTE applies the GTE predicate on the "car_license_plate" field.
func CarLicensePlateGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCarLicensePlate, v))
}

// CarLicensePlateLT applies the LT predicate on the "car_license_plate" field.
func CarLicensePlateLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCarLicensePlate, v))
}

// CarLicensePlateLTE applies the LTE predicate on the "car_license_plate" field.
func CarLicensePlateLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCarLicensePlate, v))
}

// CarLicensePlateContains applies the Contains predicate on the "car_license_plate" field.
func CarLicensePlateContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldCarLicensePlate, v))
}

// CarLicensePlateHasPrefix applies the HasPrefix predicate on the "car_license_plate" field.
func CarLicensePlateHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldCarLicensePlate, v))
}

// CarLicensePlateHasSuffix applies the HasSuffix predicate on the "car_license_plate" field.
func CarLicensePlateHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldCarLicensePlate, v))
}

// CarLicensePlateEqualFold applies the EqualFold predicate on the "car_license_plate" field.
func CarLicensePlateEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldCarLicensePlate, v))
}

// CarLicensePlateContainsFold applies the ContainsFold predicate on the "car_license_plate" field.
func CarLicensePlateContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldCarLicensePlate, v))
}

// ModelIDEQ applies the EQ predicate on the "model_id" field.
func ModelIDEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldModelID, v))
}

// ModelIDNEQ applies the NEQ predicate on the "model_id" field.
func ModelIDNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldModelID, v))
}

// ModelIDIn applies the In predicate on the "model_id" field.
func ModelIDIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldModelID, vs...))
}

// ModelIDNotIn applies the NotIn predicate on the "model_id" field.
func ModelIDNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldModelID, vs...))
}

// ModelIDGT applies the GT predicate on the "model_id" field.
func ModelIDGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldModelID, v))
}

// ModelIDGTE applies the GTE predicate on the "model_id" field.
func ModelIDGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldModelID, v))
}

// ModelIDLT applies the LT predicate on the "model_id" field.
func ModelIDLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldModelID, v))
}

// ModelIDLTE applies the LTE predicate on the "model_id" field.
func ModelIDLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldModelID, v))
}

// ModelNameEQ applies the EQ predicate on the "model_name" field.
func ModelNameEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldModelName, v))
}

// ModelNameNEQ applies the NEQ predicate on the "model_name" field.
func ModelNameNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldModelName, v))
}

// ModelNameIn applies the In predicate on the "model_name" field.
func ModelNameIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldModelName, vs...))
}

// ModelNameNotIn applies the NotIn predicate on the "model_name" field.
func ModelNameNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldModelName, vs...))
}

// ModelNameGT applies the GT predicate on the "model_name" field.
func ModelNameGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldModelName, v))
}

// ModelNameGTE applies the GTE predicate on the "model_name" field.
func ModelNameGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldModelName, v))
}

// ModelNameLT applies the LT predicate on the "model_name" field.
func ModelNameLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldModelName, v))
}

// ModelNameLTE applies the LTE predicate on the "model_name" field.
func ModelNameLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldModelName, v))
}

// ModelNameContains applies the Contains predicate on the "model_name" field.
func ModelNameContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldModelName, v))
}

// ModelNameHasPrefix applies the HasPrefix predicate on the "model_name" field.
func ModelNameHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldModelName, v))
}

// ModelNameHasSuffix applies the HasSuffix predicate on the "model_name" field.
func ModelNameHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldModelName, v))
}

// ModelNameEqualFold applies the EqualFold predicate on the "model_name" field.
func ModelNameEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldModelName, v))
}

// ModelNameContainsFold applies the ContainsFold predicate on the "model_name" field.
func ModelNameContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldModelName, v))
}

// CouponIDEQ applies the EQ predicate on the "coupon_id" field.
func CouponIDEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCouponID, v))
}

// CouponIDNEQ applies the NEQ predicate on the "coupon_id" field.
func CouponIDNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCouponID, v))
}

// CouponIDIn applies the In predicate on the "coupon_id" field.
func CouponIDIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCouponID, vs...))
}

// CouponIDNotIn applies the NotIn predicate on the "coupon_id" field.
func CouponIDNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCouponID, vs...))
}

// CouponIDGT applies the GT predicate on the "coupon_id" field.
func CouponIDGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCouponID, v))
}

// CouponIDGTE applies the GTE predicate on the "coupon_id" field.
func CouponIDGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCouponID, v))
}

// CouponIDLT applies the LT predicate on the "coupon_id" field.
func CouponIDLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCouponID, v))
}

// CouponIDLTE applies the LTE predicate on the "coupon_id" field.
func CouponIDLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCouponID, v))
}

// CouponNameEQ applies the EQ predicate on the "coupon_name" field.
func CouponNameEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCouponName, v))
}

// CouponNameNEQ applies the NEQ predicate on the "coupon_name" field.
func CouponNameNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCouponName, v))
}

// CouponNameIn applies the In predicate on the "coupon_name" field.
func CouponNameIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCouponName, vs...))
}

// CouponNameNotIn applies the NotIn predicate on the "coupon_name" field.
func CouponNameNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCouponName, vs...))
}

// CouponNameGT applies the GT predicate on the "coupon_name" field.
func CouponNameGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCouponName, v))
}

// CouponNameGTE applies the GTE predicate on the "coupon_name" field.
func CouponNameGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCouponName, v))
}

// CouponNameLT applies the LT predicate on the "coupon_name" field.
func CouponNameLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCouponName, v))
}

// CouponNameLTE applies the LTE predicate on the "coupon_name" field.
func CouponNameLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCouponName, v))
}

// CouponNameContains applies the Contains predicate on the "coupon_name" field.
func CouponNameContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldCouponName, v))
}

// CouponNameHasPrefix applies the HasPrefix predicate on the "coupon_name" field.
func CouponNameHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldCouponName, v))
}

// CouponNameHasSuffix applies the HasSuffix predicate on the "coupon_name" field.
func CouponNameHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldCouponName, v))
}

// CouponNameEqualFold applies the EqualFold predicate on the "coupon_name" field.
func CouponNameEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldCouponName, v))
}

// CouponNameContainsFold applies the ContainsFold predicate on the "coupon_name" field.
func CouponNameContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldCouponName, v))
}

// UseMileageMeterEQ applies the EQ predicate on the "use_mileage_meter" field.
func UseMileageMeterEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUseMileageMeter, v))
}

// UseMileageMeterNEQ applies the NEQ predicate on the "use_mileage_meter" field.
func UseMileageMeterNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUseMileageMeter, v))
}

// UseMileageMeterIn applies the In predicate on the "use_mileage_meter" field.
func UseMileageMeterIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUseMileageMeter, vs...))
}

// UseMileageMeterNotIn applies the NotIn predicate on the "use_mileage_meter" field.
func UseMileageMeterNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUseMileageMeter, vs...))
}

// UseMileageMeterGT applies the GT predicate on the "use_mileage_meter" field.
func UseMileageMeterGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUseMileageMeter, v))
}

// UseMileageMeterGTE applies the GTE predicate on the "use_mileage_meter" field.
func UseMileageMeterGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUseMileageMeter, v))
}

// UseMileageMeterLT applies the LT predicate on the "use_mileage_meter" field.
func UseMileageMeterLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUseMileageMeter, v))
}

// UseMileageMeterLTE applies the LTE predicate on the "use_mileage_meter" field.
func UseMileageMeterLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUseMileageMeter, v))
}

// UseTimeSecondEQ applies the EQ predicate on the "use_time_second" field.
func UseTimeSecondEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUseTimeSecond, v))
}

// UseTimeSecondNEQ applies the NEQ predicate on the "use_time_second" field.
func UseTimeSecondNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUseTimeSecond, v))
}

// UseTimeSecondIn applies the In predicate on the "use_time_second" field.
func UseTimeSecondIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUseTimeSecond, vs...))
}

// UseTimeSecondNotIn applies the NotIn predicate on the "use_time_second" field.
func UseTimeSecondNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUseTimeSecond, vs...))
}

// UseTimeSecondGT applies the GT predicate on the "use_time_second" field.
func UseTimeSecondGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUseTimeSecond, v))
}

// UseTimeSecondGTE applies the GTE predicate on the "use_time_second" field.
func UseTimeSecondGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUseTimeSecond, v))
}

// UseTimeSecondLT applies the LT predicate on the "use_time_second" field.
func UseTimeSecondLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUseTimeSecond, v))
}

// UseTimeSecondLTE applies the LTE predicate on the "use_time_second" field.
func UseTimeSecondLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUseTimeSecond, v))
}

// DepositAmountEQ applies the EQ predicate on the "deposit_amount" field.
func DepositAmountEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDepositAmount, v))
}

// DepositAmountNEQ applies the NEQ predicate on the "deposit_amount" field.
func DepositAmountNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDepositAmount, v))
}

// DepositAmountIn applies the In predicate on the "deposit_amount" field.
func DepositAmountIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDepositAmount, vs...))
}

// DepositAmountNotIn applies the NotIn predicate on the "deposit_amount" field.
func DepositAmountNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDepositAmount, vs...))
}

// DepositAmountGT applies the GT predicate on the "deposit_amount" field.
func DepositAmountGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDepositAmount, v))
}

// DepositAmountGTE applies the GTE predicate on the "deposit_amount" field.
func DepositAmountGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDepositAmount, v))
}

// DepositAmountLT applies the LT predicate on the "deposit_amount" field.
func DepositAmountLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDepositAmount, v))
}

// DepositAmountLTE applies the LTE predicate on the "deposit_amount" field.
func DepositAmountLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDepositAmount, v))
}

// OrderAmountEQ applies the EQ predicate on the "order_amount" field.
func OrderAmountEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderAmount, v))
}

// OrderAmountNEQ applies the NEQ predicate on the "order_amount" field.
func OrderAmountNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldOrderAmount, v))
}

// OrderAmountIn applies the In predicate on the "order_amount" field.
func OrderAmountIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldOrderAmount, vs...))
}

// OrderAmountNotIn applies the NotIn predicate on the "order_amount" field.
func OrderAmountNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldOrderAmount, vs...))
}

// OrderAmountGT applies the GT predicate on the "order_amount" field.
func OrderAmountGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldOrderAmount, v))
}

// OrderAmountGTE applies the GTE predicate on the "order_amount" field.
func OrderAmountGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldOrderAmount, v))
}

// OrderAmountLT applies the LT predicate on the "order_amount" field.
func OrderAmountLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldOrderAmount, v))
}

// OrderAmountLTE applies the LTE predicate on the "order_amount" field.
func OrderAmountLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldOrderAmount, v))
}

// RefundedAmountEQ applies the EQ predicate on the "refunded_amount" field.
func RefundedAmountEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldRefundedAmount, v))
}

// RefundedAmountNEQ applies the NEQ predicate on the "refunded_amount" field.
func RefundedAmountNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldRefundedAmount, v))
}

// RefundedAmountIn applies the In predicate on the "refunded_amount" field.
func RefundedAmountIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldRefundedAmount, vs...))
}

// RefundedAmountNotIn applies the NotIn predicate on the "refunded_amount" field.
func RefundedAmountNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldRefundedAmount, vs...))
}

// RefundedAmountGT applies the GT predicate on the "refunded_amount" field.
func RefundedAmountGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldRefundedAmount, v))
}

// RefundedAmountGTE applies the GTE predicate on the "refunded_amount" field.
func RefundedAmountGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldRefundedAmount, v))
}

// RefundedAmountLT applies the LT predicate on the "refunded_amount" field.
func RefundedAmountLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldRefundedAmount, v))
}

// RefundedAmountLTE applies the LTE predicate on the "refunded_amount" field.
func RefundedAmountLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldRefundedAmount, v))
}

// CouponAmountEQ applies the EQ predicate on the "coupon_amount" field.
func CouponAmountEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCouponAmount, v))
}

// CouponAmountNEQ applies the NEQ predicate on the "coupon_amount" field.
func CouponAmountNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCouponAmount, v))
}

// CouponAmountIn applies the In predicate on the "coupon_amount" field.
func CouponAmountIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCouponAmount, vs...))
}

// CouponAmountNotIn applies the NotIn predicate on the "coupon_amount" field.
func CouponAmountNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCouponAmount, vs...))
}

// CouponAmountGT applies the GT predicate on the "coupon_amount" field.
func CouponAmountGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCouponAmount, v))
}

// CouponAmountGTE applies the GTE predicate on the "coupon_amount" field.
func CouponAmountGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCouponAmount, v))
}

// CouponAmountLT applies the LT predicate on the "coupon_amount" field.
func CouponAmountLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCouponAmount, v))
}

// CouponAmountLTE applies the LTE predicate on the "coupon_amount" field.
func CouponAmountLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCouponAmount, v))
}

// OrderStateEQ applies the EQ predicate on the "order_state" field.
func OrderStateEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOrderState, v))
}

// OrderStateNEQ applies the NEQ predicate on the "order_state" field.
func OrderStateNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldOrderState, v))
}

// OrderStateIn applies the In predicate on the "order_state" field.
func OrderStateIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldOrderState, vs...))
}

// OrderStateNotIn applies the NotIn predicate on the "order_state" field.
func OrderStateNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldOrderState, vs...))
}

// OrderStateGT applies the GT predicate on the "order_state" field.
func OrderStateGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldOrderState, v))
}

// OrderStateGTE applies the GTE predicate on the "order_state" field.
func OrderStateGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldOrderState, v))
}

// OrderStateLT applies the LT predicate on the "order_state" field.
func OrderStateLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldOrderState, v))
}

// OrderStateLTE applies the LTE predicate on the "order_state" field.
func OrderStateLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldOrderState, v))
}

// DepositStateEQ applies the EQ predicate on the "deposit_state" field.
func DepositStateEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDepositState, v))
}

// DepositStateNEQ applies the NEQ predicate on the "deposit_state" field.
func DepositStateNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDepositState, v))
}

// DepositStateIn applies the In predicate on the "deposit_state" field.
func DepositStateIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDepositState, vs...))
}

// DepositStateNotIn applies the NotIn predicate on the "deposit_state" field.
func DepositStateNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDepositState, vs...))
}

// DepositStateGT applies the GT predicate on the "deposit_state" field.
func DepositStateGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDepositState, v))
}

// DepositStateGTE applies the GTE predicate on the "deposit_state" field.
func DepositStateGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDepositState, v))
}

// DepositStateLT applies the LT predicate on the "deposit_state" field.
func DepositStateLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDepositState, v))
}

// DepositStateLTE applies the LTE predicate on the "deposit_state" field.
func DepositStateLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDepositState, v))
}

// EmergencyStateEQ applies the EQ predicate on the "emergency_state" field.
func EmergencyStateEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldEmergencyState, v))
}

// EmergencyStateNEQ applies the NEQ predicate on the "emergency_state" field.
func EmergencyStateNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldEmergencyState, v))
}

// EmergencyStateIn applies the In predicate on the "emergency_state" field.
func EmergencyStateIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldEmergencyState, vs...))
}

// EmergencyStateNotIn applies the NotIn predicate on the "emergency_state" field.
func EmergencyStateNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldEmergencyState, vs...))
}

// EmergencyStateGT applies the GT predicate on the "emergency_state" field.
func EmergencyStateGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldEmergencyState, v))
}

// EmergencyStateGTE applies the GTE predicate on the "emergency_state" field.
func EmergencyStateGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldEmergencyState, v))
}

// EmergencyStateLT applies the LT predicate on the "emergency_state" field.
func EmergencyStateLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldEmergencyState, v))
}

// EmergencyStateLTE applies the LTE predicate on the "emergency_state" field.
func EmergencyStateLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldEmergencyState, v))
}

// IsTestOrderEQ applies the EQ predicate on the "is_test_order" field.
func IsTestOrderEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldIsTestOrder, v))
}

// IsTestOrderNEQ applies the NEQ predicate on the "is_test_order" field.
func IsTestOrderNEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldIsTestOrder, v))
}

// IsCancelEQ applies the EQ predicate on the "is_cancel" field.
func IsCancelEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldIsCancel, v))
}

// IsCancelNEQ applies the NEQ predicate on the "is_cancel" field.
func IsCancelNEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldIsCancel, v))
}

// IsProfitSharingEQ applies the EQ predicate on the "is_profit_sharing" field.
func IsProfitSharingEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldIsProfitSharing, v))
}

// IsProfitSharingNEQ applies the NEQ predicate on the "is_profit_sharing" field.
func IsProfitSharingNEQ(v bool) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldIsProfitSharing, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldRemark, v))
}

// UserScoreEQ applies the EQ predicate on the "user_score" field.
func UserScoreEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserScore, v))
}

// UserScoreNEQ applies the NEQ predicate on the "user_score" field.
func UserScoreNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUserScore, v))
}

// UserScoreIn applies the In predicate on the "user_score" field.
func UserScoreIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUserScore, vs...))
}

// UserScoreNotIn applies the NotIn predicate on the "user_score" field.
func UserScoreNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUserScore, vs...))
}

// UserScoreGT applies the GT predicate on the "user_score" field.
func UserScoreGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUserScore, v))
}

// UserScoreGTE applies the GTE predicate on the "user_score" field.
func UserScoreGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUserScore, v))
}

// UserScoreLT applies the LT predicate on the "user_score" field.
func UserScoreLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUserScore, v))
}

// UserScoreLTE applies the LTE predicate on the "user_score" field.
func UserScoreLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUserScore, v))
}

// UserCommentEQ applies the EQ predicate on the "user_comment" field.
func UserCommentEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUserComment, v))
}

// UserCommentNEQ applies the NEQ predicate on the "user_comment" field.
func UserCommentNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUserComment, v))
}

// UserCommentIn applies the In predicate on the "user_comment" field.
func UserCommentIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUserComment, vs...))
}

// UserCommentNotIn applies the NotIn predicate on the "user_comment" field.
func UserCommentNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUserComment, vs...))
}

// UserCommentGT applies the GT predicate on the "user_comment" field.
func UserCommentGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUserComment, v))
}

// UserCommentGTE applies the GTE predicate on the "user_comment" field.
func UserCommentGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUserComment, v))
}

// UserCommentLT applies the LT predicate on the "user_comment" field.
func UserCommentLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUserComment, v))
}

// UserCommentLTE applies the LTE predicate on the "user_comment" field.
func UserCommentLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUserComment, v))
}

// UserCommentContains applies the Contains predicate on the "user_comment" field.
func UserCommentContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldUserComment, v))
}

// UserCommentHasPrefix applies the HasPrefix predicate on the "user_comment" field.
func UserCommentHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldUserComment, v))
}

// UserCommentHasSuffix applies the HasSuffix predicate on the "user_comment" field.
func UserCommentHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldUserComment, v))
}

// UserCommentEqualFold applies the EqualFold predicate on the "user_comment" field.
func UserCommentEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldUserComment, v))
}

// UserCommentContainsFold applies the ContainsFold predicate on the "user_comment" field.
func UserCommentContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldUserComment, v))
}

// DepositTimeEQ applies the EQ predicate on the "deposit_time" field.
func DepositTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldDepositTime, v))
}

// DepositTimeNEQ applies the NEQ predicate on the "deposit_time" field.
func DepositTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldDepositTime, v))
}

// DepositTimeIn applies the In predicate on the "deposit_time" field.
func DepositTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldDepositTime, vs...))
}

// DepositTimeNotIn applies the NotIn predicate on the "deposit_time" field.
func DepositTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldDepositTime, vs...))
}

// DepositTimeGT applies the GT predicate on the "deposit_time" field.
func DepositTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldDepositTime, v))
}

// DepositTimeGTE applies the GTE predicate on the "deposit_time" field.
func DepositTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldDepositTime, v))
}

// DepositTimeLT applies the LT predicate on the "deposit_time" field.
func DepositTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldDepositTime, v))
}

// DepositTimeLTE applies the LTE predicate on the "deposit_time" field.
func DepositTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldDepositTime, v))
}

// DepositTimeIsNil applies the IsNil predicate on the "deposit_time" field.
func DepositTimeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldDepositTime))
}

// DepositTimeNotNil applies the NotNil predicate on the "deposit_time" field.
func DepositTimeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldDepositTime))
}

// FinishTimeEQ applies the EQ predicate on the "finish_time" field.
func FinishTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldFinishTime, v))
}

// FinishTimeNEQ applies the NEQ predicate on the "finish_time" field.
func FinishTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldFinishTime, v))
}

// FinishTimeIn applies the In predicate on the "finish_time" field.
func FinishTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldFinishTime, vs...))
}

// FinishTimeNotIn applies the NotIn predicate on the "finish_time" field.
func FinishTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldFinishTime, vs...))
}

// FinishTimeGT applies the GT predicate on the "finish_time" field.
func FinishTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldFinishTime, v))
}

// FinishTimeGTE applies the GTE predicate on the "finish_time" field.
func FinishTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldFinishTime, v))
}

// FinishTimeLT applies the LT predicate on the "finish_time" field.
func FinishTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldFinishTime, v))
}

// FinishTimeLTE applies the LTE predicate on the "finish_time" field.
func FinishTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldFinishTime, v))
}

// FinishTimeIsNil applies the IsNil predicate on the "finish_time" field.
func FinishTimeIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldFinishTime))
}

// FinishTimeNotNil applies the NotNil predicate on the "finish_time" field.
func FinishTimeNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldFinishTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUpdateTime, v))
}

// HasCar applies the HasEdge predicate on the "car" edge.
func HasCar() predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CarTable, CarColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCarWith applies the HasEdge predicate on the "car" edge with a given conditions (other predicates).
func HasCarWith(preds ...predicate.Car) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := newCarStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasBackgroundScenicArea applies the HasEdge predicate on the "background_scenic_area" edge.
func HasBackgroundScenicArea() predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, BackgroundScenicAreaTable, BackgroundScenicAreaColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBackgroundScenicAreaWith applies the HasEdge predicate on the "background_scenic_area" edge with a given conditions (other predicates).
func HasBackgroundScenicAreaWith(preds ...predicate.ScenicArea) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := newBackgroundScenicAreaStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasBilling applies the HasEdge predicate on the "billing" edge.
func HasBilling() predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, BillingTable, BillingColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBillingWith applies the HasEdge predicate on the "billing" edge with a given conditions (other predicates).
func HasBillingWith(preds ...predicate.OrderBilling) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := newBillingStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRefund applies the HasEdge predicate on the "refund" edge.
func HasRefund() predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, RefundTable, RefundColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRefundWith applies the HasEdge predicate on the "refund" edge with a given conditions (other predicates).
func HasRefundWith(preds ...predicate.OrderRefund) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := newRefundStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasSharing applies the HasEdge predicate on the "sharing" edge.
func HasSharing() predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, SharingTable, SharingColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSharingWith applies the HasEdge predicate on the "sharing" edge with a given conditions (other predicates).
func HasSharingWith(preds ...predicate.OrderSharing) predicate.Order {
	return predicate.Order(func(s *sql.Selector) {
		step := newSharingStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Order) predicate.Order {
	return predicate.Order(sql.NotPredicates(p))
}
