// Code generated by ent, DO NOT EDIT.

package orderextendflight

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldID, id))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldOrderID, v))
}

// FlightID applies equality check predicate on the "flight_id" field. It's identical to FlightIDEQ.
func FlightID(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldFlightID, v))
}

// FlightNo applies equality check predicate on the "flight_no" field. It's identical to FlightNoEQ.
func FlightNo(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldFlightNo, v))
}

// RouteID applies equality check predicate on the "route_id" field. It's identical to RouteIDEQ.
func RouteID(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldRouteID, v))
}

// RouteName applies equality check predicate on the "route_name" field. It's identical to RouteNameEQ.
func RouteName(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldRouteName, v))
}

// StartStopID applies equality check predicate on the "start_stop_id" field. It's identical to StartStopIDEQ.
func StartStopID(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldStartStopID, v))
}

// EndStopID applies equality check predicate on the "end_stop_id" field. It's identical to EndStopIDEQ.
func EndStopID(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldEndStopID, v))
}

// TicketCount applies equality check predicate on the "ticket_count" field. It's identical to TicketCountEQ.
func TicketCount(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldTicketCount, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldUpdateTime, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldOrderID, v))
}

// FlightIDEQ applies the EQ predicate on the "flight_id" field.
func FlightIDEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldFlightID, v))
}

// FlightIDNEQ applies the NEQ predicate on the "flight_id" field.
func FlightIDNEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldFlightID, v))
}

// FlightIDIn applies the In predicate on the "flight_id" field.
func FlightIDIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldFlightID, vs...))
}

// FlightIDNotIn applies the NotIn predicate on the "flight_id" field.
func FlightIDNotIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldFlightID, vs...))
}

// FlightIDGT applies the GT predicate on the "flight_id" field.
func FlightIDGT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldFlightID, v))
}

// FlightIDGTE applies the GTE predicate on the "flight_id" field.
func FlightIDGTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldFlightID, v))
}

// FlightIDLT applies the LT predicate on the "flight_id" field.
func FlightIDLT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldFlightID, v))
}

// FlightIDLTE applies the LTE predicate on the "flight_id" field.
func FlightIDLTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldFlightID, v))
}

// FlightNoEQ applies the EQ predicate on the "flight_no" field.
func FlightNoEQ(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldFlightNo, v))
}

// FlightNoNEQ applies the NEQ predicate on the "flight_no" field.
func FlightNoNEQ(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldFlightNo, v))
}

// FlightNoIn applies the In predicate on the "flight_no" field.
func FlightNoIn(vs ...string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldFlightNo, vs...))
}

// FlightNoNotIn applies the NotIn predicate on the "flight_no" field.
func FlightNoNotIn(vs ...string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldFlightNo, vs...))
}

// FlightNoGT applies the GT predicate on the "flight_no" field.
func FlightNoGT(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldFlightNo, v))
}

// FlightNoGTE applies the GTE predicate on the "flight_no" field.
func FlightNoGTE(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldFlightNo, v))
}

// FlightNoLT applies the LT predicate on the "flight_no" field.
func FlightNoLT(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldFlightNo, v))
}

// FlightNoLTE applies the LTE predicate on the "flight_no" field.
func FlightNoLTE(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldFlightNo, v))
}

// FlightNoContains applies the Contains predicate on the "flight_no" field.
func FlightNoContains(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldContains(FieldFlightNo, v))
}

// FlightNoHasPrefix applies the HasPrefix predicate on the "flight_no" field.
func FlightNoHasPrefix(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldHasPrefix(FieldFlightNo, v))
}

// FlightNoHasSuffix applies the HasSuffix predicate on the "flight_no" field.
func FlightNoHasSuffix(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldHasSuffix(FieldFlightNo, v))
}

// FlightNoEqualFold applies the EqualFold predicate on the "flight_no" field.
func FlightNoEqualFold(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEqualFold(FieldFlightNo, v))
}

// FlightNoContainsFold applies the ContainsFold predicate on the "flight_no" field.
func FlightNoContainsFold(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldContainsFold(FieldFlightNo, v))
}

// RouteIDEQ applies the EQ predicate on the "route_id" field.
func RouteIDEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldRouteID, v))
}

// RouteIDNEQ applies the NEQ predicate on the "route_id" field.
func RouteIDNEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldRouteID, v))
}

// RouteIDIn applies the In predicate on the "route_id" field.
func RouteIDIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldRouteID, vs...))
}

// RouteIDNotIn applies the NotIn predicate on the "route_id" field.
func RouteIDNotIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldRouteID, vs...))
}

// RouteIDGT applies the GT predicate on the "route_id" field.
func RouteIDGT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldRouteID, v))
}

// RouteIDGTE applies the GTE predicate on the "route_id" field.
func RouteIDGTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldRouteID, v))
}

// RouteIDLT applies the LT predicate on the "route_id" field.
func RouteIDLT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldRouteID, v))
}

// RouteIDLTE applies the LTE predicate on the "route_id" field.
func RouteIDLTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldRouteID, v))
}

// RouteNameEQ applies the EQ predicate on the "route_name" field.
func RouteNameEQ(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldRouteName, v))
}

// RouteNameNEQ applies the NEQ predicate on the "route_name" field.
func RouteNameNEQ(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldRouteName, v))
}

// RouteNameIn applies the In predicate on the "route_name" field.
func RouteNameIn(vs ...string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldRouteName, vs...))
}

// RouteNameNotIn applies the NotIn predicate on the "route_name" field.
func RouteNameNotIn(vs ...string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldRouteName, vs...))
}

// RouteNameGT applies the GT predicate on the "route_name" field.
func RouteNameGT(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldRouteName, v))
}

// RouteNameGTE applies the GTE predicate on the "route_name" field.
func RouteNameGTE(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldRouteName, v))
}

// RouteNameLT applies the LT predicate on the "route_name" field.
func RouteNameLT(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldRouteName, v))
}

// RouteNameLTE applies the LTE predicate on the "route_name" field.
func RouteNameLTE(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldRouteName, v))
}

// RouteNameContains applies the Contains predicate on the "route_name" field.
func RouteNameContains(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldContains(FieldRouteName, v))
}

// RouteNameHasPrefix applies the HasPrefix predicate on the "route_name" field.
func RouteNameHasPrefix(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldHasPrefix(FieldRouteName, v))
}

// RouteNameHasSuffix applies the HasSuffix predicate on the "route_name" field.
func RouteNameHasSuffix(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldHasSuffix(FieldRouteName, v))
}

// RouteNameEqualFold applies the EqualFold predicate on the "route_name" field.
func RouteNameEqualFold(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEqualFold(FieldRouteName, v))
}

// RouteNameContainsFold applies the ContainsFold predicate on the "route_name" field.
func RouteNameContainsFold(v string) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldContainsFold(FieldRouteName, v))
}

// StartStopIDEQ applies the EQ predicate on the "start_stop_id" field.
func StartStopIDEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldStartStopID, v))
}

// StartStopIDNEQ applies the NEQ predicate on the "start_stop_id" field.
func StartStopIDNEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldStartStopID, v))
}

// StartStopIDIn applies the In predicate on the "start_stop_id" field.
func StartStopIDIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldStartStopID, vs...))
}

// StartStopIDNotIn applies the NotIn predicate on the "start_stop_id" field.
func StartStopIDNotIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldStartStopID, vs...))
}

// StartStopIDGT applies the GT predicate on the "start_stop_id" field.
func StartStopIDGT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldStartStopID, v))
}

// StartStopIDGTE applies the GTE predicate on the "start_stop_id" field.
func StartStopIDGTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldStartStopID, v))
}

// StartStopIDLT applies the LT predicate on the "start_stop_id" field.
func StartStopIDLT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldStartStopID, v))
}

// StartStopIDLTE applies the LTE predicate on the "start_stop_id" field.
func StartStopIDLTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldStartStopID, v))
}

// EndStopIDEQ applies the EQ predicate on the "end_stop_id" field.
func EndStopIDEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldEndStopID, v))
}

// EndStopIDNEQ applies the NEQ predicate on the "end_stop_id" field.
func EndStopIDNEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldEndStopID, v))
}

// EndStopIDIn applies the In predicate on the "end_stop_id" field.
func EndStopIDIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldEndStopID, vs...))
}

// EndStopIDNotIn applies the NotIn predicate on the "end_stop_id" field.
func EndStopIDNotIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldEndStopID, vs...))
}

// EndStopIDGT applies the GT predicate on the "end_stop_id" field.
func EndStopIDGT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldEndStopID, v))
}

// EndStopIDGTE applies the GTE predicate on the "end_stop_id" field.
func EndStopIDGTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldEndStopID, v))
}

// EndStopIDLT applies the LT predicate on the "end_stop_id" field.
func EndStopIDLT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldEndStopID, v))
}

// EndStopIDLTE applies the LTE predicate on the "end_stop_id" field.
func EndStopIDLTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldEndStopID, v))
}

// TicketCountEQ applies the EQ predicate on the "ticket_count" field.
func TicketCountEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldTicketCount, v))
}

// TicketCountNEQ applies the NEQ predicate on the "ticket_count" field.
func TicketCountNEQ(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldTicketCount, v))
}

// TicketCountIn applies the In predicate on the "ticket_count" field.
func TicketCountIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldTicketCount, vs...))
}

// TicketCountNotIn applies the NotIn predicate on the "ticket_count" field.
func TicketCountNotIn(vs ...int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldTicketCount, vs...))
}

// TicketCountGT applies the GT predicate on the "ticket_count" field.
func TicketCountGT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldTicketCount, v))
}

// TicketCountGTE applies the GTE predicate on the "ticket_count" field.
func TicketCountGTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldTicketCount, v))
}

// TicketCountLT applies the LT predicate on the "ticket_count" field.
func TicketCountLT(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldTicketCount, v))
}

// TicketCountLTE applies the LTE predicate on the "ticket_count" field.
func TicketCountLTE(v int) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldTicketCount, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderExtendFlight) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderExtendFlight) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderExtendFlight) predicate.OrderExtendFlight {
	return predicate.OrderExtendFlight(sql.NotPredicates(p))
}
