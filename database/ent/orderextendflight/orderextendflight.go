// Code generated by ent, DO NOT EDIT.

package orderextendflight

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the orderextendflight type in the database.
	Label = "order_extend_flight"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldFlightID holds the string denoting the flight_id field in the database.
	FieldFlightID = "flight_id"
	// FieldFlightNo holds the string denoting the flight_no field in the database.
	FieldFlightNo = "flight_no"
	// FieldStopIds holds the string denoting the stop_ids field in the database.
	FieldStopIds = "stop_ids"
	// FieldTicketCount holds the string denoting the ticket_count field in the database.
	FieldTicketCount = "ticket_count"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the orderextendflight in the database.
	Table = "order_extend_flights"
)

// Columns holds all SQL columns for orderextendflight fields.
var Columns = []string{
	FieldID,
	FieldOrderID,
	FieldFlightID,
	FieldFlightNo,
	FieldStopIds,
	FieldTicketCount,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultFlightID holds the default value on creation for the "flight_id" field.
	DefaultFlightID int
	// DefaultFlightNo holds the default value on creation for the "flight_no" field.
	DefaultFlightNo string
	// DefaultTicketCount holds the default value on creation for the "ticket_count" field.
	DefaultTicketCount int
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)

// OrderOption defines the ordering options for the OrderExtendFlight queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByOrderID orders the results by the order_id field.
func ByOrderID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrderID, opts...).ToFunc()
}

// ByFlightID orders the results by the flight_id field.
func ByFlightID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFlightID, opts...).ToFunc()
}

// ByFlightNo orders the results by the flight_no field.
func ByFlightNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFlightNo, opts...).ToFunc()
}

// ByTicketCount orders the results by the ticket_count field.
func ByTicketCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTicketCount, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByUpdateTime orders the results by the update_time field.
func ByUpdateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateTime, opts...).ToFunc()
}
