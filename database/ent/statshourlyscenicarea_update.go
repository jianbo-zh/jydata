// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"github.com/jianbo-zh/jydata/database/ent/statshourlyscenicarea"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// StatsHourlyScenicAreaUpdate is the builder for updating StatsHourlyScenicArea entities.
type StatsHourlyScenicAreaUpdate struct {
	config
	hooks    []Hook
	mutation *StatsHourlyScenicAreaMutation
}

// Where appends a list predicates to the StatsHourlyScenicAreaUpdate builder.
func (shsau *StatsHourlyScenicAreaUpdate) Where(ps ...predicate.StatsHourlyScenicArea) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.Where(ps...)
	return shsau
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetScenicAreaID(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetScenicAreaID()
	shsau.mutation.SetScenicAreaID(i)
	return shsau
}

// SetNillableScenicAreaID sets the "scenic_area_id" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableScenicAreaID(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetScenicAreaID(*i)
	}
	return shsau
}

// AddScenicAreaID adds i to the "scenic_area_id" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddScenicAreaID(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddScenicAreaID(i)
	return shsau
}

// SetY sets the "y" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetY(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetY()
	shsau.mutation.SetY(i)
	return shsau
}

// SetNillableY sets the "y" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableY(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetY(*i)
	}
	return shsau
}

// AddY adds i to the "y" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddY(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddY(i)
	return shsau
}

// SetM sets the "m" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetM(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetM()
	shsau.mutation.SetM(i)
	return shsau
}

// SetNillableM sets the "m" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableM(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetM(*i)
	}
	return shsau
}

// AddM adds i to the "m" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddM(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddM(i)
	return shsau
}

// SetD sets the "d" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetD(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetD()
	shsau.mutation.SetD(i)
	return shsau
}

// SetNillableD sets the "d" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableD(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetD(*i)
	}
	return shsau
}

// AddD adds i to the "d" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddD(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddD(i)
	return shsau
}

// SetH sets the "h" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetH(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetH()
	shsau.mutation.SetH(i)
	return shsau
}

// SetNillableH sets the "h" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableH(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetH(*i)
	}
	return shsau
}

// AddH adds i to the "h" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddH(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddH(i)
	return shsau
}

// SetWeek sets the "week" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetWeek(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetWeek()
	shsau.mutation.SetWeek(i)
	return shsau
}

// SetNillableWeek sets the "week" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableWeek(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetWeek(*i)
	}
	return shsau
}

// AddWeek adds i to the "week" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddWeek(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddWeek(i)
	return shsau
}

// SetWeekday sets the "weekday" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetWeekday(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetWeekday()
	shsau.mutation.SetWeekday(i)
	return shsau
}

// SetNillableWeekday sets the "weekday" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableWeekday(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetWeekday(*i)
	}
	return shsau
}

// AddWeekday adds i to the "weekday" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddWeekday(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddWeekday(i)
	return shsau
}

// SetPeriod sets the "period" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetPeriod(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetPeriod()
	shsau.mutation.SetPeriod(i)
	return shsau
}

// SetNillablePeriod sets the "period" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillablePeriod(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetPeriod(*i)
	}
	return shsau
}

// AddPeriod adds i to the "period" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddPeriod(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddPeriod(i)
	return shsau
}

// SetUserCountLogin sets the "user_count_login" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetUserCountLogin(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetUserCountLogin()
	shsau.mutation.SetUserCountLogin(i)
	return shsau
}

// SetNillableUserCountLogin sets the "user_count_login" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableUserCountLogin(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetUserCountLogin(*i)
	}
	return shsau
}

// AddUserCountLogin adds i to the "user_count_login" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddUserCountLogin(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddUserCountLogin(i)
	return shsau
}

// SetUserCountRegister sets the "user_count_register" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetUserCountRegister(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetUserCountRegister()
	shsau.mutation.SetUserCountRegister(i)
	return shsau
}

// SetNillableUserCountRegister sets the "user_count_register" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableUserCountRegister(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetUserCountRegister(*i)
	}
	return shsau
}

// AddUserCountRegister adds i to the "user_count_register" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddUserCountRegister(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddUserCountRegister(i)
	return shsau
}

// SetUserCountOrder sets the "user_count_order" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetUserCountOrder(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetUserCountOrder()
	shsau.mutation.SetUserCountOrder(i)
	return shsau
}

// SetNillableUserCountOrder sets the "user_count_order" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableUserCountOrder(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetUserCountOrder(*i)
	}
	return shsau
}

// AddUserCountOrder adds i to the "user_count_order" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddUserCountOrder(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddUserCountOrder(i)
	return shsau
}

// SetOrderCountCreate sets the "order_count_create" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetOrderCountCreate(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetOrderCountCreate()
	shsau.mutation.SetOrderCountCreate(i)
	return shsau
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableOrderCountCreate(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetOrderCountCreate(*i)
	}
	return shsau
}

// AddOrderCountCreate adds i to the "order_count_create" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddOrderCountCreate(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddOrderCountCreate(i)
	return shsau
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetOrderCountFinish(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetOrderCountFinish()
	shsau.mutation.SetOrderCountFinish(i)
	return shsau
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableOrderCountFinish(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetOrderCountFinish(*i)
	}
	return shsau
}

// AddOrderCountFinish adds i to the "order_count_finish" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddOrderCountFinish(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddOrderCountFinish(i)
	return shsau
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetOrderCountCancel(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetOrderCountCancel()
	shsau.mutation.SetOrderCountCancel(i)
	return shsau
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableOrderCountCancel(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetOrderCountCancel(*i)
	}
	return shsau
}

// AddOrderCountCancel adds i to the "order_count_cancel" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddOrderCountCancel(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddOrderCountCancel(i)
	return shsau
}

// SetOrderAmount sets the "order_amount" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetOrderAmount(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetOrderAmount()
	shsau.mutation.SetOrderAmount(i)
	return shsau
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableOrderAmount(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetOrderAmount(*i)
	}
	return shsau
}

// AddOrderAmount adds i to the "order_amount" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddOrderAmount(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddOrderAmount(i)
	return shsau
}

// SetOrderDuration sets the "order_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetOrderDuration(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetOrderDuration()
	shsau.mutation.SetOrderDuration(i)
	return shsau
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableOrderDuration(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetOrderDuration(*i)
	}
	return shsau
}

// AddOrderDuration adds i to the "order_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddOrderDuration(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddOrderDuration(i)
	return shsau
}

// SetOrderMileage sets the "order_mileage" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetOrderMileage(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetOrderMileage()
	shsau.mutation.SetOrderMileage(i)
	return shsau
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableOrderMileage(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetOrderMileage(*i)
	}
	return shsau
}

// AddOrderMileage adds i to the "order_mileage" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddOrderMileage(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddOrderMileage(i)
	return shsau
}

// SetCarCountDeploy sets the "car_count_deploy" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarCountDeploy(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarCountDeploy()
	shsau.mutation.SetCarCountDeploy(i)
	return shsau
}

// SetNillableCarCountDeploy sets the "car_count_deploy" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarCountDeploy(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetCarCountDeploy(*i)
	}
	return shsau
}

// AddCarCountDeploy adds i to the "car_count_deploy" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarCountDeploy(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarCountDeploy(i)
	return shsau
}

// SetCarCountOperation sets the "car_count_operation" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarCountOperation(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarCountOperation()
	shsau.mutation.SetCarCountOperation(i)
	return shsau
}

// SetNillableCarCountOperation sets the "car_count_operation" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarCountOperation(i *int) *StatsHourlyScenicAreaUpdate {
	if i != nil {
		shsau.SetCarCountOperation(*i)
	}
	return shsau
}

// AddCarCountOperation adds i to the "car_count_operation" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarCountOperation(i int) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarCountOperation(i)
	return shsau
}

// SetCarOperationManualDuration sets the "car_operation_manual_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarOperationManualDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarOperationManualDuration()
	shsau.mutation.SetCarOperationManualDuration(f)
	return shsau
}

// SetNillableCarOperationManualDuration sets the "car_operation_manual_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarOperationManualDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarOperationManualDuration(*f)
	}
	return shsau
}

// AddCarOperationManualDuration adds f to the "car_operation_manual_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarOperationManualDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarOperationManualDuration(f)
	return shsau
}

// SetCarOperationAutoDuration sets the "car_operation_auto_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarOperationAutoDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarOperationAutoDuration()
	shsau.mutation.SetCarOperationAutoDuration(f)
	return shsau
}

// SetNillableCarOperationAutoDuration sets the "car_operation_auto_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarOperationAutoDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarOperationAutoDuration(*f)
	}
	return shsau
}

// AddCarOperationAutoDuration adds f to the "car_operation_auto_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarOperationAutoDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarOperationAutoDuration(f)
	return shsau
}

// SetCarOperationNormalDuration sets the "car_operation_normal_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarOperationNormalDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarOperationNormalDuration()
	shsau.mutation.SetCarOperationNormalDuration(f)
	return shsau
}

// SetNillableCarOperationNormalDuration sets the "car_operation_normal_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarOperationNormalDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarOperationNormalDuration(*f)
	}
	return shsau
}

// AddCarOperationNormalDuration adds f to the "car_operation_normal_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarOperationNormalDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarOperationNormalDuration(f)
	return shsau
}

// SetCarOperationFaultDuration sets the "car_operation_fault_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarOperationFaultDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarOperationFaultDuration()
	shsau.mutation.SetCarOperationFaultDuration(f)
	return shsau
}

// SetNillableCarOperationFaultDuration sets the "car_operation_fault_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarOperationFaultDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarOperationFaultDuration(*f)
	}
	return shsau
}

// AddCarOperationFaultDuration adds f to the "car_operation_fault_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarOperationFaultDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarOperationFaultDuration(f)
	return shsau
}

// SetCarOperationMileage sets the "car_operation_mileage" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarOperationMileage(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarOperationMileage()
	shsau.mutation.SetCarOperationMileage(f)
	return shsau
}

// SetNillableCarOperationMileage sets the "car_operation_mileage" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarOperationMileage(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarOperationMileage(*f)
	}
	return shsau
}

// AddCarOperationMileage adds f to the "car_operation_mileage" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarOperationMileage(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarOperationMileage(f)
	return shsau
}

// SetCarOperationFaultTimes sets the "car_operation_fault_times" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarOperationFaultTimes(u uint32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarOperationFaultTimes()
	shsau.mutation.SetCarOperationFaultTimes(u)
	return shsau
}

// SetNillableCarOperationFaultTimes sets the "car_operation_fault_times" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarOperationFaultTimes(u *uint32) *StatsHourlyScenicAreaUpdate {
	if u != nil {
		shsau.SetCarOperationFaultTimes(*u)
	}
	return shsau
}

// AddCarOperationFaultTimes adds u to the "car_operation_fault_times" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarOperationFaultTimes(u int32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarOperationFaultTimes(u)
	return shsau
}

// SetCarMaintainManualDuration sets the "car_maintain_manual_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarMaintainManualDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarMaintainManualDuration()
	shsau.mutation.SetCarMaintainManualDuration(f)
	return shsau
}

// SetNillableCarMaintainManualDuration sets the "car_maintain_manual_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarMaintainManualDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarMaintainManualDuration(*f)
	}
	return shsau
}

// AddCarMaintainManualDuration adds f to the "car_maintain_manual_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarMaintainManualDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarMaintainManualDuration(f)
	return shsau
}

// SetCarMaintainAutoDuration sets the "car_maintain_auto_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarMaintainAutoDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarMaintainAutoDuration()
	shsau.mutation.SetCarMaintainAutoDuration(f)
	return shsau
}

// SetNillableCarMaintainAutoDuration sets the "car_maintain_auto_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarMaintainAutoDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarMaintainAutoDuration(*f)
	}
	return shsau
}

// AddCarMaintainAutoDuration adds f to the "car_maintain_auto_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarMaintainAutoDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarMaintainAutoDuration(f)
	return shsau
}

// SetCarMaintainNormalDuration sets the "car_maintain_normal_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarMaintainNormalDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarMaintainNormalDuration()
	shsau.mutation.SetCarMaintainNormalDuration(f)
	return shsau
}

// SetNillableCarMaintainNormalDuration sets the "car_maintain_normal_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarMaintainNormalDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarMaintainNormalDuration(*f)
	}
	return shsau
}

// AddCarMaintainNormalDuration adds f to the "car_maintain_normal_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarMaintainNormalDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarMaintainNormalDuration(f)
	return shsau
}

// SetCarMaintainFaultDuration sets the "car_maintain_fault_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarMaintainFaultDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarMaintainFaultDuration()
	shsau.mutation.SetCarMaintainFaultDuration(f)
	return shsau
}

// SetNillableCarMaintainFaultDuration sets the "car_maintain_fault_duration" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarMaintainFaultDuration(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarMaintainFaultDuration(*f)
	}
	return shsau
}

// AddCarMaintainFaultDuration adds f to the "car_maintain_fault_duration" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarMaintainFaultDuration(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarMaintainFaultDuration(f)
	return shsau
}

// SetCarMaintainMileage sets the "car_maintain_mileage" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarMaintainMileage(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarMaintainMileage()
	shsau.mutation.SetCarMaintainMileage(f)
	return shsau
}

// SetNillableCarMaintainMileage sets the "car_maintain_mileage" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarMaintainMileage(f *float32) *StatsHourlyScenicAreaUpdate {
	if f != nil {
		shsau.SetCarMaintainMileage(*f)
	}
	return shsau
}

// AddCarMaintainMileage adds f to the "car_maintain_mileage" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarMaintainMileage(f float32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarMaintainMileage(f)
	return shsau
}

// SetCarMaintainFaultTimes sets the "car_maintain_fault_times" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarMaintainFaultTimes(u uint32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarMaintainFaultTimes()
	shsau.mutation.SetCarMaintainFaultTimes(u)
	return shsau
}

// SetNillableCarMaintainFaultTimes sets the "car_maintain_fault_times" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarMaintainFaultTimes(u *uint32) *StatsHourlyScenicAreaUpdate {
	if u != nil {
		shsau.SetCarMaintainFaultTimes(*u)
	}
	return shsau
}

// AddCarMaintainFaultTimes adds u to the "car_maintain_fault_times" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarMaintainFaultTimes(u int32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarMaintainFaultTimes(u)
	return shsau
}

// SetCarAlarmTimes sets the "car_alarm_times" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetCarAlarmTimes(u uint32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.ResetCarAlarmTimes()
	shsau.mutation.SetCarAlarmTimes(u)
	return shsau
}

// SetNillableCarAlarmTimes sets the "car_alarm_times" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableCarAlarmTimes(u *uint32) *StatsHourlyScenicAreaUpdate {
	if u != nil {
		shsau.SetCarAlarmTimes(*u)
	}
	return shsau
}

// AddCarAlarmTimes adds u to the "car_alarm_times" field.
func (shsau *StatsHourlyScenicAreaUpdate) AddCarAlarmTimes(u int32) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.AddCarAlarmTimes(u)
	return shsau
}

// SetStatsTime sets the "stats_time" field.
func (shsau *StatsHourlyScenicAreaUpdate) SetStatsTime(t time.Time) *StatsHourlyScenicAreaUpdate {
	shsau.mutation.SetStatsTime(t)
	return shsau
}

// SetNillableStatsTime sets the "stats_time" field if the given value is not nil.
func (shsau *StatsHourlyScenicAreaUpdate) SetNillableStatsTime(t *time.Time) *StatsHourlyScenicAreaUpdate {
	if t != nil {
		shsau.SetStatsTime(*t)
	}
	return shsau
}

// Mutation returns the StatsHourlyScenicAreaMutation object of the builder.
func (shsau *StatsHourlyScenicAreaUpdate) Mutation() *StatsHourlyScenicAreaMutation {
	return shsau.mutation
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (shsau *StatsHourlyScenicAreaUpdate) Save(ctx context.Context) (int, error) {
	return withHooks(ctx, shsau.sqlSave, shsau.mutation, shsau.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (shsau *StatsHourlyScenicAreaUpdate) SaveX(ctx context.Context) int {
	affected, err := shsau.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (shsau *StatsHourlyScenicAreaUpdate) Exec(ctx context.Context) error {
	_, err := shsau.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (shsau *StatsHourlyScenicAreaUpdate) ExecX(ctx context.Context) {
	if err := shsau.Exec(ctx); err != nil {
		panic(err)
	}
}

func (shsau *StatsHourlyScenicAreaUpdate) sqlSave(ctx context.Context) (n int, err error) {
	_spec := sqlgraph.NewUpdateSpec(statshourlyscenicarea.Table, statshourlyscenicarea.Columns, sqlgraph.NewFieldSpec(statshourlyscenicarea.FieldID, field.TypeInt))
	if ps := shsau.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := shsau.mutation.ScenicAreaID(); ok {
		_spec.SetField(statshourlyscenicarea.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedScenicAreaID(); ok {
		_spec.AddField(statshourlyscenicarea.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.Y(); ok {
		_spec.SetField(statshourlyscenicarea.FieldY, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedY(); ok {
		_spec.AddField(statshourlyscenicarea.FieldY, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.M(); ok {
		_spec.SetField(statshourlyscenicarea.FieldM, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedM(); ok {
		_spec.AddField(statshourlyscenicarea.FieldM, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.D(); ok {
		_spec.SetField(statshourlyscenicarea.FieldD, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedD(); ok {
		_spec.AddField(statshourlyscenicarea.FieldD, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.H(); ok {
		_spec.SetField(statshourlyscenicarea.FieldH, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedH(); ok {
		_spec.AddField(statshourlyscenicarea.FieldH, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.Week(); ok {
		_spec.SetField(statshourlyscenicarea.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedWeek(); ok {
		_spec.AddField(statshourlyscenicarea.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.Weekday(); ok {
		_spec.SetField(statshourlyscenicarea.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedWeekday(); ok {
		_spec.AddField(statshourlyscenicarea.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.Period(); ok {
		_spec.SetField(statshourlyscenicarea.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedPeriod(); ok {
		_spec.AddField(statshourlyscenicarea.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.UserCountLogin(); ok {
		_spec.SetField(statshourlyscenicarea.FieldUserCountLogin, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedUserCountLogin(); ok {
		_spec.AddField(statshourlyscenicarea.FieldUserCountLogin, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.UserCountRegister(); ok {
		_spec.SetField(statshourlyscenicarea.FieldUserCountRegister, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedUserCountRegister(); ok {
		_spec.AddField(statshourlyscenicarea.FieldUserCountRegister, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.UserCountOrder(); ok {
		_spec.SetField(statshourlyscenicarea.FieldUserCountOrder, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedUserCountOrder(); ok {
		_spec.AddField(statshourlyscenicarea.FieldUserCountOrder, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.OrderCountCreate(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedOrderCountCreate(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.OrderCountFinish(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedOrderCountFinish(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.OrderCountCancel(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedOrderCountCancel(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.OrderAmount(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedOrderAmount(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.OrderDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedOrderDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.OrderMileage(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedOrderMileage(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.CarCountDeploy(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarCountDeploy, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedCarCountDeploy(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarCountDeploy, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.CarCountOperation(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarCountOperation, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.AddedCarCountOperation(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarCountOperation, field.TypeInt, value)
	}
	if value, ok := shsau.mutation.CarOperationManualDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarOperationManualDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarOperationAutoDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarOperationAutoDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarOperationNormalDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarOperationNormalDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarOperationFaultDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarOperationFaultDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarOperationMileage(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationMileage, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarOperationMileage(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationMileage, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarOperationFaultTimes(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsau.mutation.AddedCarOperationFaultTimes(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsau.mutation.CarMaintainManualDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarMaintainManualDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarMaintainAutoDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarMaintainAutoDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarMaintainNormalDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarMaintainNormalDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarMaintainFaultDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarMaintainFaultDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarMaintainMileage(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainMileage, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.AddedCarMaintainMileage(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainMileage, field.TypeFloat32, value)
	}
	if value, ok := shsau.mutation.CarMaintainFaultTimes(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsau.mutation.AddedCarMaintainFaultTimes(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsau.mutation.CarAlarmTimes(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shsau.mutation.AddedCarAlarmTimes(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shsau.mutation.StatsTime(); ok {
		_spec.SetField(statshourlyscenicarea.FieldStatsTime, field.TypeTime, value)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, shsau.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{statshourlyscenicarea.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	shsau.mutation.done = true
	return n, nil
}

// StatsHourlyScenicAreaUpdateOne is the builder for updating a single StatsHourlyScenicArea entity.
type StatsHourlyScenicAreaUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *StatsHourlyScenicAreaMutation
}

// SetScenicAreaID sets the "scenic_area_id" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetScenicAreaID(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetScenicAreaID()
	shsauo.mutation.SetScenicAreaID(i)
	return shsauo
}

// SetNillableScenicAreaID sets the "scenic_area_id" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableScenicAreaID(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetScenicAreaID(*i)
	}
	return shsauo
}

// AddScenicAreaID adds i to the "scenic_area_id" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddScenicAreaID(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddScenicAreaID(i)
	return shsauo
}

// SetY sets the "y" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetY(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetY()
	shsauo.mutation.SetY(i)
	return shsauo
}

// SetNillableY sets the "y" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableY(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetY(*i)
	}
	return shsauo
}

// AddY adds i to the "y" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddY(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddY(i)
	return shsauo
}

// SetM sets the "m" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetM(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetM()
	shsauo.mutation.SetM(i)
	return shsauo
}

// SetNillableM sets the "m" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableM(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetM(*i)
	}
	return shsauo
}

// AddM adds i to the "m" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddM(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddM(i)
	return shsauo
}

// SetD sets the "d" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetD(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetD()
	shsauo.mutation.SetD(i)
	return shsauo
}

// SetNillableD sets the "d" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableD(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetD(*i)
	}
	return shsauo
}

// AddD adds i to the "d" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddD(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddD(i)
	return shsauo
}

// SetH sets the "h" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetH(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetH()
	shsauo.mutation.SetH(i)
	return shsauo
}

// SetNillableH sets the "h" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableH(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetH(*i)
	}
	return shsauo
}

// AddH adds i to the "h" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddH(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddH(i)
	return shsauo
}

// SetWeek sets the "week" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetWeek(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetWeek()
	shsauo.mutation.SetWeek(i)
	return shsauo
}

// SetNillableWeek sets the "week" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableWeek(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetWeek(*i)
	}
	return shsauo
}

// AddWeek adds i to the "week" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddWeek(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddWeek(i)
	return shsauo
}

// SetWeekday sets the "weekday" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetWeekday(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetWeekday()
	shsauo.mutation.SetWeekday(i)
	return shsauo
}

// SetNillableWeekday sets the "weekday" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableWeekday(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetWeekday(*i)
	}
	return shsauo
}

// AddWeekday adds i to the "weekday" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddWeekday(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddWeekday(i)
	return shsauo
}

// SetPeriod sets the "period" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetPeriod(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetPeriod()
	shsauo.mutation.SetPeriod(i)
	return shsauo
}

// SetNillablePeriod sets the "period" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillablePeriod(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetPeriod(*i)
	}
	return shsauo
}

// AddPeriod adds i to the "period" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddPeriod(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddPeriod(i)
	return shsauo
}

// SetUserCountLogin sets the "user_count_login" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetUserCountLogin(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetUserCountLogin()
	shsauo.mutation.SetUserCountLogin(i)
	return shsauo
}

// SetNillableUserCountLogin sets the "user_count_login" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableUserCountLogin(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetUserCountLogin(*i)
	}
	return shsauo
}

// AddUserCountLogin adds i to the "user_count_login" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddUserCountLogin(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddUserCountLogin(i)
	return shsauo
}

// SetUserCountRegister sets the "user_count_register" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetUserCountRegister(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetUserCountRegister()
	shsauo.mutation.SetUserCountRegister(i)
	return shsauo
}

// SetNillableUserCountRegister sets the "user_count_register" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableUserCountRegister(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetUserCountRegister(*i)
	}
	return shsauo
}

// AddUserCountRegister adds i to the "user_count_register" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddUserCountRegister(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddUserCountRegister(i)
	return shsauo
}

// SetUserCountOrder sets the "user_count_order" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetUserCountOrder(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetUserCountOrder()
	shsauo.mutation.SetUserCountOrder(i)
	return shsauo
}

// SetNillableUserCountOrder sets the "user_count_order" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableUserCountOrder(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetUserCountOrder(*i)
	}
	return shsauo
}

// AddUserCountOrder adds i to the "user_count_order" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddUserCountOrder(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddUserCountOrder(i)
	return shsauo
}

// SetOrderCountCreate sets the "order_count_create" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetOrderCountCreate(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetOrderCountCreate()
	shsauo.mutation.SetOrderCountCreate(i)
	return shsauo
}

// SetNillableOrderCountCreate sets the "order_count_create" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableOrderCountCreate(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetOrderCountCreate(*i)
	}
	return shsauo
}

// AddOrderCountCreate adds i to the "order_count_create" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddOrderCountCreate(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddOrderCountCreate(i)
	return shsauo
}

// SetOrderCountFinish sets the "order_count_finish" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetOrderCountFinish(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetOrderCountFinish()
	shsauo.mutation.SetOrderCountFinish(i)
	return shsauo
}

// SetNillableOrderCountFinish sets the "order_count_finish" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableOrderCountFinish(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetOrderCountFinish(*i)
	}
	return shsauo
}

// AddOrderCountFinish adds i to the "order_count_finish" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddOrderCountFinish(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddOrderCountFinish(i)
	return shsauo
}

// SetOrderCountCancel sets the "order_count_cancel" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetOrderCountCancel(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetOrderCountCancel()
	shsauo.mutation.SetOrderCountCancel(i)
	return shsauo
}

// SetNillableOrderCountCancel sets the "order_count_cancel" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableOrderCountCancel(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetOrderCountCancel(*i)
	}
	return shsauo
}

// AddOrderCountCancel adds i to the "order_count_cancel" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddOrderCountCancel(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddOrderCountCancel(i)
	return shsauo
}

// SetOrderAmount sets the "order_amount" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetOrderAmount(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetOrderAmount()
	shsauo.mutation.SetOrderAmount(i)
	return shsauo
}

// SetNillableOrderAmount sets the "order_amount" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableOrderAmount(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetOrderAmount(*i)
	}
	return shsauo
}

// AddOrderAmount adds i to the "order_amount" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddOrderAmount(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddOrderAmount(i)
	return shsauo
}

// SetOrderDuration sets the "order_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetOrderDuration(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetOrderDuration()
	shsauo.mutation.SetOrderDuration(i)
	return shsauo
}

// SetNillableOrderDuration sets the "order_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableOrderDuration(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetOrderDuration(*i)
	}
	return shsauo
}

// AddOrderDuration adds i to the "order_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddOrderDuration(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddOrderDuration(i)
	return shsauo
}

// SetOrderMileage sets the "order_mileage" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetOrderMileage(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetOrderMileage()
	shsauo.mutation.SetOrderMileage(i)
	return shsauo
}

// SetNillableOrderMileage sets the "order_mileage" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableOrderMileage(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetOrderMileage(*i)
	}
	return shsauo
}

// AddOrderMileage adds i to the "order_mileage" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddOrderMileage(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddOrderMileage(i)
	return shsauo
}

// SetCarCountDeploy sets the "car_count_deploy" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarCountDeploy(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarCountDeploy()
	shsauo.mutation.SetCarCountDeploy(i)
	return shsauo
}

// SetNillableCarCountDeploy sets the "car_count_deploy" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarCountDeploy(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetCarCountDeploy(*i)
	}
	return shsauo
}

// AddCarCountDeploy adds i to the "car_count_deploy" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarCountDeploy(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarCountDeploy(i)
	return shsauo
}

// SetCarCountOperation sets the "car_count_operation" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarCountOperation(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarCountOperation()
	shsauo.mutation.SetCarCountOperation(i)
	return shsauo
}

// SetNillableCarCountOperation sets the "car_count_operation" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarCountOperation(i *int) *StatsHourlyScenicAreaUpdateOne {
	if i != nil {
		shsauo.SetCarCountOperation(*i)
	}
	return shsauo
}

// AddCarCountOperation adds i to the "car_count_operation" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarCountOperation(i int) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarCountOperation(i)
	return shsauo
}

// SetCarOperationManualDuration sets the "car_operation_manual_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarOperationManualDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarOperationManualDuration()
	shsauo.mutation.SetCarOperationManualDuration(f)
	return shsauo
}

// SetNillableCarOperationManualDuration sets the "car_operation_manual_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarOperationManualDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarOperationManualDuration(*f)
	}
	return shsauo
}

// AddCarOperationManualDuration adds f to the "car_operation_manual_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarOperationManualDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarOperationManualDuration(f)
	return shsauo
}

// SetCarOperationAutoDuration sets the "car_operation_auto_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarOperationAutoDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarOperationAutoDuration()
	shsauo.mutation.SetCarOperationAutoDuration(f)
	return shsauo
}

// SetNillableCarOperationAutoDuration sets the "car_operation_auto_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarOperationAutoDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarOperationAutoDuration(*f)
	}
	return shsauo
}

// AddCarOperationAutoDuration adds f to the "car_operation_auto_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarOperationAutoDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarOperationAutoDuration(f)
	return shsauo
}

// SetCarOperationNormalDuration sets the "car_operation_normal_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarOperationNormalDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarOperationNormalDuration()
	shsauo.mutation.SetCarOperationNormalDuration(f)
	return shsauo
}

// SetNillableCarOperationNormalDuration sets the "car_operation_normal_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarOperationNormalDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarOperationNormalDuration(*f)
	}
	return shsauo
}

// AddCarOperationNormalDuration adds f to the "car_operation_normal_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarOperationNormalDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarOperationNormalDuration(f)
	return shsauo
}

// SetCarOperationFaultDuration sets the "car_operation_fault_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarOperationFaultDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarOperationFaultDuration()
	shsauo.mutation.SetCarOperationFaultDuration(f)
	return shsauo
}

// SetNillableCarOperationFaultDuration sets the "car_operation_fault_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarOperationFaultDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarOperationFaultDuration(*f)
	}
	return shsauo
}

// AddCarOperationFaultDuration adds f to the "car_operation_fault_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarOperationFaultDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarOperationFaultDuration(f)
	return shsauo
}

// SetCarOperationMileage sets the "car_operation_mileage" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarOperationMileage(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarOperationMileage()
	shsauo.mutation.SetCarOperationMileage(f)
	return shsauo
}

// SetNillableCarOperationMileage sets the "car_operation_mileage" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarOperationMileage(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarOperationMileage(*f)
	}
	return shsauo
}

// AddCarOperationMileage adds f to the "car_operation_mileage" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarOperationMileage(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarOperationMileage(f)
	return shsauo
}

// SetCarOperationFaultTimes sets the "car_operation_fault_times" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarOperationFaultTimes(u uint32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarOperationFaultTimes()
	shsauo.mutation.SetCarOperationFaultTimes(u)
	return shsauo
}

// SetNillableCarOperationFaultTimes sets the "car_operation_fault_times" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarOperationFaultTimes(u *uint32) *StatsHourlyScenicAreaUpdateOne {
	if u != nil {
		shsauo.SetCarOperationFaultTimes(*u)
	}
	return shsauo
}

// AddCarOperationFaultTimes adds u to the "car_operation_fault_times" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarOperationFaultTimes(u int32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarOperationFaultTimes(u)
	return shsauo
}

// SetCarMaintainManualDuration sets the "car_maintain_manual_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarMaintainManualDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarMaintainManualDuration()
	shsauo.mutation.SetCarMaintainManualDuration(f)
	return shsauo
}

// SetNillableCarMaintainManualDuration sets the "car_maintain_manual_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarMaintainManualDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarMaintainManualDuration(*f)
	}
	return shsauo
}

// AddCarMaintainManualDuration adds f to the "car_maintain_manual_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarMaintainManualDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarMaintainManualDuration(f)
	return shsauo
}

// SetCarMaintainAutoDuration sets the "car_maintain_auto_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarMaintainAutoDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarMaintainAutoDuration()
	shsauo.mutation.SetCarMaintainAutoDuration(f)
	return shsauo
}

// SetNillableCarMaintainAutoDuration sets the "car_maintain_auto_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarMaintainAutoDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarMaintainAutoDuration(*f)
	}
	return shsauo
}

// AddCarMaintainAutoDuration adds f to the "car_maintain_auto_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarMaintainAutoDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarMaintainAutoDuration(f)
	return shsauo
}

// SetCarMaintainNormalDuration sets the "car_maintain_normal_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarMaintainNormalDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarMaintainNormalDuration()
	shsauo.mutation.SetCarMaintainNormalDuration(f)
	return shsauo
}

// SetNillableCarMaintainNormalDuration sets the "car_maintain_normal_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarMaintainNormalDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarMaintainNormalDuration(*f)
	}
	return shsauo
}

// AddCarMaintainNormalDuration adds f to the "car_maintain_normal_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarMaintainNormalDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarMaintainNormalDuration(f)
	return shsauo
}

// SetCarMaintainFaultDuration sets the "car_maintain_fault_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarMaintainFaultDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarMaintainFaultDuration()
	shsauo.mutation.SetCarMaintainFaultDuration(f)
	return shsauo
}

// SetNillableCarMaintainFaultDuration sets the "car_maintain_fault_duration" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarMaintainFaultDuration(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarMaintainFaultDuration(*f)
	}
	return shsauo
}

// AddCarMaintainFaultDuration adds f to the "car_maintain_fault_duration" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarMaintainFaultDuration(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarMaintainFaultDuration(f)
	return shsauo
}

// SetCarMaintainMileage sets the "car_maintain_mileage" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarMaintainMileage(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarMaintainMileage()
	shsauo.mutation.SetCarMaintainMileage(f)
	return shsauo
}

// SetNillableCarMaintainMileage sets the "car_maintain_mileage" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarMaintainMileage(f *float32) *StatsHourlyScenicAreaUpdateOne {
	if f != nil {
		shsauo.SetCarMaintainMileage(*f)
	}
	return shsauo
}

// AddCarMaintainMileage adds f to the "car_maintain_mileage" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarMaintainMileage(f float32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarMaintainMileage(f)
	return shsauo
}

// SetCarMaintainFaultTimes sets the "car_maintain_fault_times" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarMaintainFaultTimes(u uint32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarMaintainFaultTimes()
	shsauo.mutation.SetCarMaintainFaultTimes(u)
	return shsauo
}

// SetNillableCarMaintainFaultTimes sets the "car_maintain_fault_times" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarMaintainFaultTimes(u *uint32) *StatsHourlyScenicAreaUpdateOne {
	if u != nil {
		shsauo.SetCarMaintainFaultTimes(*u)
	}
	return shsauo
}

// AddCarMaintainFaultTimes adds u to the "car_maintain_fault_times" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarMaintainFaultTimes(u int32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarMaintainFaultTimes(u)
	return shsauo
}

// SetCarAlarmTimes sets the "car_alarm_times" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetCarAlarmTimes(u uint32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.ResetCarAlarmTimes()
	shsauo.mutation.SetCarAlarmTimes(u)
	return shsauo
}

// SetNillableCarAlarmTimes sets the "car_alarm_times" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableCarAlarmTimes(u *uint32) *StatsHourlyScenicAreaUpdateOne {
	if u != nil {
		shsauo.SetCarAlarmTimes(*u)
	}
	return shsauo
}

// AddCarAlarmTimes adds u to the "car_alarm_times" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) AddCarAlarmTimes(u int32) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.AddCarAlarmTimes(u)
	return shsauo
}

// SetStatsTime sets the "stats_time" field.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetStatsTime(t time.Time) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.SetStatsTime(t)
	return shsauo
}

// SetNillableStatsTime sets the "stats_time" field if the given value is not nil.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SetNillableStatsTime(t *time.Time) *StatsHourlyScenicAreaUpdateOne {
	if t != nil {
		shsauo.SetStatsTime(*t)
	}
	return shsauo
}

// Mutation returns the StatsHourlyScenicAreaMutation object of the builder.
func (shsauo *StatsHourlyScenicAreaUpdateOne) Mutation() *StatsHourlyScenicAreaMutation {
	return shsauo.mutation
}

// Where appends a list predicates to the StatsHourlyScenicAreaUpdate builder.
func (shsauo *StatsHourlyScenicAreaUpdateOne) Where(ps ...predicate.StatsHourlyScenicArea) *StatsHourlyScenicAreaUpdateOne {
	shsauo.mutation.Where(ps...)
	return shsauo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (shsauo *StatsHourlyScenicAreaUpdateOne) Select(field string, fields ...string) *StatsHourlyScenicAreaUpdateOne {
	shsauo.fields = append([]string{field}, fields...)
	return shsauo
}

// Save executes the query and returns the updated StatsHourlyScenicArea entity.
func (shsauo *StatsHourlyScenicAreaUpdateOne) Save(ctx context.Context) (*StatsHourlyScenicArea, error) {
	return withHooks(ctx, shsauo.sqlSave, shsauo.mutation, shsauo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (shsauo *StatsHourlyScenicAreaUpdateOne) SaveX(ctx context.Context) *StatsHourlyScenicArea {
	node, err := shsauo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (shsauo *StatsHourlyScenicAreaUpdateOne) Exec(ctx context.Context) error {
	_, err := shsauo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (shsauo *StatsHourlyScenicAreaUpdateOne) ExecX(ctx context.Context) {
	if err := shsauo.Exec(ctx); err != nil {
		panic(err)
	}
}

func (shsauo *StatsHourlyScenicAreaUpdateOne) sqlSave(ctx context.Context) (_node *StatsHourlyScenicArea, err error) {
	_spec := sqlgraph.NewUpdateSpec(statshourlyscenicarea.Table, statshourlyscenicarea.Columns, sqlgraph.NewFieldSpec(statshourlyscenicarea.FieldID, field.TypeInt))
	id, ok := shsauo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "StatsHourlyScenicArea.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := shsauo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, statshourlyscenicarea.FieldID)
		for _, f := range fields {
			if !statshourlyscenicarea.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != statshourlyscenicarea.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := shsauo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := shsauo.mutation.ScenicAreaID(); ok {
		_spec.SetField(statshourlyscenicarea.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedScenicAreaID(); ok {
		_spec.AddField(statshourlyscenicarea.FieldScenicAreaID, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.Y(); ok {
		_spec.SetField(statshourlyscenicarea.FieldY, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedY(); ok {
		_spec.AddField(statshourlyscenicarea.FieldY, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.M(); ok {
		_spec.SetField(statshourlyscenicarea.FieldM, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedM(); ok {
		_spec.AddField(statshourlyscenicarea.FieldM, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.D(); ok {
		_spec.SetField(statshourlyscenicarea.FieldD, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedD(); ok {
		_spec.AddField(statshourlyscenicarea.FieldD, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.H(); ok {
		_spec.SetField(statshourlyscenicarea.FieldH, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedH(); ok {
		_spec.AddField(statshourlyscenicarea.FieldH, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.Week(); ok {
		_spec.SetField(statshourlyscenicarea.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedWeek(); ok {
		_spec.AddField(statshourlyscenicarea.FieldWeek, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.Weekday(); ok {
		_spec.SetField(statshourlyscenicarea.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedWeekday(); ok {
		_spec.AddField(statshourlyscenicarea.FieldWeekday, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.Period(); ok {
		_spec.SetField(statshourlyscenicarea.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedPeriod(); ok {
		_spec.AddField(statshourlyscenicarea.FieldPeriod, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.UserCountLogin(); ok {
		_spec.SetField(statshourlyscenicarea.FieldUserCountLogin, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedUserCountLogin(); ok {
		_spec.AddField(statshourlyscenicarea.FieldUserCountLogin, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.UserCountRegister(); ok {
		_spec.SetField(statshourlyscenicarea.FieldUserCountRegister, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedUserCountRegister(); ok {
		_spec.AddField(statshourlyscenicarea.FieldUserCountRegister, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.UserCountOrder(); ok {
		_spec.SetField(statshourlyscenicarea.FieldUserCountOrder, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedUserCountOrder(); ok {
		_spec.AddField(statshourlyscenicarea.FieldUserCountOrder, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.OrderCountCreate(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedOrderCountCreate(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderCountCreate, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.OrderCountFinish(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedOrderCountFinish(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderCountFinish, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.OrderCountCancel(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedOrderCountCancel(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderCountCancel, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.OrderAmount(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedOrderAmount(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderAmount, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.OrderDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedOrderDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderDuration, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.OrderMileage(); ok {
		_spec.SetField(statshourlyscenicarea.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedOrderMileage(); ok {
		_spec.AddField(statshourlyscenicarea.FieldOrderMileage, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.CarCountDeploy(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarCountDeploy, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedCarCountDeploy(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarCountDeploy, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.CarCountOperation(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarCountOperation, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.AddedCarCountOperation(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarCountOperation, field.TypeInt, value)
	}
	if value, ok := shsauo.mutation.CarOperationManualDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarOperationManualDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarOperationAutoDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarOperationAutoDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarOperationNormalDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarOperationNormalDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarOperationFaultDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarOperationFaultDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarOperationMileage(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationMileage, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarOperationMileage(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationMileage, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarOperationFaultTimes(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsauo.mutation.AddedCarOperationFaultTimes(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarOperationFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsauo.mutation.CarMaintainManualDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarMaintainManualDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainManualDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarMaintainAutoDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarMaintainAutoDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainAutoDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarMaintainNormalDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarMaintainNormalDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainNormalDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarMaintainFaultDuration(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarMaintainFaultDuration(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainFaultDuration, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarMaintainMileage(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainMileage, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.AddedCarMaintainMileage(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainMileage, field.TypeFloat32, value)
	}
	if value, ok := shsauo.mutation.CarMaintainFaultTimes(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsauo.mutation.AddedCarMaintainFaultTimes(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarMaintainFaultTimes, field.TypeUint32, value)
	}
	if value, ok := shsauo.mutation.CarAlarmTimes(); ok {
		_spec.SetField(statshourlyscenicarea.FieldCarAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shsauo.mutation.AddedCarAlarmTimes(); ok {
		_spec.AddField(statshourlyscenicarea.FieldCarAlarmTimes, field.TypeUint32, value)
	}
	if value, ok := shsauo.mutation.StatsTime(); ok {
		_spec.SetField(statshourlyscenicarea.FieldStatsTime, field.TypeTime, value)
	}
	_node = &StatsHourlyScenicArea{config: shsauo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, shsauo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{statshourlyscenicarea.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	shsauo.mutation.done = true
	return _node, nil
}
