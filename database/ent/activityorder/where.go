// Code generated by ent, DO NOT EDIT.

package activityorder

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldID, id))
}

// OrderNo applies equality check predicate on the "order_no" field. It's identical to OrderNoEQ.
func OrderNo(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOrderNo, v))
}

// WxTxID applies equality check predicate on the "wx_tx_id" field. It's identical to WxTxIDEQ.
func WxTxID(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldWxTxID, v))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldScenicAreaID, v))
}

// MchID applies equality check predicate on the "mch_id" field. It's identical to MchIDEQ.
func MchID(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldMchID, v))
}

// ScenicAreaName applies equality check predicate on the "scenic_area_name" field. It's identical to ScenicAreaNameEQ.
func ScenicAreaName(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldScenicAreaName, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldUserID, v))
}

// OpenID applies equality check predicate on the "open_id" field. It's identical to OpenIDEQ.
func OpenID(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOpenID, v))
}

// OrderAmount applies equality check predicate on the "order_amount" field. It's identical to OrderAmountEQ.
func OrderAmount(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOrderAmount, v))
}

// OrderState applies equality check predicate on the "order_state" field. It's identical to OrderStateEQ.
func OrderState(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOrderState, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldRemark, v))
}

// PaidTime applies equality check predicate on the "paid_time" field. It's identical to PaidTimeEQ.
func PaidTime(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldPaidTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldUpdateTime, v))
}

// OrderNoEQ applies the EQ predicate on the "order_no" field.
func OrderNoEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOrderNo, v))
}

// OrderNoNEQ applies the NEQ predicate on the "order_no" field.
func OrderNoNEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldOrderNo, v))
}

// OrderNoIn applies the In predicate on the "order_no" field.
func OrderNoIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldOrderNo, vs...))
}

// OrderNoNotIn applies the NotIn predicate on the "order_no" field.
func OrderNoNotIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldOrderNo, vs...))
}

// OrderNoGT applies the GT predicate on the "order_no" field.
func OrderNoGT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldOrderNo, v))
}

// OrderNoGTE applies the GTE predicate on the "order_no" field.
func OrderNoGTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldOrderNo, v))
}

// OrderNoLT applies the LT predicate on the "order_no" field.
func OrderNoLT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldOrderNo, v))
}

// OrderNoLTE applies the LTE predicate on the "order_no" field.
func OrderNoLTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldOrderNo, v))
}

// OrderNoContains applies the Contains predicate on the "order_no" field.
func OrderNoContains(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContains(FieldOrderNo, v))
}

// OrderNoHasPrefix applies the HasPrefix predicate on the "order_no" field.
func OrderNoHasPrefix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasPrefix(FieldOrderNo, v))
}

// OrderNoHasSuffix applies the HasSuffix predicate on the "order_no" field.
func OrderNoHasSuffix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasSuffix(FieldOrderNo, v))
}

// OrderNoEqualFold applies the EqualFold predicate on the "order_no" field.
func OrderNoEqualFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEqualFold(FieldOrderNo, v))
}

// OrderNoContainsFold applies the ContainsFold predicate on the "order_no" field.
func OrderNoContainsFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContainsFold(FieldOrderNo, v))
}

// WxTxIDEQ applies the EQ predicate on the "wx_tx_id" field.
func WxTxIDEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldWxTxID, v))
}

// WxTxIDNEQ applies the NEQ predicate on the "wx_tx_id" field.
func WxTxIDNEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldWxTxID, v))
}

// WxTxIDIn applies the In predicate on the "wx_tx_id" field.
func WxTxIDIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldWxTxID, vs...))
}

// WxTxIDNotIn applies the NotIn predicate on the "wx_tx_id" field.
func WxTxIDNotIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldWxTxID, vs...))
}

// WxTxIDGT applies the GT predicate on the "wx_tx_id" field.
func WxTxIDGT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldWxTxID, v))
}

// WxTxIDGTE applies the GTE predicate on the "wx_tx_id" field.
func WxTxIDGTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldWxTxID, v))
}

// WxTxIDLT applies the LT predicate on the "wx_tx_id" field.
func WxTxIDLT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldWxTxID, v))
}

// WxTxIDLTE applies the LTE predicate on the "wx_tx_id" field.
func WxTxIDLTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldWxTxID, v))
}

// WxTxIDContains applies the Contains predicate on the "wx_tx_id" field.
func WxTxIDContains(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContains(FieldWxTxID, v))
}

// WxTxIDHasPrefix applies the HasPrefix predicate on the "wx_tx_id" field.
func WxTxIDHasPrefix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasPrefix(FieldWxTxID, v))
}

// WxTxIDHasSuffix applies the HasSuffix predicate on the "wx_tx_id" field.
func WxTxIDHasSuffix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasSuffix(FieldWxTxID, v))
}

// WxTxIDEqualFold applies the EqualFold predicate on the "wx_tx_id" field.
func WxTxIDEqualFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEqualFold(FieldWxTxID, v))
}

// WxTxIDContainsFold applies the ContainsFold predicate on the "wx_tx_id" field.
func WxTxIDContainsFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContainsFold(FieldWxTxID, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDGT applies the GT predicate on the "scenic_area_id" field.
func ScenicAreaIDGT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldScenicAreaID, v))
}

// ScenicAreaIDGTE applies the GTE predicate on the "scenic_area_id" field.
func ScenicAreaIDGTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldScenicAreaID, v))
}

// ScenicAreaIDLT applies the LT predicate on the "scenic_area_id" field.
func ScenicAreaIDLT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldScenicAreaID, v))
}

// ScenicAreaIDLTE applies the LTE predicate on the "scenic_area_id" field.
func ScenicAreaIDLTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldScenicAreaID, v))
}

// MchIDEQ applies the EQ predicate on the "mch_id" field.
func MchIDEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldMchID, v))
}

// MchIDNEQ applies the NEQ predicate on the "mch_id" field.
func MchIDNEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldMchID, v))
}

// MchIDIn applies the In predicate on the "mch_id" field.
func MchIDIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldMchID, vs...))
}

// MchIDNotIn applies the NotIn predicate on the "mch_id" field.
func MchIDNotIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldMchID, vs...))
}

// MchIDGT applies the GT predicate on the "mch_id" field.
func MchIDGT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldMchID, v))
}

// MchIDGTE applies the GTE predicate on the "mch_id" field.
func MchIDGTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldMchID, v))
}

// MchIDLT applies the LT predicate on the "mch_id" field.
func MchIDLT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldMchID, v))
}

// MchIDLTE applies the LTE predicate on the "mch_id" field.
func MchIDLTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldMchID, v))
}

// MchIDContains applies the Contains predicate on the "mch_id" field.
func MchIDContains(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContains(FieldMchID, v))
}

// MchIDHasPrefix applies the HasPrefix predicate on the "mch_id" field.
func MchIDHasPrefix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasPrefix(FieldMchID, v))
}

// MchIDHasSuffix applies the HasSuffix predicate on the "mch_id" field.
func MchIDHasSuffix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasSuffix(FieldMchID, v))
}

// MchIDEqualFold applies the EqualFold predicate on the "mch_id" field.
func MchIDEqualFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEqualFold(FieldMchID, v))
}

// MchIDContainsFold applies the ContainsFold predicate on the "mch_id" field.
func MchIDContainsFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContainsFold(FieldMchID, v))
}

// ScenicAreaNameEQ applies the EQ predicate on the "scenic_area_name" field.
func ScenicAreaNameEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldScenicAreaName, v))
}

// ScenicAreaNameNEQ applies the NEQ predicate on the "scenic_area_name" field.
func ScenicAreaNameNEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldScenicAreaName, v))
}

// ScenicAreaNameIn applies the In predicate on the "scenic_area_name" field.
func ScenicAreaNameIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldScenicAreaName, vs...))
}

// ScenicAreaNameNotIn applies the NotIn predicate on the "scenic_area_name" field.
func ScenicAreaNameNotIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldScenicAreaName, vs...))
}

// ScenicAreaNameGT applies the GT predicate on the "scenic_area_name" field.
func ScenicAreaNameGT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldScenicAreaName, v))
}

// ScenicAreaNameGTE applies the GTE predicate on the "scenic_area_name" field.
func ScenicAreaNameGTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldScenicAreaName, v))
}

// ScenicAreaNameLT applies the LT predicate on the "scenic_area_name" field.
func ScenicAreaNameLT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldScenicAreaName, v))
}

// ScenicAreaNameLTE applies the LTE predicate on the "scenic_area_name" field.
func ScenicAreaNameLTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldScenicAreaName, v))
}

// ScenicAreaNameContains applies the Contains predicate on the "scenic_area_name" field.
func ScenicAreaNameContains(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContains(FieldScenicAreaName, v))
}

// ScenicAreaNameHasPrefix applies the HasPrefix predicate on the "scenic_area_name" field.
func ScenicAreaNameHasPrefix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasPrefix(FieldScenicAreaName, v))
}

// ScenicAreaNameHasSuffix applies the HasSuffix predicate on the "scenic_area_name" field.
func ScenicAreaNameHasSuffix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasSuffix(FieldScenicAreaName, v))
}

// ScenicAreaNameEqualFold applies the EqualFold predicate on the "scenic_area_name" field.
func ScenicAreaNameEqualFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEqualFold(FieldScenicAreaName, v))
}

// ScenicAreaNameContainsFold applies the ContainsFold predicate on the "scenic_area_name" field.
func ScenicAreaNameContainsFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContainsFold(FieldScenicAreaName, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldUserID, v))
}

// OpenIDEQ applies the EQ predicate on the "open_id" field.
func OpenIDEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOpenID, v))
}

// OpenIDNEQ applies the NEQ predicate on the "open_id" field.
func OpenIDNEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldOpenID, v))
}

// OpenIDIn applies the In predicate on the "open_id" field.
func OpenIDIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldOpenID, vs...))
}

// OpenIDNotIn applies the NotIn predicate on the "open_id" field.
func OpenIDNotIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldOpenID, vs...))
}

// OpenIDGT applies the GT predicate on the "open_id" field.
func OpenIDGT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldOpenID, v))
}

// OpenIDGTE applies the GTE predicate on the "open_id" field.
func OpenIDGTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldOpenID, v))
}

// OpenIDLT applies the LT predicate on the "open_id" field.
func OpenIDLT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldOpenID, v))
}

// OpenIDLTE applies the LTE predicate on the "open_id" field.
func OpenIDLTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldOpenID, v))
}

// OpenIDContains applies the Contains predicate on the "open_id" field.
func OpenIDContains(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContains(FieldOpenID, v))
}

// OpenIDHasPrefix applies the HasPrefix predicate on the "open_id" field.
func OpenIDHasPrefix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasPrefix(FieldOpenID, v))
}

// OpenIDHasSuffix applies the HasSuffix predicate on the "open_id" field.
func OpenIDHasSuffix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasSuffix(FieldOpenID, v))
}

// OpenIDEqualFold applies the EqualFold predicate on the "open_id" field.
func OpenIDEqualFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEqualFold(FieldOpenID, v))
}

// OpenIDContainsFold applies the ContainsFold predicate on the "open_id" field.
func OpenIDContainsFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContainsFold(FieldOpenID, v))
}

// OrderAmountEQ applies the EQ predicate on the "order_amount" field.
func OrderAmountEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOrderAmount, v))
}

// OrderAmountNEQ applies the NEQ predicate on the "order_amount" field.
func OrderAmountNEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldOrderAmount, v))
}

// OrderAmountIn applies the In predicate on the "order_amount" field.
func OrderAmountIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldOrderAmount, vs...))
}

// OrderAmountNotIn applies the NotIn predicate on the "order_amount" field.
func OrderAmountNotIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldOrderAmount, vs...))
}

// OrderAmountGT applies the GT predicate on the "order_amount" field.
func OrderAmountGT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldOrderAmount, v))
}

// OrderAmountGTE applies the GTE predicate on the "order_amount" field.
func OrderAmountGTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldOrderAmount, v))
}

// OrderAmountLT applies the LT predicate on the "order_amount" field.
func OrderAmountLT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldOrderAmount, v))
}

// OrderAmountLTE applies the LTE predicate on the "order_amount" field.
func OrderAmountLTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldOrderAmount, v))
}

// OrderStateEQ applies the EQ predicate on the "order_state" field.
func OrderStateEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldOrderState, v))
}

// OrderStateNEQ applies the NEQ predicate on the "order_state" field.
func OrderStateNEQ(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldOrderState, v))
}

// OrderStateIn applies the In predicate on the "order_state" field.
func OrderStateIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldOrderState, vs...))
}

// OrderStateNotIn applies the NotIn predicate on the "order_state" field.
func OrderStateNotIn(vs ...int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldOrderState, vs...))
}

// OrderStateGT applies the GT predicate on the "order_state" field.
func OrderStateGT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldOrderState, v))
}

// OrderStateGTE applies the GTE predicate on the "order_state" field.
func OrderStateGTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldOrderState, v))
}

// OrderStateLT applies the LT predicate on the "order_state" field.
func OrderStateLT(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldOrderState, v))
}

// OrderStateLTE applies the LTE predicate on the "order_state" field.
func OrderStateLTE(v int) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldOrderState, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldContainsFold(FieldRemark, v))
}

// PaidTimeEQ applies the EQ predicate on the "paid_time" field.
func PaidTimeEQ(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldPaidTime, v))
}

// PaidTimeNEQ applies the NEQ predicate on the "paid_time" field.
func PaidTimeNEQ(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldPaidTime, v))
}

// PaidTimeIn applies the In predicate on the "paid_time" field.
func PaidTimeIn(vs ...time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldPaidTime, vs...))
}

// PaidTimeNotIn applies the NotIn predicate on the "paid_time" field.
func PaidTimeNotIn(vs ...time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldPaidTime, vs...))
}

// PaidTimeGT applies the GT predicate on the "paid_time" field.
func PaidTimeGT(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldPaidTime, v))
}

// PaidTimeGTE applies the GTE predicate on the "paid_time" field.
func PaidTimeGTE(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldPaidTime, v))
}

// PaidTimeLT applies the LT predicate on the "paid_time" field.
func PaidTimeLT(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldPaidTime, v))
}

// PaidTimeLTE applies the LTE predicate on the "paid_time" field.
func PaidTimeLTE(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldPaidTime, v))
}

// PaidTimeIsNil applies the IsNil predicate on the "paid_time" field.
func PaidTimeIsNil() predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIsNull(FieldPaidTime))
}

// PaidTimeNotNil applies the NotNil predicate on the "paid_time" field.
func PaidTimeNotNil() predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotNull(FieldPaidTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.FieldLTE(FieldUpdateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ActivityOrder) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ActivityOrder) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ActivityOrder) predicate.ActivityOrder {
	return predicate.ActivityOrder(sql.NotPredicates(p))
}
