// Code generated by ent, DO NOT EDIT.

package orderrefund

import (
	"github.com/jianbo-zh/jydata/database/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldID, id))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldType, v))
}

// InitiatorID applies equality check predicate on the "initiator_id" field. It's identical to InitiatorIDEQ.
func InitiatorID(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldInitiatorID, v))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldScenicAreaID, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldOrderID, v))
}

// OrderNo applies equality check predicate on the "order_no" field. It's identical to OrderNoEQ.
func OrderNo(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldOrderNo, v))
}

// RefundNo applies equality check predicate on the "refund_no" field. It's identical to RefundNoEQ.
func RefundNo(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldRefundNo, v))
}

// WxRefundID applies equality check predicate on the "wx_refund_id" field. It's identical to WxRefundIDEQ.
func WxRefundID(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldWxRefundID, v))
}

// RefundAmount applies equality check predicate on the "refund_amount" field. It's identical to RefundAmountEQ.
func RefundAmount(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldRefundAmount, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldState, v))
}

// Remark applies equality check predicate on the "remark" field. It's identical to RemarkEQ.
func Remark(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldRemark, v))
}

// Errmsg applies equality check predicate on the "errmsg" field. It's identical to ErrmsgEQ.
func Errmsg(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldErrmsg, v))
}

// FinishTime applies equality check predicate on the "finish_time" field. It's identical to FinishTimeEQ.
func FinishTime(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldFinishTime, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldUpdateTime, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldType, v))
}

// InitiatorIDEQ applies the EQ predicate on the "initiator_id" field.
func InitiatorIDEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldInitiatorID, v))
}

// InitiatorIDNEQ applies the NEQ predicate on the "initiator_id" field.
func InitiatorIDNEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldInitiatorID, v))
}

// InitiatorIDIn applies the In predicate on the "initiator_id" field.
func InitiatorIDIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldInitiatorID, vs...))
}

// InitiatorIDNotIn applies the NotIn predicate on the "initiator_id" field.
func InitiatorIDNotIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldInitiatorID, vs...))
}

// InitiatorIDGT applies the GT predicate on the "initiator_id" field.
func InitiatorIDGT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldInitiatorID, v))
}

// InitiatorIDGTE applies the GTE predicate on the "initiator_id" field.
func InitiatorIDGTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldInitiatorID, v))
}

// InitiatorIDLT applies the LT predicate on the "initiator_id" field.
func InitiatorIDLT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldInitiatorID, v))
}

// InitiatorIDLTE applies the LTE predicate on the "initiator_id" field.
func InitiatorIDLTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldInitiatorID, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDGT applies the GT predicate on the "scenic_area_id" field.
func ScenicAreaIDGT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldScenicAreaID, v))
}

// ScenicAreaIDGTE applies the GTE predicate on the "scenic_area_id" field.
func ScenicAreaIDGTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldScenicAreaID, v))
}

// ScenicAreaIDLT applies the LT predicate on the "scenic_area_id" field.
func ScenicAreaIDLT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldScenicAreaID, v))
}

// ScenicAreaIDLTE applies the LTE predicate on the "scenic_area_id" field.
func ScenicAreaIDLTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldScenicAreaID, v))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderNoEQ applies the EQ predicate on the "order_no" field.
func OrderNoEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldOrderNo, v))
}

// OrderNoNEQ applies the NEQ predicate on the "order_no" field.
func OrderNoNEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldOrderNo, v))
}

// OrderNoIn applies the In predicate on the "order_no" field.
func OrderNoIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldOrderNo, vs...))
}

// OrderNoNotIn applies the NotIn predicate on the "order_no" field.
func OrderNoNotIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldOrderNo, vs...))
}

// OrderNoGT applies the GT predicate on the "order_no" field.
func OrderNoGT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldOrderNo, v))
}

// OrderNoGTE applies the GTE predicate on the "order_no" field.
func OrderNoGTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldOrderNo, v))
}

// OrderNoLT applies the LT predicate on the "order_no" field.
func OrderNoLT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldOrderNo, v))
}

// OrderNoLTE applies the LTE predicate on the "order_no" field.
func OrderNoLTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldOrderNo, v))
}

// OrderNoContains applies the Contains predicate on the "order_no" field.
func OrderNoContains(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContains(FieldOrderNo, v))
}

// OrderNoHasPrefix applies the HasPrefix predicate on the "order_no" field.
func OrderNoHasPrefix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasPrefix(FieldOrderNo, v))
}

// OrderNoHasSuffix applies the HasSuffix predicate on the "order_no" field.
func OrderNoHasSuffix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasSuffix(FieldOrderNo, v))
}

// OrderNoEqualFold applies the EqualFold predicate on the "order_no" field.
func OrderNoEqualFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEqualFold(FieldOrderNo, v))
}

// OrderNoContainsFold applies the ContainsFold predicate on the "order_no" field.
func OrderNoContainsFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContainsFold(FieldOrderNo, v))
}

// RefundNoEQ applies the EQ predicate on the "refund_no" field.
func RefundNoEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldRefundNo, v))
}

// RefundNoNEQ applies the NEQ predicate on the "refund_no" field.
func RefundNoNEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldRefundNo, v))
}

// RefundNoIn applies the In predicate on the "refund_no" field.
func RefundNoIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldRefundNo, vs...))
}

// RefundNoNotIn applies the NotIn predicate on the "refund_no" field.
func RefundNoNotIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldRefundNo, vs...))
}

// RefundNoGT applies the GT predicate on the "refund_no" field.
func RefundNoGT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldRefundNo, v))
}

// RefundNoGTE applies the GTE predicate on the "refund_no" field.
func RefundNoGTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldRefundNo, v))
}

// RefundNoLT applies the LT predicate on the "refund_no" field.
func RefundNoLT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldRefundNo, v))
}

// RefundNoLTE applies the LTE predicate on the "refund_no" field.
func RefundNoLTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldRefundNo, v))
}

// RefundNoContains applies the Contains predicate on the "refund_no" field.
func RefundNoContains(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContains(FieldRefundNo, v))
}

// RefundNoHasPrefix applies the HasPrefix predicate on the "refund_no" field.
func RefundNoHasPrefix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasPrefix(FieldRefundNo, v))
}

// RefundNoHasSuffix applies the HasSuffix predicate on the "refund_no" field.
func RefundNoHasSuffix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasSuffix(FieldRefundNo, v))
}

// RefundNoEqualFold applies the EqualFold predicate on the "refund_no" field.
func RefundNoEqualFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEqualFold(FieldRefundNo, v))
}

// RefundNoContainsFold applies the ContainsFold predicate on the "refund_no" field.
func RefundNoContainsFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContainsFold(FieldRefundNo, v))
}

// WxRefundIDEQ applies the EQ predicate on the "wx_refund_id" field.
func WxRefundIDEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldWxRefundID, v))
}

// WxRefundIDNEQ applies the NEQ predicate on the "wx_refund_id" field.
func WxRefundIDNEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldWxRefundID, v))
}

// WxRefundIDIn applies the In predicate on the "wx_refund_id" field.
func WxRefundIDIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldWxRefundID, vs...))
}

// WxRefundIDNotIn applies the NotIn predicate on the "wx_refund_id" field.
func WxRefundIDNotIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldWxRefundID, vs...))
}

// WxRefundIDGT applies the GT predicate on the "wx_refund_id" field.
func WxRefundIDGT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldWxRefundID, v))
}

// WxRefundIDGTE applies the GTE predicate on the "wx_refund_id" field.
func WxRefundIDGTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldWxRefundID, v))
}

// WxRefundIDLT applies the LT predicate on the "wx_refund_id" field.
func WxRefundIDLT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldWxRefundID, v))
}

// WxRefundIDLTE applies the LTE predicate on the "wx_refund_id" field.
func WxRefundIDLTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldWxRefundID, v))
}

// WxRefundIDContains applies the Contains predicate on the "wx_refund_id" field.
func WxRefundIDContains(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContains(FieldWxRefundID, v))
}

// WxRefundIDHasPrefix applies the HasPrefix predicate on the "wx_refund_id" field.
func WxRefundIDHasPrefix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasPrefix(FieldWxRefundID, v))
}

// WxRefundIDHasSuffix applies the HasSuffix predicate on the "wx_refund_id" field.
func WxRefundIDHasSuffix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasSuffix(FieldWxRefundID, v))
}

// WxRefundIDEqualFold applies the EqualFold predicate on the "wx_refund_id" field.
func WxRefundIDEqualFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEqualFold(FieldWxRefundID, v))
}

// WxRefundIDContainsFold applies the ContainsFold predicate on the "wx_refund_id" field.
func WxRefundIDContainsFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContainsFold(FieldWxRefundID, v))
}

// RefundAmountEQ applies the EQ predicate on the "refund_amount" field.
func RefundAmountEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldRefundAmount, v))
}

// RefundAmountNEQ applies the NEQ predicate on the "refund_amount" field.
func RefundAmountNEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldRefundAmount, v))
}

// RefundAmountIn applies the In predicate on the "refund_amount" field.
func RefundAmountIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldRefundAmount, vs...))
}

// RefundAmountNotIn applies the NotIn predicate on the "refund_amount" field.
func RefundAmountNotIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldRefundAmount, vs...))
}

// RefundAmountGT applies the GT predicate on the "refund_amount" field.
func RefundAmountGT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldRefundAmount, v))
}

// RefundAmountGTE applies the GTE predicate on the "refund_amount" field.
func RefundAmountGTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldRefundAmount, v))
}

// RefundAmountLT applies the LT predicate on the "refund_amount" field.
func RefundAmountLT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldRefundAmount, v))
}

// RefundAmountLTE applies the LTE predicate on the "refund_amount" field.
func RefundAmountLTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldRefundAmount, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v int) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldState, v))
}

// RemarkEQ applies the EQ predicate on the "remark" field.
func RemarkEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldRemark, v))
}

// RemarkNEQ applies the NEQ predicate on the "remark" field.
func RemarkNEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldRemark, v))
}

// RemarkIn applies the In predicate on the "remark" field.
func RemarkIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldRemark, vs...))
}

// RemarkNotIn applies the NotIn predicate on the "remark" field.
func RemarkNotIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldRemark, vs...))
}

// RemarkGT applies the GT predicate on the "remark" field.
func RemarkGT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldRemark, v))
}

// RemarkGTE applies the GTE predicate on the "remark" field.
func RemarkGTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldRemark, v))
}

// RemarkLT applies the LT predicate on the "remark" field.
func RemarkLT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldRemark, v))
}

// RemarkLTE applies the LTE predicate on the "remark" field.
func RemarkLTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldRemark, v))
}

// RemarkContains applies the Contains predicate on the "remark" field.
func RemarkContains(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContains(FieldRemark, v))
}

// RemarkHasPrefix applies the HasPrefix predicate on the "remark" field.
func RemarkHasPrefix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasPrefix(FieldRemark, v))
}

// RemarkHasSuffix applies the HasSuffix predicate on the "remark" field.
func RemarkHasSuffix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasSuffix(FieldRemark, v))
}

// RemarkEqualFold applies the EqualFold predicate on the "remark" field.
func RemarkEqualFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEqualFold(FieldRemark, v))
}

// RemarkContainsFold applies the ContainsFold predicate on the "remark" field.
func RemarkContainsFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContainsFold(FieldRemark, v))
}

// ErrmsgEQ applies the EQ predicate on the "errmsg" field.
func ErrmsgEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldErrmsg, v))
}

// ErrmsgNEQ applies the NEQ predicate on the "errmsg" field.
func ErrmsgNEQ(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldErrmsg, v))
}

// ErrmsgIn applies the In predicate on the "errmsg" field.
func ErrmsgIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldErrmsg, vs...))
}

// ErrmsgNotIn applies the NotIn predicate on the "errmsg" field.
func ErrmsgNotIn(vs ...string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldErrmsg, vs...))
}

// ErrmsgGT applies the GT predicate on the "errmsg" field.
func ErrmsgGT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldErrmsg, v))
}

// ErrmsgGTE applies the GTE predicate on the "errmsg" field.
func ErrmsgGTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldErrmsg, v))
}

// ErrmsgLT applies the LT predicate on the "errmsg" field.
func ErrmsgLT(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldErrmsg, v))
}

// ErrmsgLTE applies the LTE predicate on the "errmsg" field.
func ErrmsgLTE(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldErrmsg, v))
}

// ErrmsgContains applies the Contains predicate on the "errmsg" field.
func ErrmsgContains(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContains(FieldErrmsg, v))
}

// ErrmsgHasPrefix applies the HasPrefix predicate on the "errmsg" field.
func ErrmsgHasPrefix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasPrefix(FieldErrmsg, v))
}

// ErrmsgHasSuffix applies the HasSuffix predicate on the "errmsg" field.
func ErrmsgHasSuffix(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldHasSuffix(FieldErrmsg, v))
}

// ErrmsgEqualFold applies the EqualFold predicate on the "errmsg" field.
func ErrmsgEqualFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEqualFold(FieldErrmsg, v))
}

// ErrmsgContainsFold applies the ContainsFold predicate on the "errmsg" field.
func ErrmsgContainsFold(v string) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldContainsFold(FieldErrmsg, v))
}

// FinishTimeEQ applies the EQ predicate on the "finish_time" field.
func FinishTimeEQ(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldFinishTime, v))
}

// FinishTimeNEQ applies the NEQ predicate on the "finish_time" field.
func FinishTimeNEQ(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldFinishTime, v))
}

// FinishTimeIn applies the In predicate on the "finish_time" field.
func FinishTimeIn(vs ...time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldFinishTime, vs...))
}

// FinishTimeNotIn applies the NotIn predicate on the "finish_time" field.
func FinishTimeNotIn(vs ...time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldFinishTime, vs...))
}

// FinishTimeGT applies the GT predicate on the "finish_time" field.
func FinishTimeGT(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldFinishTime, v))
}

// FinishTimeGTE applies the GTE predicate on the "finish_time" field.
func FinishTimeGTE(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldFinishTime, v))
}

// FinishTimeLT applies the LT predicate on the "finish_time" field.
func FinishTimeLT(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldFinishTime, v))
}

// FinishTimeLTE applies the LTE predicate on the "finish_time" field.
func FinishTimeLTE(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldFinishTime, v))
}

// FinishTimeIsNil applies the IsNil predicate on the "finish_time" field.
func FinishTimeIsNil() predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIsNull(FieldFinishTime))
}

// FinishTimeNotNil applies the NotNil predicate on the "finish_time" field.
func FinishTimeNotNil() predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotNull(FieldFinishTime))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.OrderRefund {
	return predicate.OrderRefund(sql.FieldLTE(FieldUpdateTime, v))
}

// HasOrder applies the HasEdge predicate on the "order" edge.
func HasOrder() predicate.OrderRefund {
	return predicate.OrderRefund(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OrderTable, OrderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrderWith applies the HasEdge predicate on the "order" edge with a given conditions (other predicates).
func HasOrderWith(preds ...predicate.Order) predicate.OrderRefund {
	return predicate.OrderRefund(func(s *sql.Selector) {
		step := newOrderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderRefund) predicate.OrderRefund {
	return predicate.OrderRefund(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderRefund) predicate.OrderRefund {
	return predicate.OrderRefund(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderRefund) predicate.OrderRefund {
	return predicate.OrderRefund(sql.NotPredicates(p))
}
