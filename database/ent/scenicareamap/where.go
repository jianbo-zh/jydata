// Code generated by ent, DO NOT EDIT.

package scenicareamap

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/jianbo-zh/jydata/database/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldID, id))
}

// ScenicAreaID applies equality check predicate on the "scenic_area_id" field. It's identical to ScenicAreaIDEQ.
func ScenicAreaID(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldScenicAreaID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldName, v))
}

// BaseMapFileID applies equality check predicate on the "base_map_file_id" field. It's identical to BaseMapFileIDEQ.
func BaseMapFileID(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldBaseMapFileID, v))
}

// RoutingMapFileID applies equality check predicate on the "routing_map_file_id" field. It's identical to RoutingMapFileIDEQ.
func RoutingMapFileID(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldRoutingMapFileID, v))
}

// SimMapFileID applies equality check predicate on the "sim_map_file_id" field. It's identical to SimMapFileIDEQ.
func SimMapFileID(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldSimMapFileID, v))
}

// FenceMapFileID applies equality check predicate on the "fence_map_file_id" field. It's identical to FenceMapFileIDEQ.
func FenceMapFileID(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldFenceMapFileID, v))
}

// CaruiMapFileID applies equality check predicate on the "carui_map_file_id" field. It's identical to CaruiMapFileIDEQ.
func CaruiMapFileID(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCaruiMapFileID, v))
}

// CaruiNeCoord applies equality check predicate on the "carui_ne_coord" field. It's identical to CaruiNeCoordEQ.
func CaruiNeCoord(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCaruiNeCoord, v))
}

// CaruiSwCoord applies equality check predicate on the "carui_sw_coord" field. It's identical to CaruiSwCoordEQ.
func CaruiSwCoord(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCaruiSwCoord, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldUpdateTime, v))
}

// ScenicAreaIDEQ applies the EQ predicate on the "scenic_area_id" field.
func ScenicAreaIDEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDNEQ applies the NEQ predicate on the "scenic_area_id" field.
func ScenicAreaIDNEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldScenicAreaID, v))
}

// ScenicAreaIDIn applies the In predicate on the "scenic_area_id" field.
func ScenicAreaIDIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldScenicAreaID, vs...))
}

// ScenicAreaIDNotIn applies the NotIn predicate on the "scenic_area_id" field.
func ScenicAreaIDNotIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldScenicAreaID, vs...))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldContainsFold(FieldName, v))
}

// BaseMapFileIDEQ applies the EQ predicate on the "base_map_file_id" field.
func BaseMapFileIDEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldBaseMapFileID, v))
}

// BaseMapFileIDNEQ applies the NEQ predicate on the "base_map_file_id" field.
func BaseMapFileIDNEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldBaseMapFileID, v))
}

// BaseMapFileIDIn applies the In predicate on the "base_map_file_id" field.
func BaseMapFileIDIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldBaseMapFileID, vs...))
}

// BaseMapFileIDNotIn applies the NotIn predicate on the "base_map_file_id" field.
func BaseMapFileIDNotIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldBaseMapFileID, vs...))
}

// BaseMapFileIDGT applies the GT predicate on the "base_map_file_id" field.
func BaseMapFileIDGT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldBaseMapFileID, v))
}

// BaseMapFileIDGTE applies the GTE predicate on the "base_map_file_id" field.
func BaseMapFileIDGTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldBaseMapFileID, v))
}

// BaseMapFileIDLT applies the LT predicate on the "base_map_file_id" field.
func BaseMapFileIDLT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldBaseMapFileID, v))
}

// BaseMapFileIDLTE applies the LTE predicate on the "base_map_file_id" field.
func BaseMapFileIDLTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldBaseMapFileID, v))
}

// RoutingMapFileIDEQ applies the EQ predicate on the "routing_map_file_id" field.
func RoutingMapFileIDEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldRoutingMapFileID, v))
}

// RoutingMapFileIDNEQ applies the NEQ predicate on the "routing_map_file_id" field.
func RoutingMapFileIDNEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldRoutingMapFileID, v))
}

// RoutingMapFileIDIn applies the In predicate on the "routing_map_file_id" field.
func RoutingMapFileIDIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldRoutingMapFileID, vs...))
}

// RoutingMapFileIDNotIn applies the NotIn predicate on the "routing_map_file_id" field.
func RoutingMapFileIDNotIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldRoutingMapFileID, vs...))
}

// RoutingMapFileIDGT applies the GT predicate on the "routing_map_file_id" field.
func RoutingMapFileIDGT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldRoutingMapFileID, v))
}

// RoutingMapFileIDGTE applies the GTE predicate on the "routing_map_file_id" field.
func RoutingMapFileIDGTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldRoutingMapFileID, v))
}

// RoutingMapFileIDLT applies the LT predicate on the "routing_map_file_id" field.
func RoutingMapFileIDLT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldRoutingMapFileID, v))
}

// RoutingMapFileIDLTE applies the LTE predicate on the "routing_map_file_id" field.
func RoutingMapFileIDLTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldRoutingMapFileID, v))
}

// SimMapFileIDEQ applies the EQ predicate on the "sim_map_file_id" field.
func SimMapFileIDEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldSimMapFileID, v))
}

// SimMapFileIDNEQ applies the NEQ predicate on the "sim_map_file_id" field.
func SimMapFileIDNEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldSimMapFileID, v))
}

// SimMapFileIDIn applies the In predicate on the "sim_map_file_id" field.
func SimMapFileIDIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldSimMapFileID, vs...))
}

// SimMapFileIDNotIn applies the NotIn predicate on the "sim_map_file_id" field.
func SimMapFileIDNotIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldSimMapFileID, vs...))
}

// SimMapFileIDGT applies the GT predicate on the "sim_map_file_id" field.
func SimMapFileIDGT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldSimMapFileID, v))
}

// SimMapFileIDGTE applies the GTE predicate on the "sim_map_file_id" field.
func SimMapFileIDGTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldSimMapFileID, v))
}

// SimMapFileIDLT applies the LT predicate on the "sim_map_file_id" field.
func SimMapFileIDLT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldSimMapFileID, v))
}

// SimMapFileIDLTE applies the LTE predicate on the "sim_map_file_id" field.
func SimMapFileIDLTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldSimMapFileID, v))
}

// FenceMapFileIDEQ applies the EQ predicate on the "fence_map_file_id" field.
func FenceMapFileIDEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldFenceMapFileID, v))
}

// FenceMapFileIDNEQ applies the NEQ predicate on the "fence_map_file_id" field.
func FenceMapFileIDNEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldFenceMapFileID, v))
}

// FenceMapFileIDIn applies the In predicate on the "fence_map_file_id" field.
func FenceMapFileIDIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldFenceMapFileID, vs...))
}

// FenceMapFileIDNotIn applies the NotIn predicate on the "fence_map_file_id" field.
func FenceMapFileIDNotIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldFenceMapFileID, vs...))
}

// FenceMapFileIDGT applies the GT predicate on the "fence_map_file_id" field.
func FenceMapFileIDGT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldFenceMapFileID, v))
}

// FenceMapFileIDGTE applies the GTE predicate on the "fence_map_file_id" field.
func FenceMapFileIDGTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldFenceMapFileID, v))
}

// FenceMapFileIDLT applies the LT predicate on the "fence_map_file_id" field.
func FenceMapFileIDLT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldFenceMapFileID, v))
}

// FenceMapFileIDLTE applies the LTE predicate on the "fence_map_file_id" field.
func FenceMapFileIDLTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldFenceMapFileID, v))
}

// CaruiMapFileIDEQ applies the EQ predicate on the "carui_map_file_id" field.
func CaruiMapFileIDEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCaruiMapFileID, v))
}

// CaruiMapFileIDNEQ applies the NEQ predicate on the "carui_map_file_id" field.
func CaruiMapFileIDNEQ(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldCaruiMapFileID, v))
}

// CaruiMapFileIDIn applies the In predicate on the "carui_map_file_id" field.
func CaruiMapFileIDIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldCaruiMapFileID, vs...))
}

// CaruiMapFileIDNotIn applies the NotIn predicate on the "carui_map_file_id" field.
func CaruiMapFileIDNotIn(vs ...int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldCaruiMapFileID, vs...))
}

// CaruiMapFileIDGT applies the GT predicate on the "carui_map_file_id" field.
func CaruiMapFileIDGT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldCaruiMapFileID, v))
}

// CaruiMapFileIDGTE applies the GTE predicate on the "carui_map_file_id" field.
func CaruiMapFileIDGTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldCaruiMapFileID, v))
}

// CaruiMapFileIDLT applies the LT predicate on the "carui_map_file_id" field.
func CaruiMapFileIDLT(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldCaruiMapFileID, v))
}

// CaruiMapFileIDLTE applies the LTE predicate on the "carui_map_file_id" field.
func CaruiMapFileIDLTE(v int) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldCaruiMapFileID, v))
}

// CaruiNeCoordEQ applies the EQ predicate on the "carui_ne_coord" field.
func CaruiNeCoordEQ(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCaruiNeCoord, v))
}

// CaruiNeCoordNEQ applies the NEQ predicate on the "carui_ne_coord" field.
func CaruiNeCoordNEQ(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldCaruiNeCoord, v))
}

// CaruiNeCoordIn applies the In predicate on the "carui_ne_coord" field.
func CaruiNeCoordIn(vs ...string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldCaruiNeCoord, vs...))
}

// CaruiNeCoordNotIn applies the NotIn predicate on the "carui_ne_coord" field.
func CaruiNeCoordNotIn(vs ...string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldCaruiNeCoord, vs...))
}

// CaruiNeCoordGT applies the GT predicate on the "carui_ne_coord" field.
func CaruiNeCoordGT(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldCaruiNeCoord, v))
}

// CaruiNeCoordGTE applies the GTE predicate on the "carui_ne_coord" field.
func CaruiNeCoordGTE(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldCaruiNeCoord, v))
}

// CaruiNeCoordLT applies the LT predicate on the "carui_ne_coord" field.
func CaruiNeCoordLT(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldCaruiNeCoord, v))
}

// CaruiNeCoordLTE applies the LTE predicate on the "carui_ne_coord" field.
func CaruiNeCoordLTE(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldCaruiNeCoord, v))
}

// CaruiNeCoordContains applies the Contains predicate on the "carui_ne_coord" field.
func CaruiNeCoordContains(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldContains(FieldCaruiNeCoord, v))
}

// CaruiNeCoordHasPrefix applies the HasPrefix predicate on the "carui_ne_coord" field.
func CaruiNeCoordHasPrefix(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldHasPrefix(FieldCaruiNeCoord, v))
}

// CaruiNeCoordHasSuffix applies the HasSuffix predicate on the "carui_ne_coord" field.
func CaruiNeCoordHasSuffix(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldHasSuffix(FieldCaruiNeCoord, v))
}

// CaruiNeCoordEqualFold applies the EqualFold predicate on the "carui_ne_coord" field.
func CaruiNeCoordEqualFold(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEqualFold(FieldCaruiNeCoord, v))
}

// CaruiNeCoordContainsFold applies the ContainsFold predicate on the "carui_ne_coord" field.
func CaruiNeCoordContainsFold(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldContainsFold(FieldCaruiNeCoord, v))
}

// CaruiSwCoordEQ applies the EQ predicate on the "carui_sw_coord" field.
func CaruiSwCoordEQ(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCaruiSwCoord, v))
}

// CaruiSwCoordNEQ applies the NEQ predicate on the "carui_sw_coord" field.
func CaruiSwCoordNEQ(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldCaruiSwCoord, v))
}

// CaruiSwCoordIn applies the In predicate on the "carui_sw_coord" field.
func CaruiSwCoordIn(vs ...string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldCaruiSwCoord, vs...))
}

// CaruiSwCoordNotIn applies the NotIn predicate on the "carui_sw_coord" field.
func CaruiSwCoordNotIn(vs ...string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldCaruiSwCoord, vs...))
}

// CaruiSwCoordGT applies the GT predicate on the "carui_sw_coord" field.
func CaruiSwCoordGT(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldCaruiSwCoord, v))
}

// CaruiSwCoordGTE applies the GTE predicate on the "carui_sw_coord" field.
func CaruiSwCoordGTE(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldCaruiSwCoord, v))
}

// CaruiSwCoordLT applies the LT predicate on the "carui_sw_coord" field.
func CaruiSwCoordLT(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldCaruiSwCoord, v))
}

// CaruiSwCoordLTE applies the LTE predicate on the "carui_sw_coord" field.
func CaruiSwCoordLTE(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldCaruiSwCoord, v))
}

// CaruiSwCoordContains applies the Contains predicate on the "carui_sw_coord" field.
func CaruiSwCoordContains(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldContains(FieldCaruiSwCoord, v))
}

// CaruiSwCoordHasPrefix applies the HasPrefix predicate on the "carui_sw_coord" field.
func CaruiSwCoordHasPrefix(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldHasPrefix(FieldCaruiSwCoord, v))
}

// CaruiSwCoordHasSuffix applies the HasSuffix predicate on the "carui_sw_coord" field.
func CaruiSwCoordHasSuffix(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldHasSuffix(FieldCaruiSwCoord, v))
}

// CaruiSwCoordEqualFold applies the EqualFold predicate on the "carui_sw_coord" field.
func CaruiSwCoordEqualFold(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEqualFold(FieldCaruiSwCoord, v))
}

// CaruiSwCoordContainsFold applies the ContainsFold predicate on the "carui_sw_coord" field.
func CaruiSwCoordContainsFold(v string) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldContainsFold(FieldCaruiSwCoord, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.FieldLTE(FieldUpdateTime, v))
}

// HasBackgroundScenicArea applies the HasEdge predicate on the "background_scenic_area" edge.
func HasBackgroundScenicArea() predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, BackgroundScenicAreaTable, BackgroundScenicAreaColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasBackgroundScenicAreaWith applies the HasEdge predicate on the "background_scenic_area" edge with a given conditions (other predicates).
func HasBackgroundScenicAreaWith(preds ...predicate.ScenicArea) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(func(s *sql.Selector) {
		step := newBackgroundScenicAreaStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ScenicAreaMap) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ScenicAreaMap) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ScenicAreaMap) predicate.ScenicAreaMap {
	return predicate.ScenicAreaMap(sql.NotPredicates(p))
}
